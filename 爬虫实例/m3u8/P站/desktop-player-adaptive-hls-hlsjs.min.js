/*! For license information please see desktop-player-adaptive-hls-hlsjs.min.js.LICENSE.txt */
(() => {
    var e = {
        132: (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {default: () => u});
            var r = n(637), i = n.n(r), a = n(521), o = n.n(a), s = n(21), l = n(418), d = i()(!1), c = o()(s.Z),
                p = o()(l.Z);
            d.push([e.id, '.mgp_container{height:100% !important;width:100% !important;position:relative;background:#000;overflow:hidden;font-family:Arial,sans-serif;color:#fff}.mgp_container div,.mgp_container span,.mgp_container applet,.mgp_container object,.mgp_container iframe,.mgp_container h1,.mgp_container h2,.mgp_container h3,.mgp_container h4,.mgp_container h5,.mgp_container h6,.mgp_container p,.mgp_container blockquote,.mgp_container pre,.mgp_container a,.mgp_container abbr,.mgp_container acronym,.mgp_container address,.mgp_container big,.mgp_container cite,.mgp_container code,.mgp_container del,.mgp_container dfn,.mgp_container em,.mgp_container img,.mgp_container ins,.mgp_container kbd,.mgp_container q,.mgp_container s,.mgp_container samp,.mgp_container small,.mgp_container strike,.mgp_container strong,.mgp_container sub,.mgp_container sup,.mgp_container tt,.mgp_container var,.mgp_container b,.mgp_container u,.mgp_container i,.mgp_container center,.mgp_container dl,.mgp_container dt,.mgp_container dd,.mgp_container ol,.mgp_container ul,.mgp_container li,.mgp_container fieldset,.mgp_container form,.mgp_container label,.mgp_container legend,.mgp_container table,.mgp_container caption,.mgp_container tbody,.mgp_container tfoot,.mgp_container thead,.mgp_container tr,.mgp_container th,.mgp_container td,.mgp_container article,.mgp_container aside,.mgp_container canvas,.mgp_container details,.mgp_container embed,.mgp_container figure,.mgp_container figcaption,.mgp_container footer,.mgp_container header,.mgp_container hgroup,.mgp_container menu,.mgp_container nav,.mgp_container output,.mgp_container ruby,.mgp_container section,.mgp_container summary,.mgp_container time,.mgp_container mark,.mgp_container audio,.mgp_container video{margin:0;padding:0;border:0;font:inherit;font-size:100%;vertical-align:baseline}.mgp_container article,.mgp_container aside,.mgp_container details,.mgp_container figcaption,.mgp_container figure,.mgp_container footer,.mgp_container header,.mgp_container hgroup,.mgp_container menu,.mgp_container nav,.mgp_container section{display:block}.mgp_container ol,.mgp_container ul{list-style:none}.mgp_container blockquote,.mgp_container q{quotes:none}.mgp_container blockquote:before,.mgp_container blockquote:after,.mgp_container q:before,.mgp_container q:after{content:"";content:none}.mgp_container table{border-collapse:collapse;border-spacing:0}.mgp_container video{border:none}.mgp_container .mgp_videoWrapper{position:absolute;top:0;left:0;z-index:1;width:100%;height:100%}.mgp_container .mgp_videoWrapper video,.mgp_container .mgp_videoWrapper canvas{position:absolute;top:0;left:0;z-index:0}.mgp_container .mgp_videoWrapper canvas{height:100%;width:100%}.mgp_container button{overflow:visible}.mgp_container button::-moz-focus-inner,.mgp_container input::-moz-focus-inner{padding:0;border:0}.mgp_container *{outline:none}.mgp_container .mgp_volumeEventCatcher{position:absolute;top:0;left:0;opacity:.5}.mgp_container,.mgp_container *{-o-user-select:none;-webkit-user-select:none;-moz-user-select:-moz-none;-khtml-user-select:none;-ms-user-select:none;user-select:none}.mgp_container *::selection{background:transparent}@font-face{font-family:"icon-font";font-style:normal;font-weight:400;font-display:auto;src:url(' + c + ') format("woff"),url(' + p + ') format("truetype")}.mgp_container .mgp_icon{font-family:"icon-font" !important;speak:none !important;font-style:normal !important;font-weight:normal !important;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased !important;-moz-osx-font-smoothing:grayscale !important}.mgp_container .mgp_icon-copy::before{content:"" !important}.mgp_container .mgp_icon-error::before{content:"" !important}.mgp_container .mgp_icon-fast-forward::before{content:"" !important}.mgp_container .mgp_icon-fullscreen::before{content:"" !important}.mgp_container .mgp_icon-fullscreen-exit::before{content:"" !important}.mgp_container .mgp_icon-info::before{content:"" !important}.mgp_container .mgp_icon-next::before{content:"" !important}.mgp_container .mgp_icon-pause::before{content:"" !important}.mgp_container .mgp_icon-play::before{content:"" !important}.mgp_container .mgp_icon-quality::before{content:"" !important}.mgp_container .mgp_icon-replay::before{content:"" !important}.mgp_container .mgp_icon-share::before{content:"" !important}.mgp_container .mgp_icon-share-round::before{content:"" !important}.mgp_container .mgp_icon-size-large::before{content:"" !important}.mgp_container .mgp_icon-size-medium::before{content:"" !important}.mgp_container .mgp_icon-volume-full::before{content:"" !important}.mgp_container .mgp_icon-volume-low::before{content:"" !important}.mgp_container .mgp_icon-volume-mute::before{content:"" !important}.mgp_container .mgp_icon-vr::before{content:"" !important}.mgp_container .mgp_icon-vr-clear::before{content:"" !important}.mgp_container .mgp_icon-action-tags::before{content:"" !important}.mgp_container .mgp_icon-grid-thumb-up::before{content:"" !important}.mgp_container .mgp_icon-grid-views::before{content:"" !important}.mgp_container .mgp_videoWrapper video{height:100%;width:100%}.mgp_container .mgp_videoPoster{background-color:#000;display:none;height:100%;left:0;overflow:hidden;position:absolute;top:0;width:100%;z-index:2}.mgp_container .mgp_videoPoster img{height:auto;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);width:100%}.mgp_container .mgp_thumbnails{position:absolute;left:0;right:0;z-index:6;pointer-events:none;opacity:1;transition:opacity .2s linear,transform .1s ease-out}.mgp_container .mgp_thumbnails.mgp_hidden{transform:translate(0, -10px);opacity:0}.mgp_container .mgp_thumbnails.mgp_disabled{opacity:0 !important}.mgp_container .mgp_thumbnails.mgp_thumbLoading{display:none}.mgp_container .mgp_thumbnails.mgp_crop9x16 .mgp_rect{min-width:50px}.mgp_container .mgp_thumbnails.mgp_crop9x16 .mgp_rect .mgp_sprite{max-width:50px}.mgp_container .mgp_thumbnails.mgp_crop9x16 .mgp_rect .mgp_sprite .mgp_image{margin-left:-54px}.mgp_container .mgp_thumbnails.mgp_crop9x16.mgp_frame4x3 .mgp_rect .mgp_sprite .mgp_image{margin-left:-33px}.mgp_container .mgp_thumbnails.mgp_squish9x16 .mgp_rect{min-width:50px;max-width:56px}.mgp_container .mgp_thumbnails.mgp_squish9x16 .mgp_rect .mgp_sprite{transform:scale(0.3125, 1);transform-origin:0 0}.mgp_container .mgp_thumbnails.mgp_squish9x16 .mgp_rect .mgp_sprite .mgp_image{margin-left:0}.mgp_container .mgp_thumbnails.mgp_crop9x16 .mgp_actionTagTitle,.mgp_container .mgp_thumbnails.mgp_squish9x16 .mgp_actionTagTitle{max-width:56px;padding:3px 0}.mgp_container .mgp_thumbnails.mgp_crop4x3 .mgp_rect .mgp_sprite{max-width:120px}.mgp_container .mgp_thumbnails.mgp_crop4x3 .mgp_rect .mgp_sprite .mgp_image{margin-left:-20px}.mgp_container .mgp_thumbnails.mgp_zoom16x9 .mgp_rect .mgp_crop{width:160px;height:90px;overflow:hidden}.mgp_container .mgp_thumbnails.mgp_zoom16x9 .mgp_rect .mgp_sprite{transform:scale(1.333);transform-origin:0 0}.mgp_container .mgp_thumbnails.mgp_zoom16x9 .mgp_rect .mgp_sprite .mgp_image{margin-top:-11px}.mgp_container .mgp_thumbnails .mgp_actionTagTitle{background:rgba(0,0,0,.75);border-radius:0;position:relative;margin:0 -3px -25px;max-width:166px;line-height:16px;padding:3px 10px;text-align:center;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;display:none}.mgp_container .mgp_thumbnails .mgp_rect{position:absolute;left:0;bottom:0;background:rgba(0,0,0,.75);border:3px solid transparent;min-height:24px;min-width:60px;max-width:166px}.mgp_container .mgp_thumbnails .mgp_rect.mgp_noImage .mgp_crop{display:none}.mgp_container .mgp_thumbnails .mgp_rect.mgp_noImage .mgp_sprite{display:none}.mgp_container .mgp_thumbnails .mgp_rect .mgp_sprite{max-width:160px;overflow:hidden;position:relative}.mgp_container .mgp_thumbnails .mgp_rect .mgp_sprite .mgp_image,.mgp_container .mgp_thumbnails .mgp_rect .mgp_sprite .mgp_cache{position:absolute;top:0;left:0}.mgp_container .mgp_thumbnails .mgp_rect .mgp_sprite .mgp_cache{visibility:hidden}.mgp_container .mgp_thumbnails .mgp_rect .mgp_shadow{position:absolute;bottom:0;left:0;right:0;height:27px;background:linear-gradient(to top, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0) 100%)}.mgp_container .mgp_thumbnails .mgp_rect .mgp_selectedTime{position:absolute;bottom:-3px;left:0;right:0;line-height:24px;text-align:center;z-index:2}.mgp_container.mgp_hideControls .mgp_thumbnails{display:none}.mgp_container.mgp_mobile .mgp_thumbnails .mgp_rect .mgp_actionTagTitle{margin:0 0 -22px 50%;box-shadow:none;background:transparent}.mgp_container.mgp_mobile.mgp_showFwdRwd .mgp_thumbnails{display:block;top:0;bottom:10px}.mgp_container.mgp_mobile.mgp_showFwdRwd .mgp_thumbnails.mgp_thumbLoading{display:none !important}.mgp_container.mgp_mobile.mgp_showFwdRwd .mgp_thumbnails.mgp_leftSide .mgp_rect{left:25%;bottom:50%;transform:translate3d(-50%, 50%, 0) !important}.mgp_container.mgp_mobile.mgp_showFwdRwd .mgp_thumbnails.mgp_rightSide .mgp_rect{left:75%;bottom:50%;transform:translate3d(-50%, 50%, 0) !important}.mgp_container .mgp_ccContainer.mgp_size_0_5 .mgp_text{font-size:.5em}.mgp_container .mgp_ccContainer.mgp_size_0_75 .mgp_text{font-size:.75em}.mgp_container .mgp_ccContainer.mgp_size_1 .mgp_text{font-size:1em}.mgp_container .mgp_ccContainer.mgp_size_1_25 .mgp_text{font-size:1.25em}.mgp_container .mgp_ccContainer.mgp_size_1_5 .mgp_text{font-size:1.5em}.mgp_container .mgp_ccContainer.mgp_color_white .mgp_text{color:#fff}.mgp_container .mgp_ccContainer.mgp_color_black .mgp_text{color:#000}.mgp_container .mgp_ccContainer.mgp_color_cyan .mgp_text{color:#00b6f2}.mgp_container .mgp_ccContainer.mgp_color_magenta .mgp_text{color:#f6569e}.mgp_container .mgp_ccContainer.mgp_color_yellow .mgp_text{color:#fff22f}.mgp_container .mgp_ccContainer.mgp_bg_0_0 .mgp_text:after{opacity:0}.mgp_container .mgp_ccContainer.mgp_bg_0_25 .mgp_text:after{opacity:.25}.mgp_container .mgp_ccContainer.mgp_bg_0_5 .mgp_text:after{opacity:.5}.mgp_container .mgp_ccContainer.mgp_bg_0_75 .mgp_text:after{opacity:.75}.mgp_container .mgp_ccContainer.mgp_bg_1_0 .mgp_text:after{opacity:1}.mgp_container .mgp_ccContainer.mgp_bg_color_white .mgp_text:after{background:#fff}.mgp_container .mgp_ccContainer.mgp_bg_color_black .mgp_text:after{background:#000}.mgp_container .mgp_ccContainer.mgp_bg_color_cyan .mgp_text:after{background:#00b6f2}.mgp_container .mgp_ccContainer.mgp_bg_color_magenta .mgp_text:after{background:#f6569e}.mgp_container .mgp_ccContainer.mgp_bg_color_yellow .mgp_text:after{background:#fff22f}.mgp_container.mgp_airplay .mgp_ccContainer,.mgp_container.mgp_casting .mgp_ccContainer{display:none !important}.mgp_container.mgp_showGrid.mgp_mobile .mgp_playerStateIcon{display:none}.mgp_container.mgp_showGrid>.mgp_share{display:none !important}.mgp_container.mgp_showGrid .mgp_gridMenu{display:block;z-index:5}.mgp_container.mgp_showGrid .mgp_gridMenu .mgp_gridContainer{opacity:1}.mgp_container.mgp_showGrid .mgp_controlBar .mgp_grid .mgp_btn{color:#fff}.mgp_container .mgp_gridMenu{position:absolute;top:0;left:0;width:100%;height:100%;z-index:5;outline:none;background-color:rgba(0,0,0,.5);display:none}.mgp_container .mgp_gridMenu .mgp_gridContainer{bottom:58px;position:absolute;top:52px;left:0;width:100%}.mgp_container .mgp_gridMenu .mgp_gridContainer .mgp_gridWrapper{position:absolute;left:50%;top:50%;z-index:4;width:69%;transform:translate3d(-50%, -50%, 0);backface-visibility:hidden;-webkit-touch-callout:none}.mgp_container .mgp_gridMenu .mgp_prevPage,.mgp_container .mgp_gridMenu .mgp_nextPage{background-color:#000;padding:17px 4px 17px 5px;width:21px;height:54px;box-sizing:border-box;position:absolute;top:50%;margin:-27px 20px 0;border:0;border-radius:0;cursor:pointer;pointer-events:auto}.mgp_container .mgp_gridMenu .mgp_prevPage .mgp_icon,.mgp_container .mgp_gridMenu .mgp_nextPage .mgp_icon{font-size:20px;line-height:1}.mgp_container .mgp_gridMenu .mgp_prevPage:hover,.mgp_container .mgp_gridMenu .mgp_nextPage:hover{background-color:#ccc}.mgp_container .mgp_gridMenu .mgp_prevPage{right:100%}.mgp_container .mgp_gridMenu .mgp_nextPage{left:100%}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid{box-sizing:border-box;padding:1px;margin:0;text-align:center;line-height:0px}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem{background-size:cover;background-color:#000;background-position:center;background-repeat:no-repeat;border:2px solid #000;box-sizing:border-box;display:inline-block;height:0;margin:-1px -1px -2px;padding-bottom:18.3%;pointer-events:auto;position:relative;text-decoration:none;width:33.333%}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem:hover .mgp_info{opacity:1}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_gridThumb{background-size:cover;background-position:center;background-repeat:no-repeat;padding-bottom:56.25%}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info{top:-1px;left:-1px;right:-1px;bottom:-1px;position:absolute;background-color:rgba(0,0,0,.4);font-size:12px;line-height:16px;opacity:0;transition:opacity .2s linear;backface-visibility:hidden;-webkit-touch-callout:none}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_title{color:#fff;text-align:left;font-size:15px;padding:5px;max-height:38px;overflow:hidden}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats{bottom:0;color:#fff;position:absolute;width:100%;max-height:22px;overflow:hidden;line-height:18px;padding:5px;box-sizing:border-box}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats .mgp_rating,.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats .mgp_time,.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats .mgp_views{font-size:13px}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats .mgp_time{float:left;font-size:14px}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats .mgp_rating{float:right}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats .mgp_rating .mgp_icon{font-size:12px;position:relative;top:.05em}.mgp_container .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats .mgp_icon{margin-right:5px;position:relative;top:.05em}.mgp_container .mgp_gridMenu .mgp_tab{display:inline-block;color:#ccc;text-decoration:none;padding:10px 20px 12px;box-sizing:border-box;cursor:pointer;outline:none}.mgp_container .mgp_gridMenu .mgp_tab:hover,.mgp_container .mgp_gridMenu .mgp_tab.mgp_active{color:#fff}.mgp_container .mgp_gridMenu.mgp_gridMenuSide{font-size:16px;background:rgba(0,0,0,.5)}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer{text-shadow:1px 1px 0 rgba(0,0,0,.5)}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer .mgp_gridWrapper{transition:all .2s linear}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer .mgp_gridWrapper .mgp_gridTitle{text-align:center;font-size:18px;line-height:18px;padding:15px 0}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid{margin-top:10px}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_gridItem{border:0;color:#fff;font-size:16px;margin-bottom:10px}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_gridItem[data-item-type=video]{height:auto;padding:0}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_gridItem[data-item-type=video] video{background-color:#000;opacity:1;width:100%}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_gridItem[data-item-type=video] video.mgp_video-error{padding-bottom:56.25%;height:0}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_gridItem .mgp_info{bottom:0;left:0;right:0;top:0}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_title{max-height:calc(100% - 28px)}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats{max-height:28px}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_gridItem .mgp_info .mgp_stats .mgp_views .mgp_icon{font-size:12px;top:.1rem}@keyframes action{0%{bottom:0}100%{bottom:10px}}.mgp_container .mgp_gridMenu.mgp_tablet .mgp_gridMenu .mgp_gridContainer{bottom:70px}@media(max-width: 1200px){.mgp_container .mgp_gridMenu .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_info .mgp_stats .mgp_title,.mgp_container .mgp_gridMenu .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_info .mgp_stats .mgp_time,.mgp_container .mgp_gridMenu .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_info .mgp_stats .mgp_rating,.mgp_container .mgp_gridMenu .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_info .mgp_stats .mgp_views{font-size:12px;line-height:12px;max-height:none}.mgp_container .mgp_gridMenu .mgp_gridMenu.mgp_gridMenuSide .mgp_thumbnailsGrid .mgp_info .mgp_stats .mgp_icon{font-size:11px}}.mgp_container .mgp_nextVideoOverlay{opacity:0;transition:opacity .5s ease;background-color:rgba(0,0,0,.5);position:absolute;height:100%;width:100%;top:0;z-index:5;pointer-events:none;font-size:14px;text-align:center;cursor:auto}.mgp_container .mgp_nextVideoOverlay .mgp_nextVideoCnt{position:relative;top:50%;transform:translateY(-50%)}.mgp_container .mgp_nextVideoOverlay .mgp_nextVideoCnt a{color:#fff}.mgp_container .mgp_nextVideoOverlay .mgp_upNext{text-align:center;color:#b6b6b6}.mgp_container .mgp_nextVideoOverlay .mgp_nextTitle{max-width:90%;font-weight:bold;font-size:18px;overflow:hidden;text-overflow:ellipsis;height:1.5em;margin:0 auto;white-space:nowrap}.mgp_container .mgp_nextVideoOverlay .mgp_nextChanel{font-weight:bold;color:#b6b6b6}.mgp_container .mgp_nextVideoOverlay .mgp_nextBtn{cursor:pointer;display:inline-block;margin-top:10px;position:relative;border-radius:30px;width:60px;height:60px;background-color:rgba(0,0,0,.3);font-size:25px;text-align:center}.mgp_container .mgp_nextVideoOverlay .mgp_nextBtn svg{width:60px;height:60px;transform:rotateZ(-90deg)}.mgp_container .mgp_nextVideoOverlay .mgp_nextBtn svg circle{width:60px;height:60px;stroke-linecap:round;stroke-width:2px;stroke:#fff;fill:none}.mgp_container .mgp_nextVideoOverlay .mgp_nextBtn .mgp_icon-next{position:absolute;top:50%;left:50%;display:block;transform:translate(-50%, -50%)}@media(orientation: landscape){.mgp_container .mgp_nextVideoOverlay .mgp_nextBtn{bottom:45%}}.mgp_container .mgp_nextVideoOverlay .mgp_cancel{font-weight:bold;display:block;margin:10px auto 0;width:20%;padding:5px;cursor:pointer}.mgp_container.mgp_nextVideoMode .mgp_controls{opacity:0 !important}.mgp_container.mgp_nextVideoMode .mgp_gridMenu{display:none}.mgp_container.mgp_nextVideoMode .mgp_nextVideoOverlay{pointer-events:auto;opacity:1}.mgp_container .mgp_videoErrorMessage{position:absolute;top:0;left:0;width:100%;height:100%;cursor:default;z-index:10}.mgp_container .mgp_videoErrorMessage .mgp_centered{position:absolute;top:50%;padding:1px 7px;border-radius:3px}.mgp_container .mgp_videoErrorMessage p{margin:0;font:bold 16px Arial,Verdana,sans-serif}.mgp_container.mgp_desktop .mgp_videoErrorMessage{white-space:nowrap}.mgp_container.mgp_desktop .mgp_videoErrorMessage .mgp_centered{background:#000;left:50%;transform:translate(-50%, -50%)}.mgp_container.mgp_desktop .mgp_videoErrorMessage p{padding:2px 0 0 25px}.mgp_container.mgp_desktop .mgp_videoErrorMessage .mgp_icon{float:left;position:relative;top:2px;font-size:16px}.mgp_container.mgp_desktop.mgp_videoUnavailable .mgp_watchHD,.mgp_container.mgp_desktop.mgp_videoUnavailable .mgp_playerStateIcon,.mgp_container.mgp_desktop.mgp_videoUnavailable .mgp_controlBar,.mgp_container.mgp_desktop.mgp_videoUnavailable .mgp_topBar{display:none !important}.mgp_container.mgp_mobile .mgp_videoErrorMessage,.mgp_container.mgp_tablet .mgp_videoErrorMessage,.mgp_container.mgp_stream .mgp_videoErrorMessage{background:#000}.mgp_container.mgp_mobile .mgp_videoErrorMessage .mgp_centered,.mgp_container.mgp_tablet .mgp_videoErrorMessage .mgp_centered,.mgp_container.mgp_stream .mgp_videoErrorMessage .mgp_centered{display:inline-block;left:0;transform:translate(0, -50%);padding:0 20px}.mgp_container.mgp_mobile .mgp_videoErrorMessage p,.mgp_container.mgp_tablet .mgp_videoErrorMessage p,.mgp_container.mgp_stream .mgp_videoErrorMessage p{padding:0;text-align:center}.mgp_container.mgp_mobile .mgp_videoErrorMessage .mgp_icon,.mgp_container.mgp_tablet .mgp_videoErrorMessage .mgp_icon,.mgp_container.mgp_stream .mgp_videoErrorMessage .mgp_icon{display:none}.mgp_container.mgp_mobile.mgp_videoUnavailable .mgp_options,.mgp_container.mgp_mobile.mgp_videoUnavailable .mgp_controls,.mgp_container.mgp_mobile.mgp_videoUnavailable .mgp_controlBar,.mgp_container.mgp_mobile.mgp_videoUnavailable .mgp_watchHD,.mgp_container.mgp_mobile.mgp_videoUnavailable .mgp_topBar,.mgp_container.mgp_mobile.mgp_videoUnavailable .mgp_loader,.mgp_container.mgp_tablet.mgp_videoUnavailable .mgp_options,.mgp_container.mgp_tablet.mgp_videoUnavailable .mgp_controls,.mgp_container.mgp_tablet.mgp_videoUnavailable .mgp_controlBar,.mgp_container.mgp_tablet.mgp_videoUnavailable .mgp_watchHD,.mgp_container.mgp_tablet.mgp_videoUnavailable .mgp_topBar,.mgp_container.mgp_tablet.mgp_videoUnavailable .mgp_loader,.mgp_container.mgp_stream.mgp_videoUnavailable .mgp_options,.mgp_container.mgp_stream.mgp_videoUnavailable .mgp_controls,.mgp_container.mgp_stream.mgp_videoUnavailable .mgp_controlBar,.mgp_container.mgp_stream.mgp_videoUnavailable .mgp_watchHD,.mgp_container.mgp_stream.mgp_videoUnavailable .mgp_topBar,.mgp_container.mgp_stream.mgp_videoUnavailable .mgp_loader{display:none !important}.mgp_container .mgp_castOverlay{opacity:0;outline:none;position:absolute;transition:opacity .3s linear;z-index:1}.mgp_container .mgp_castOverlay .mgp_castText{font-weight:bold;text-transform:uppercase;white-space:nowrap}.mgp_container .mgp_castOverlay.mgp_visible{opacity:1;z-index:4}.mgp_container .mgp_adRollContainer{display:none;height:100%;width:100%}.mgp_container.mgp_adRollRunning .mgp_adRollContainer{display:initial}.mgp_container .mgp_adRollContainer .mgp_adRollEventCatcher{position:absolute;top:0;left:0px;width:100%;height:100%;z-index:5;display:none}.mgp_container .mgp_adRollContainer .mgp_adRollTitle{position:relative;z-index:8;background:linear-gradient(to bottom, rgba(0, 0, 0, 0.89) 0%, rgba(0, 0, 0, 0) 100%);padding:0 15px;font-size:14px;font-weight:bold;line-height:42px;height:42px;display:none;overflow:hidden}.mgp_container .mgp_adRollContainer .mgp_adRollLink{position:absolute;z-index:8;top:0;right:0;padding:0 15px;font-weight:bold;line-height:42px;display:none;cursor:pointer}.mgp_container .mgp_adRollContainer .mgp_adRollSkipButton{z-index:8;position:absolute;padding:10px 15px;background:rgba(0,0,0,.55);right:15px;bottom:60px;cursor:pointer;transform:translate(0, 0);transition:transform .3s ease-in-out}.mgp_container .mgp_adRollContainer .mgp_adRollSkipButton .mgp_icon{font-size:10px;margin-left:4px}.mgp_container .mgp_adRollContainer .mgp_adRollCTA{bottom:60px;display:none;height:40px;left:15px;min-width:40px;position:absolute;z-index:10;transform:translate(0, 0);transition:transform .3s ease-in-out}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_image{bottom:4px;left:4px;position:absolute;width:32px;height:32px;background-color:#000;background-size:cover;z-index:7;pointer-events:none}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer{cursor:pointer;position:relative;z-index:6;height:40px;overflow:hidden;padding:4px 4px 4px 36px;background-color:rgba(0,0,0,.55)}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer.mgp_expand{width:0}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer.mgp_expand .mgp_button{opacity:0}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer.mgp_expand:hover{width:auto !important}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer.mgp_expand:hover .mgp_button{opacity:1}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer .mgp_title{padding:0 2px 0 6px;display:none;color:#fff;line-height:32px;float:left;font-size:14px;max-width:200px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer.mgp_twoLines .mgp_title{font-size:12px;line-height:16px}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer .mgp_subtitle{padding:0 2px 0 6px;display:none;font-size:10px;line-height:16px;float:left;color:#ccc;max-width:200px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;clear:left}.mgp_container .mgp_adRollContainer .mgp_adRollCTA .mgp_ctaContainer .mgp_button{display:none;float:right;margin:4px 6px 4px 8px;padding:0 10px;height:24px;font-size:12px;line-height:24px;white-space:nowrap;color:#fff;background:#0d7fc5;border-radius:3px}.mgp_container .mgp_adRollContainer .mgp_adRollTimeElapsed{color:#ccc;display:none;padding:6px 4px;text-shadow:0 0 3px #000;opacity:0;transition:opacity .3s linear;position:absolute;bottom:2px;left:15px;white-space:nowrap;z-index:4}.mgp_container.mgp_tablet .mgp_adRollContainer .mgp_adRollSkipButton{bottom:76px}.mgp_container.mgp_hideControls .mgp_adRollContainer .mgp_adRollTimeElapsed{opacity:1}.mgp_container.mgp_hideControls .mgp_adRollContainer .mgp_adRollCTA{transform:translate(0, 25px)}.mgp_container .mgp_clickable{cursor:pointer}.mgp_container.mgp_adRollReady .mgp_share{display:none !important}.mgp_container.mgp_adRollReady .mgp_topBar{display:none !important}.mgp_container.mgp_adRollReady .mgp_controlBar .mgp_cc{display:none}.mgp_container.mgp_adRollReady .mgp_controlBar .mgp_nextVideo{display:none}.mgp_container.mgp_adRollReady .mgp_controlBar .mgp_logo{display:none !important}.mgp_container.mgp_adRollReady .mgp_controlBar .mgp_options{display:none !important}.mgp_container.mgp_adRollReady .mgp_actionTag{display:none !important}.mgp_container.mgp_adRollReady .mgp_progress{background:#690 !important}.mgp_container.mgp_adRollReady .mgp_progress:before{background:#690 !important}.mgp_container.mgp_adRollReady .mgp_handleHover .mgp_center{background:#690 !important}.mgp_container.mgp_adRollReady .mgp_seekBar .mgp_handle{display:none !important}.mgp_container.mgp_adRollReady .mgp_chromecast{display:none !important}.mgp_container.mgp_adRollReady .mgp_airplay{display:none !important}.mgp_container.mgp_adRollReady .mgp_hotspots{display:none !important}.mgp_container.mgp_adRollReady .mgp_watchHD{display:none !important}.mgp_container.mgp_adRollRunning.mgp_ctaEnabled .mgp_adRollContainer .mgp_adRollCTA{display:block;transform:translate3d(0, 0, 0);-webkit-backdrop-filter:hidden;backdrop-filter:hidden}.mgp_container.mgp_adRollRunning .mgp_adRollContainer .mgp_adRollTitle,.mgp_container.mgp_adRollRunning .mgp_adRollContainer .mgp_adRollLink,.mgp_container.mgp_adRollRunning .mgp_adRollContainer .mgp_adRollSkipButton,.mgp_container.mgp_adRollRunning .mgp_adRollContainer .mgp_adRollEventCatcher,.mgp_container.mgp_adRollRunning .mgp_adRollContainer .mgp_adRollTimeElapsed{display:block}.mgp_container.mgp_adRollRunning .mgp_adRollContainer .mgp_adRollSkipButton{transform:translate3d(0, 0, 0);-webkit-backdrop-filter:hidden;backdrop-filter:hidden}.mgp_container.mgp_fullscreen .mgp_adRollContainer .mgp_adRollTitle{font-size:20px}.mgp_container .mgp_pixelTracking{position:absolute;z-index:0;bottom:-2px;left:-2px;width:1px;height:1px}.mgp_container .mgp_ccContainer{pointer-events:none;position:absolute;top:0;left:0;right:0;bottom:0;z-index:6;outline:none;transition:bottom .3s ease-in-out;display:flex;flex-direction:reverse-column;flex-wrap:wrap;align-content:flex-end}.mgp_container .mgp_ccContainer .mgp_overlayText{left:0 !important;right:0 !important;width:100%;align-self:flex-end;position:relative;margin:0 10% 10px;font-size:1em;line-height:1.4;color:#fff}.mgp_container .mgp_ccContainer .mgp_text{position:relative;padding:2px 6px !important;z-index:7}.mgp_container .mgp_ccContainer .mgp_text:after{content:" ";position:absolute;z-index:-1;top:0;left:0;width:100%;height:100%;border-radius:4px;background:#000;opacity:.75}.mgp_container.mgp_showControls .mgp_ccContainer,.mgp_container.mgp_embedded .mgp_ccContainer{bottom:52px}.mgp_container.mgp_tablet.mgp_embedded .mgp_ccContainer{bottom:68px}.mgp_container.mgp_adRollRunning .mgp_ccContainer{display:none}.mgp_container .mgp_gridMenu{display:block;opacity:0;transition:opacity .3s ease-in-out;z-index:1}.mgp_container .mgp_gridMenu .mgp_gridContainer{transform:translate(0, 0);transition:transform .3s ease-in-out}.mgp_container .mgp_gridMenu .mgp_gridContainer .mgp_gridWrapper .mgp_gridHeader{display:none}.mgp_container .mgp_gridMenu .mgp_gridContainer .mgp_gridWrapper .mgp_gridItem{color:#fff}.mgp_container .mgp_gridMenu .mgp_gridContainer .mgp_gridWrapper .mgp_gridItem .mgp_info .mgp_stats{padding:3px 5px}.mgp_container .mgp_gridMenu .mgp_gridContainer .mgp_gridWrapper .mgp_gridItem .mgp_info .mgp_stats .mgp_rating,.mgp_container .mgp_gridMenu .mgp_gridContainer .mgp_gridWrapper .mgp_gridItem .mgp_info .mgp_stats .mgp_views{float:right}.mgp_container .mgp_gridMenu .mgp_gridContainer .mgp_gridWrapper .mgp_gridItem .mgp_info .mgp_stats .mgp_views{margin-right:6%}.mgp_container .mgp_gridMenu.mgp_gridMenuSide{height:100%;top:0;left:auto;bottom:0;right:0;width:25%}.mgp_container .mgp_gridMenu.mgp_gridMenuSide:hover .mgp_gridNextBtn:before,.mgp_container .mgp_gridMenu.mgp_gridMenuSide:focus .mgp_gridNextBtn:before{border-color:#fff}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer{bottom:0;left:auto;overflow:hidden;right:-25%;top:0;width:100%;transition:right 0.15s ease-in-out}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer .mgp_gridWrapper{left:0;top:0;width:100%;transform:translate(0, 0);transform:translate3d(0, 0, 0)}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer .mgp_gridWrapper .mgp_gridHeader{display:block}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer .mgp_gridWrapper .mgp_gridHeader~.mgp_thumbnailsGrid{margin-top:0}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer .mgp_gridWrapper .mgp_thumbnailsGrid{margin-top:10px}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer .mgp_gridWrapper .mgp_thumbnailsGrid .mgp_gridItem{margin-bottom:10px;width:95%}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridContainer .mgp_gridWrapper .mgp_thumbnailsGrid .mgp_gridItem[data-item-type=thumb]{overflow:hidden;padding-bottom:50%}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridNextBtn{bottom:0;position:absolute;left:50%;transform:translate(-50%, 0);height:40px;width:80px;z-index:6;cursor:pointer}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridNextBtn:before{content:"";width:10px;height:10px;border-left:3px solid #ccc;border-bottom:3px solid #ccc;position:absolute;left:36px;transform:rotate(-45deg);top:21px}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridNextBtn:hover:before{border-color:#fff}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridNextBtn.mgp_animated{border-radius:5px;-webkit-animation:action .5s infinite alternate;animation:action .5s infinite alternate}.mgp_container .mgp_gridMenu.mgp_gridMenuSide .mgp_gridNextBtn.mgp_animated:before{border-left-color:#fff;border-top-color:#fff}.mgp_container.mgp_hideControls .mgp_gridMenuSide .mgp_gridContainer{transform:translate(0, 0)}.mgp_container.mgp_showControls .mgp_gridMenu.mgp_gridMenuSide{height:calc(100% - 36px - 6px)}@media(max-width: 767px){.mgp_container.mgp_embedded .mgp_gridContainer .mgp_gridWrapper .mgp_gridItem .mgp_info .mgp_title{font-size:12px;max-height:none;overflow:hidden;padding:2px}.mgp_container.mgp_embedded .mgp_gridContainer .mgp_gridWrapper .mgp_gridItem .mgp_info .mgp_stats{display:none}}.mgp_container:not(.mgp_embedded).mgp_hideControls .mgp_gridMenu .mgp_gridContainer{transform:translate(0, 22px)}.mgp_container.mgp_showGrid .mgp_gridMenu{opacity:1;z-index:5}.mgp_container.mgp_showGrid .mgp_gridMenuSide .mgp_gridContainer{right:0}.mgp_container.mgp_showGrid .mgp_gridMenuSide:hover,.mgp_container.mgp_showGrid .mgp_gridMenuSide:focus{height:100%;transform:translate(0, 0);z-index:7}.mgp_container.mgp_tablet.mgp_showGrid .mgp_gridMenu .mgp_thumbnailsGrid .mgp_gridItem .mgp_info{opacity:1}.mgp_container.mgp_tablet .mgp_tooltip{display:none !important}.mgp_container .mgp_tooltip{position:absolute;left:0px;top:0px;z-index:7;background:rgba(0,0,0,.75);padding:4px 15px;cursor:default;pointer-events:none;opacity:1;transform:translate(0, 0, 0);transition:opacity .2s linear}.mgp_container .mgp_tooltip.mgp_hidden{transform:translate(0, -10px);opacity:0}.mgp_container .mgp_tooltip .mgp_title{text-align:center;white-space:nowrap}.mgp_container .mgp_tooltip .mgp_arrow{display:block;position:absolute;top:100%;left:0;width:0;height:0;margin:0;padding:0;border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75);margin-left:-7px}.mgp_container .mgp_tooltip.mgp_topDown.mgp_hidden{transform:translate(0, 10px)}.mgp_container .mgp_tooltip.mgp_topDown .mgp_arrow{top:auto;bottom:100%;border-top:0;border-bottom:7px solid rgba(0,0,0,.75)}.mgp_container .mgp_tooltip.mgp_leftSided.mgp_hidden{transform:translate(-10px, 0)}.mgp_container .mgp_tooltip.mgp_leftSided .mgp_arrow{top:50%;bottom:auto;margin-left:0;margin-top:-7px;left:100%;border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.mgp_container .mgp_tooltip.mgp_rightSided.mgp_hidden{transform:translate(10px, 0)}.mgp_container .mgp_tooltip.mgp_rightSided .mgp_arrow{top:50%;bottom:auto;margin-top:-7px;left:0;border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75);border-left:0}.mgp_container .mgp_contextMenu{border:1500px solid transparent;position:absolute;z-index:7;top:100%;left:100%;background:rgba(0,0,0,.75);background-clip:padding-box;opacity:1;padding:3px 0;transition:opacity .2s linear}.mgp_container .mgp_contextMenu.mgp_hidden{opacity:0;pointer-events:none}.mgp_container .mgp_contextMenu.mgp_looped .mgp_loop{padding-left:28px;color:#fff}.mgp_container .mgp_contextMenu.mgp_looped .mgp_loop:after{content:"✓";position:absolute;top:3px;left:10px}.mgp_container .mgp_contextMenu .mgp_content div{color:#ccc;white-space:nowrap;padding:3px 10px;cursor:pointer;position:relative}.mgp_container .mgp_contextMenu .mgp_content div:hover,.mgp_container .mgp_contextMenu .mgp_content div.mgp_hover{color:#fff}.mgp_container .mgp_contextMenu .mgp_content .mgp_about{padding-top:5px;margin-top:3px;border-top:1px solid rgba(255,255,255,.2)}.mgp_container .mgp_topBar{width:100%;height:46px;position:absolute;top:0;left:0;z-index:6;display:none;-webkit-backface-visibility:hidden;-webkit-touch-callout:none;user-select:none;cursor:default;transform:translate(0, 0);transition:transform .3s ease-in-out}.mgp_container .mgp_topBar .mgp_btn{display:inline-block;background:transparent;margin:0;padding:0 0 0;border:0;outline:none;z-index:4;font-size:24px;line-height:46px;position:absolute;top:0;left:0;height:100%;cursor:pointer;overflow:visible;text-transform:none;text-align:center;color:#ccc}.mgp_container .mgp_topBar .mgp_btn:hover,.mgp_container .mgp_topBar .mgp_btn.mgp_hover{color:#fff}.mgp_container .mgp_topBar .mgp_btn.mgp_icon{width:36px;float:none}.mgp_container .mgp_topBar .mgp_content{position:absolute;top:0;left:0;width:100%;height:100%;z-index:2}.mgp_container .mgp_topBar .mgp_background{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,.5);opacity:1;z-index:1}.mgp_container .mgp_topBar .mgp_title{height:46px;padding:0 20px}.mgp_container .mgp_topBar .mgp_title span{display:block;width:100%;overflow:hidden;color:#fff;font-size:18px;line-height:46px;white-space:nowrap;text-overflow:ellipsis;cursor:default}.mgp_container .mgp_topBar .mgp_title span.mgp_isLink{cursor:pointer}.mgp_container .mgp_topBar .mgp_share{float:right;width:36px;height:100%;position:relative;z-index:2;margin-right:14px}.mgp_container .mgp_controlBar{width:100%;height:36px;z-index:6;position:absolute;left:0;bottom:0;right:0px;backface-visibility:hidden;-webkit-backface-visibility:hidden;-webkit-touch-callout:none;user-select:none;cursor:default;transform:translate(0, 0);transition:transform .3s ease-in-out}.mgp_container .mgp_controlBar>.mgp_front{position:absolute;top:0;bottom:0;left:0;right:0;padding:0 3px 0 15px;height:36px;z-index:4}.mgp_container .mgp_controlBar>.mgp_background{position:absolute;left:0;right:0;bottom:0;height:64px;background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.48) 39%, rgba(0, 0, 0, 0.65) 95%, rgba(0, 0, 0, 0.71) 100%);z-index:1;opacity:1;transition:opacity 0s ease-in}.mgp_container .mgp_controlBar .mgp_autoplay,.mgp_container .mgp_controlBar .mgp_fullscreen,.mgp_container .mgp_controlBar .mgp_cinema,.mgp_container .mgp_controlBar .mgp_options,.mgp_container .mgp_controlBar .mgp_sound,.mgp_container .mgp_controlBar .mgp_playPause,.mgp_container .mgp_controlBar .mgp_nextVideo,.mgp_container .mgp_controlBar .mgp_volume,.mgp_container .mgp_controlBar .mgp_chromecast,.mgp_container .mgp_controlBar .mgp_cc,.mgp_container .mgp_controlBar .mgp_actionTags{height:100%;width:36px;padding:0;margin:0;float:left;position:relative}.mgp_container .mgp_controlBar .mgp_nextVideo{opacity:1;pointer-events:auto;cursor:pointer}.mgp_container .mgp_controlBar .mgp_autoplay,.mgp_container .mgp_controlBar .mgp_fullscreen,.mgp_container .mgp_controlBar .mgp_cinema,.mgp_container .mgp_controlBar .mgp_chromecast,.mgp_container .mgp_controlBar .mgp_airplay,.mgp_container .mgp_controlBar .mgp_options,.mgp_container .mgp_controlBar .mgp_cc,.mgp_container .mgp_controlBar .mgp_actionTags{float:right}.mgp_container .mgp_controlBar .mgp_options{display:none}.mgp_container .mgp_controlBar .mgp_playPause>*,.mgp_container .mgp_controlBar .mgp_volume>*,.mgp_container .mgp_controlBar .mgp_fullscreen>*,.mgp_container .mgp_controlBar .mgp_cinema>*,.mgp_container .mgp_controlBar .mgp_autoplay>*{transition:opacity .2s linear;opacity:0;pointer-events:none;box-sizing:border-box}.mgp_container .mgp_controlBar .mgp_autoplay{display:none;margin:0 6px 0 0;cursor:pointer}.mgp_container .mgp_controlBar .mgp_autoplay:before{content:"";display:block;position:absolute;width:100%;height:10px;background:rgba(255,255,255,.2);border-radius:16px;top:50%;transform:translateY(-48%)}.mgp_container .mgp_controlBar .mgp_autoplay .mgp_thumb{opacity:1;background-color:#ccc;position:relative;width:16px;height:16px;border-radius:50%;transition:250ms all ease;top:calc(50% - 8px)}.mgp_container .mgp_controlBar .mgp_autoplay:hover .mgp_thumb{background-color:#fff}.mgp_container .mgp_controlBar .mgp_autoplay.mgp_active .mgp_thumb{margin-left:calc(100% - 16px);background:#fff}.mgp_container .mgp_controlBar .mgp_autoplay .mgp_thumbIcon{border:0;background:transparent;box-sizing:border-box;width:0;height:6px;position:absolute;top:50%;transform:translate(-50%, -50%);transition:250ms all ease;left:50%;border-style:double;border-width:0px 0 0px 5px;border-color:transparent transparent transparent #000}.mgp_container .mgp_controlBar .mgp_autoplay.mgp_active .mgp_thumbIcon{left:57%;border-style:solid;border-width:3px 0 3px 5px;border-color:transparent transparent transparent #000}.mgp_container .mgp_controlBar .mgp_cinema{display:none}.mgp_container .mgp_controlBar .mgp_cinema .mgp_icon-size-large{opacity:1;pointer-events:auto}.mgp_container .mgp_controlBar .mgp_cinema.mgp_active .mgp_icon-size-medium{opacity:1;pointer-events:auto}.mgp_container .mgp_controlBar .mgp_cinema.mgp_active .mgp_icon-size-large{opacity:0;pointer-events:none}.mgp_container .mgp_controlBar .mgp_cc{cursor:pointer;margin-right:6px}.mgp_container .mgp_controlBar .mgp_cc .mgp_btn{font-size:10px;line-height:16px;color:#000;background:#ccc;text-align:center;margin:10px 8px;width:20px;height:16px;border-radius:1px;position:relative;padding:0}.mgp_container .mgp_controlBar .mgp_cc.mgp_hover .mgp_btn,.mgp_container .mgp_controlBar .mgp_cc:hover .mgp_btn{background:#fff;color:#000}.mgp_container .mgp_controlBar .mgp_volume>*{padding-bottom:1px;text-align:left;padding-left:8px;transition:none}.mgp_container .mgp_controlBar .mgp_volume>*:before{display:inline-block;overflow:hidden}.mgp_container .mgp_controlBar .mgp_volume.mgp_lowVolume .mgp_volume-low,.mgp_container .mgp_controlBar .mgp_volume.mgp_mediumVolume .mgp_volume-low,.mgp_container .mgp_controlBar .mgp_volume.mgp_fullVolume .mgp_volume-full,.mgp_container .mgp_controlBar .mgp_volume.mgp_muteVolume .mgp_volume-mute{opacity:1;pointer-events:auto}.mgp_container .mgp_controlBar .mgp_volume.mgp_lowVolume .mgp_volume-low:before{width:11px;margin-right:10px}.mgp_container .mgp_controlBar .mgp_fullscreen .mgp_icon-fullscreen{opacity:1;pointer-events:auto}.mgp_container .mgp_controlBar .mgp_fullscreen.mgp_active .mgp_icon-fullscreen-exit{opacity:1;pointer-events:auto}.mgp_container .mgp_controlBar .mgp_fullscreen.mgp_active .mgp_icon-fullscreen{opacity:0;pointer-events:none}.mgp_container .mgp_controlBar .mgp_airplay{width:39px;height:36px;position:relative;display:none}.mgp_container .mgp_controlBar .mgp_airplay .mgp_airplayBtn{width:100%;height:36px}.mgp_container .mgp_controlBar .mgp_airplay .mgp_airplayBtn .mgp_airplay-icon{display:inline-block;width:28px;height:24px;margin:7px 5px 5px;position:relative;background-image:-webkit-named-image(wireless-playback);background-size:100% 100%;background-position:center;background-repeat:no-repeat;-webkit-filter:invert(75%);filter:invert(75%)}.mgp_container .mgp_controlBar .mgp_airplay .mgp_airplayBtn .mgp_airplay-icon.mgp_active,.mgp_container .mgp_controlBar .mgp_airplay .mgp_airplayBtn:hover .mgp_airplay-icon,.mgp_container .mgp_controlBar .mgp_airplay .mgp_airplayBtn.mgp_hover .mgp_airplay-icon{-webkit-filter:invert(100%);filter:invert(100%)}.mgp_container .mgp_controlBar .mgp_airplay.mgp_streaming .mgp_airplayBtn .mgp_airplay-icon{-webkit-filter:invert(100%);filter:invert(100%)}.mgp_container .mgp_controlBar .mgp_airplay.mgp_streaming .mgp_airplayBtn .mgp_airplay-icon:after{content:" ";width:18px;height:6px;border-radius:1px;background:#000;position:absolute;top:6px;left:5px}.mgp_container .mgp_controlBar .mgp_actionTags{margin-right:6px}.mgp_container .mgp_controlBar .mgp_btn{display:inline-block;background:transparent;margin:0;padding:0 0 2px;border:0;outline:none;z-index:4;font-size:16px;line-height:36px;position:absolute;top:0;left:0;height:100%;cursor:pointer;overflow:visible;text-transform:none;text-align:center;color:#ccc}.mgp_container .mgp_controlBar .mgp_btn:hover,.mgp_container .mgp_controlBar .mgp_btn.mgp_hover{color:#fff}.mgp_container .mgp_controlBar .mgp_btn.mgp_icon{width:36px;float:none}.mgp_container .mgp_controlBar .mgp_btn.mgp_icon-quality{cursor:default}.mgp_container .mgp_controlBar .mgp_btn.mgp_icon-quality.mgp_qualities-loaded{cursor:pointer}.mgp_container .mgp_controlBar .mgp_time{height:100%;float:left;display:block;padding:0 16px 0 12px;box-sizing:border-box;text-align:right;line-height:36px}.mgp_container .mgp_controlBar .mgp_time .mgp_elapsed{font-weight:700}.mgp_container .mgp_controlBar .mgp_time .mgp_sep{padding:0 4px}.mgp_container .mgp_controlBar .mgp_sound{width:auto;display:none}.mgp_container .mgp_controlBar .mgp_volumeSlider{float:left;padding:0 8px;width:96px;overflow:hidden}.mgp_container .mgp_controlBar .mgp_volumeSlider.mgp_hidden .mgp_volumeBar,.mgp_container .mgp_controlBar .mgp_volumeSlider.mgp_muted .mgp_volumeBar{transform:translate(-120%, 0)}.mgp_container .mgp_controlBar .mgp_volumeBar{width:80px;height:36px;position:relative;cursor:pointer;backface-visibility:hidden;-webkit-backface-visibility:hidden;-webkit-touch-callout:none;transform:translate(0, 0);transition:transform .2s ease-out}.mgp_container .mgp_controlBar .mgp_volumeBar .mgp_front,.mgp_container .mgp_controlBar .mgp_volumeBar .mgp_background{position:absolute;top:9px;left:0;z-index:5;width:80px;height:18px;background:#000;background-clip:content-box;box-sizing:border-box;padding:7px 0}.mgp_container .mgp_controlBar .mgp_volumeBar .mgp_front{z-index:6;width:50%}.mgp_container .mgp_controlBar .mgp_volumeBar .mgp_handle{width:5px;height:18px;position:absolute;top:0px;right:-2px;z-index:7;background:#fff}.mgp_container .mgp_controlBar .mgp_volumeBar .mgp_extraZone .mgp_left{position:absolute;left:-8px;top:0;width:8px;height:36px;cursor:pointer}.mgp_container .mgp_controlBar .mgp_volumeBar .mgp_extraZone .mgp_right{z-index:9;position:absolute;right:-8px;top:0;width:8px;height:36px;cursor:pointer}.mgp_container .mgp_controlBar .mgp_options,.mgp_container .mgp_controlBar .mgp_cinema,.mgp_container .mgp_controlBar .mgp_fullscreen,.mgp_container .mgp_controlBar .mgp_chromecast,.mgp_container .mgp_controlBar .mgp_airplay,.mgp_container .mgp_controlBar .mgp_logo{margin-right:12px}.mgp_container .mgp_controlBar .mgp_logo{width:auto;height:100%;margin:0 16px 0 8px;float:right;display:none}.mgp_container .mgp_controlBar .mgp_logo div,.mgp_container .mgp_controlBar .mgp_logo img,.mgp_container .mgp_controlBar .mgp_logo svg{display:block;width:auto;height:100%;padding:0;box-sizing:border-box;max-width:60px}.mgp_container .mgp_controlBar .mgp_logo .mgp_youporn{max-width:80px}.mgp_container .mgp_controlBar .mgp_logo .mgp_xtube{max-width:45px}.mgp_container .mgp_controlBar .mgp_logo.mgp_isLink{cursor:pointer}.mgp_container .mgp_controlBar .mgp_cover{position:absolute;top:0;left:0;right:0;bottom:0;z-index:10;background:rgba(0,0,0,0);display:none}.mgp_container .mgp_controlBar .mgp_leftVolumeBarCover{position:absolute;top:0;left:0;bottom:0;width:200px;z-index:10;background:rgba(0,0,0,0);display:none}.mgp_container .mgp_controlBar .mgp_rightVolumeBarCover{position:absolute;top:0;right:0;bottom:0;left:295px;z-index:10;background:rgba(0,0,0,0);display:none}.mgp_container.mgp_seekBarDrag{cursor:pointer}.mgp_container.mgp_seekBarDrag .mgp_controlBar .mgp_seekBar .mgp_actionTag{padding:1000px 0;margin:-1000px 0}.mgp_container.mgp_seekBarDrag .mgp_controlBar .mgp_cover{display:block}.mgp_container.mgp_seekBarDrag .mgp_controlBar .mgp_front,.mgp_container.mgp_seekBarDrag .mgp_controlBar .mgp_front *{pointer-events:none !important}.mgp_container.mgp_readyState .mgp_controlBar .mgp_play{opacity:1;pointer-events:auto}.mgp_container.mgp_replayState .mgp_controlBar .mgp_replay{opacity:1;pointer-events:auto}.mgp_container.mgp_playingState .mgp_controlBar .mgp_pause{opacity:1;pointer-events:auto}.mgp_container.mgp_pausedState .mgp_controlBar .mgp_play{opacity:1;pointer-events:auto}.mgp_container.mgp_bufferingState .mgp_controlBar .mgp_pause{opacity:0;pointer-events:none}.mgp_container.mgp_bufferingState .mgp_controlBar .mgp_play{opacity:1;pointer-events:none}.mgp_container.mgp_bufferingState.mgp_playAfterBuffer .mgp_controlBar .mgp_pause,.mgp_container.mgp_playAfterSeek .mgp_controlBar .mgp_pause{opacity:1;pointer-events:auto}.mgp_container.mgp_bufferingState.mgp_playAfterBuffer .mgp_controlBar .mgp_play,.mgp_container.mgp_playAfterSeek .mgp_controlBar .mgp_play{opacity:0;pointer-events:none}.mgp_container.mgp_embedded .mgp_controlBar .mgp_nextVideo,.mgp_container.mgp_adRollRunning .mgp_controlBar .mgp_nextVideo{display:none}.mgp_container.mgp_embedded .mgp_controlBar .mgp_chromecast,.mgp_container.mgp_adRollRunning .mgp_controlBar .mgp_chromecast{display:none}.mgp_container.mgp_hideControls .mgp_controlBar{transform:translate(0, 45px)}.mgp_container.mgp_hideControls .mgp_controlBar>.mgp_background{opacity:0;transition-duration:.3s}.mgp_container.mgp_hideControls .mgp_controlBar .mgp_seekBar .mgp_progressPadding{left:0;right:0}.mgp_container.mgp_fullscreenDisabled .mgp_controlBar .mgp_fullscreen{display:none !important}.mgp_seekBar{position:absolute;height:16px;left:0;right:0;bottom:36px;cursor:pointer;box-sizing:content-box;z-index:5}.mgp_seekBar.mgp_thumbnailsHoverZone{padding-top:110px}.mgp_seekBar .mgp_background,.mgp_seekBar .mgp_buffer,.mgp_seekBar .mgp_progress{width:100%;height:6px;position:absolute;bottom:5px;left:0;pointer-events:none}.mgp_seekBar .mgp_hotspots{position:absolute;left:0;bottom:11px;right:0;height:30px;overflow:hidden;z-index:3;opacity:0;pointer-events:none;transition:all .25s ease-in-out}.mgp_seekBar .mgp_hotspots.mgp_visible{opacity:1;pointer-events:auto}.mgp_seekBar .mgp_hotspots svg{display:block;width:100%;height:100%}.mgp_seekBar .mgp_hotspots .mgp_hotspotsFill{opacity:.7}.mgp_seekBar .mgp_background{background:#282828;opacity:.75;z-index:1}.mgp_seekBar .mgp_buffer{width:auto;z-index:2;background:#6d6d6d}.mgp_seekBar .mgp_progressPadding{position:absolute;top:0;bottom:0;left:15px;right:15px;transition:left .3s ease-out,right .3s ease-out}.mgp_seekBar .mgp_progressPadding.mgp_showHandle .mgp_handle{opacity:1;transform:scale(1)}.mgp_seekBar .mgp_progressPadding.mgp_animated .mgp_progress{transition:all .25s ease-in-out}.mgp_seekBar .mgp_progressPadding.mgp_animated .mgp_hotspotsFill{transition:all .25s ease-in-out}.mgp_seekBar .mgp_progressPadding .mgp_progressOverflow{top:0;left:0;width:100%;height:100%;position:absolute;overflow:hidden}.mgp_seekBar .mgp_progress{z-index:3;transform:translate3d(-100%, 0, 0)}.mgp_seekBar .mgp_handle{position:absolute;bottom:0;width:16px;height:16px;margin-left:-8px;z-index:5;border-radius:8px;background:#fff;box-shadow:0 0 2px rgba(0,0,0,.5);cursor:pointer;pointer-events:none;opacity:0;-webkit-backface-visibility:hidden;-webkit-touch-callout:none;transform:scale(0.01);transition:transform .25s ease-out,opacity .25s linear}.mgp_seekBar .mgp_actionTag{position:absolute;bottom:5px;left:0;min-width:4px;height:6px;margin:auto;opacity:.5;background-color:#fff;background-clip:content-box;z-index:4;box-sizing:content-box;overflow:hidden}.mgp_seekBar .mgp_actionTag.mgp_chapter{opacity:.1;transition:height .25s linear,bottom .25s linear;box-sizing:border-box;border-right:4px solid transparent}.mgp_seekBar .mgp_actionTag.mgp_chapter:last-of-type{border-right:0}.mgp_seekBar .mgp_actionTag.mgp_hover{opacity:1}.mgp_seekBar .mgp_actionTag.mgp_chapter.mgp_hover{height:8px;bottom:4px}.mgp_seekBar.mgp_adRollRunning .mgp_controlBar .mgp_seekBar{cursor:normal;pointer-events:none}.mgp_container .mgp_thumbnails{bottom:64px}.mgp_container .mgp_thumbnails .mgp_actionTagTitle{top:-25px}.mgp_container .mgp_thumbnails .mgp_arrow{width:0;height:0;padding:0;display:block;border-left:10px solid transparent;border-right:10px solid transparent;border-top:10px solid rgba(0,0,0,.75);position:absolute;top:100%;left:0;z-index:3}.mgp_container .mgp_thumbnails.mgp_hidden .mgp_arrow,.mgp_container .mgp_thumbnails.mgp_thumbLoading .mgp_arrow{display:none}.mgp_container .mgp_controlBar .mgp_options{margin-right:8px}.mgp_container .mgp_controlBar .mgp_options .mgp_btn.mgp_HD:after,.mgp_container .mgp_controlBar .mgp_options .mgp_btn.mgp_K2:after,.mgp_container .mgp_controlBar .mgp_options .mgp_btn.mgp_K4:after{content:"HD";position:absolute;top:5px;right:3px;font:900 7px/1 "Arial Black",Arial,sans-serif;display:block;border-radius:2px;padding:2px;color:#000}.mgp_container .mgp_controlBar .mgp_options .mgp_btn.mgp_K4:after{content:"4K"}.mgp_container .mgp_controlBar .mgp_options .mgp_btn.mgp_K2:after{content:"2K"}.mgp_container .mgp_controlBar .mgp_options .mgp_btn.mgp_active{color:#fff}.mgp_container .mgp_controlBar .mgp_options.mgp_hidden{display:none}.mgp_container.mgp_embedded .mgp_options{display:none}.mgp_container .mgp_optionsMenu{position:absolute;top:0;bottom:56px;left:0;right:0;z-index:6;opacity:0;transition:opacity .2s linear;pointer-events:none}.mgp_container .mgp_optionsMenu .mgp_clickHandler{position:absolute;bottom:0;right:0;top:0;left:0;background:rgba(0,0,0,0)}.mgp_container .mgp_optionsMenu .mgp_background{background:rgba(0,0,0,.8);position:absolute;width:1000px;height:1000px;bottom:0;right:15px;overflow:hidden;pointer-events:none;transform:translate(0, -10px);transition:transform .2s ease-out}.mgp_container .mgp_optionsMenu .mgp_background.mgp_animated{transition:transform .2s ease-out,width .15s linear,height .15s linear}.mgp_container .mgp_optionsMenu .mgp_mainPage{position:absolute;bottom:0;right:0;padding:0;z-index:6;overflow:hidden}.mgp_container .mgp_optionsMenu .mgp_mainPage .mgp_header{display:none}.mgp_container .mgp_optionsMenu .mgp_mainPage>ul{transition:opacity .15s linear,transform .15s ease-out}.mgp_container .mgp_optionsMenu .mgp_mainPage .mgp_icon{display:none}.mgp_container .mgp_optionsMenu.mgp_level2 .mgp_mainPage>ul{opacity:0;pointer-events:none;transform:translate(-100px, 0)}.mgp_container .mgp_optionsMenu.mgp_level2 .mgp_subPage{opacity:1;pointer-events:auto}.mgp_container .mgp_optionsMenu.mgp_level2 .mgp_subPage>.mgp_content,.mgp_container .mgp_optionsMenu.mgp_level2 .mgp_subPage>.mgp_header{opacity:1;pointer-events:auto;transform:translate(0, 0)}.mgp_container .mgp_optionsMenu.mgp_level2 .mgp_subSubPage{opacity:0;pointer-events:none;transform:translate(100px, 0)}.mgp_container .mgp_optionsMenu.mgp_level3 .mgp_mainPage>ul{opacity:0;pointer-events:none;transform:translate(-200px, 0)}.mgp_container .mgp_optionsMenu.mgp_level3 .mgp_subPage>.mgp_content,.mgp_container .mgp_optionsMenu.mgp_level3 .mgp_subPage>.mgp_header{opacity:0;pointer-events:none;transform:translate(-100px, 0)}.mgp_container .mgp_optionsMenu.mgp_level3 .mgp_subSubPage{opacity:1;pointer-events:auto}.mgp_container .mgp_optionsMenu.mgp_level3 .mgp_subSubPage>.mgp_content,.mgp_container .mgp_optionsMenu.mgp_level3 .mgp_subSubPage>.mgp_header{opacity:1;pointer-events:auto;transform:translate(0, 0)}.mgp_container .mgp_optionsMenu .mgp_switch{position:relative;padding:6px 70px 6px 22px;line-height:15px;cursor:pointer;color:#ccc;overflow:hidden;white-space:nowrap;box-sizing:border-box}.mgp_container .mgp_optionsMenu .mgp_switch.mgp_enabled span:after{opacity:0}.mgp_container .mgp_optionsMenu .mgp_switch.mgp_enabled span:before{opacity:1}.mgp_container .mgp_optionsMenu .mgp_switch.mgp_enabled span div{transform:translate(10px, 0)}.mgp_container .mgp_optionsMenu .mgp_switch span{position:absolute;display:inline-block;background-color:#999;top:6px;right:22px;margin:0;width:25px;height:15px;border-radius:7px;overflow:hidden;transition:background-color .2s linear;font-size:0;color:transparent}.mgp_container .mgp_optionsMenu .mgp_switch span:before,.mgp_container .mgp_optionsMenu .mgp_switch span:after{position:absolute;color:#000;top:0;width:18px;text-align:center;font-size:9px;line-height:16px;z-index:2;transition:opacity .2s linear}.mgp_container .mgp_optionsMenu .mgp_switch span:before{content:" ";left:0;opacity:0}.mgp_container .mgp_optionsMenu .mgp_switch span:after{content:" ";right:0;opacity:1}.mgp_container .mgp_optionsMenu .mgp_switch span div{position:absolute;top:2px;left:2px;width:11px;height:11px;background:#fff;z-index:3;border-radius:50%;font-size:0;color:transparent;transform:translate(0, 0);transition:transform .2s ease}.mgp_container .mgp_optionsMenu .mgp_switch:hover,.mgp_container .mgp_optionsMenu .mgp_switch.mgp_hover{color:#fff}.mgp_container .mgp_optionsMenu .mgp_switch.mgp_active span{opacity:1}.mgp_container .mgp_optionsMenu .mgp_switch .mgp_icon-info{display:inline-block;color:#999;padding-top:28px;margin:-28px 0 0 6px;position:relative;top:1px;font-size:11px;cursor:pointer}.mgp_container .mgp_optionsMenu .mgp_switch .mgp_icon-info.mgp_active,.mgp_container .mgp_optionsMenu .mgp_switch .mgp_icon-info:hover{color:#fff}.mgp_container .mgp_optionsMenu .mgp_selector{position:relative;padding:6px 40px 6px 22px;line-height:15px;color:#ccc;cursor:pointer;overflow:hidden;box-sizing:border-box;white-space:nowrap;display:flex;justify-content:space-between}.mgp_container .mgp_optionsMenu .mgp_selector:hover,.mgp_container .mgp_optionsMenu .mgp_selector.mgp_hover{color:#fff}.mgp_container .mgp_optionsMenu .mgp_selector:hover:after,.mgp_container .mgp_optionsMenu .mgp_selector.mgp_hover:after{border-color:#fff}.mgp_container .mgp_optionsMenu .mgp_selector.mgp_active{background-color:rgba(204,204,204,.1)}.mgp_container .mgp_optionsMenu .mgp_selector:after{content:"";width:7px;height:7px;border-right:2px solid #ccc;border-bottom:2px solid #ccc;position:absolute;top:10px;right:24px;transform:rotate(-45deg)}.mgp_container .mgp_optionsMenu .mgp_selector .mgp_value{margin:1px 0 0 20px;white-space:nowrap;display:inline-block;line-height:14px;font-size:11px;color:#ccc !important}.mgp_container .mgp_optionsMenu ul{margin:0;padding:14px 0 13px;border-bottom:1px solid rgba(255,255,255,.2);position:relative;opacity:1;transform:translate(0, 0)}.mgp_container .mgp_optionsMenu ul:last-child{border-bottom:0;padding-bottom:14px}.mgp_container .mgp_optionsMenu ul li{color:#ccc;line-height:25px;margin:0;padding:1px 22px 0;text-align:right;cursor:pointer;white-space:nowrap}.mgp_container .mgp_optionsMenu ul li:hover,.mgp_container .mgp_optionsMenu ul li.mgp_hover{color:#fff}.mgp_container .mgp_optionsMenu ul li.mgp_active{color:#fff;background:rgba(204,204,204,.1);cursor:default;border-right:2px solid #fff;padding-right:20px}.mgp_container .mgp_optionsMenu ul li b{display:inline-block;font-weight:bold;width:20px;text-align:center}.mgp_container .mgp_optionsMenu ul li.mgp_adaptive b{width:auto}.mgp_container .mgp_optionsMenu ul li.mgp_disabled{pointer-events:none;color:#888}.mgp_container .mgp_optionsMenu ul li.mgp_disabled span.mgp_auto-details{display:none}.mgp_container .mgp_optionsMenu .mgp_subPage,.mgp_container .mgp_optionsMenu .mgp_subSubPage{z-index:6;position:absolute;bottom:0;right:0;opacity:0;pointer-events:none;overflow:hidden;transition:opacity .15s linear}.mgp_container .mgp_optionsMenu .mgp_subPage>.mgp_content,.mgp_container .mgp_optionsMenu .mgp_subPage>.mgp_header,.mgp_container .mgp_optionsMenu .mgp_subSubPage>.mgp_content,.mgp_container .mgp_optionsMenu .mgp_subSubPage>.mgp_header{pointer-events:none;opacity:0;transform:translate(100px, 0);transition:opacity .15s linear,transform .15s ease-out}.mgp_container .mgp_optionsMenu .mgp_subPage .mgp_header,.mgp_container .mgp_optionsMenu .mgp_subSubPage .mgp_header{padding:10px 22px 10px 44px;line-height:15px;text-align:left;white-space:nowrap;cursor:pointer;border-bottom:1px solid rgba(255,255,255,.2);color:#fff;position:relative}.mgp_container .mgp_optionsMenu .mgp_subPage .mgp_header:after,.mgp_container .mgp_optionsMenu .mgp_subSubPage .mgp_header:after{content:"";width:7px;height:7px;border-left:2px solid #ccc;border-bottom:2px solid #ccc;position:absolute;top:14px;left:22px;transform:rotate(45deg)}.mgp_container .mgp_optionsMenu .mgp_subPage .mgp_header:hover,.mgp_container .mgp_optionsMenu .mgp_subPage .mgp_header.mgp_hover,.mgp_container .mgp_optionsMenu .mgp_subSubPage .mgp_header:hover,.mgp_container .mgp_optionsMenu .mgp_subSubPage .mgp_header.mgp_hover{background-color:rgba(204,204,204,.1)}.mgp_container .mgp_optionsMenu .mgp_subPage div.mgp_ccOptions,.mgp_container .mgp_optionsMenu .mgp_subSubPage div.mgp_ccOptions{border-bottom:1px solid rgba(255,255,255,.2);padding-bottom:14px;margin-bottom:14px}.mgp_container .mgp_optionsMenu .mgp_subPage ul,.mgp_container .mgp_optionsMenu .mgp_subSubPage ul{display:none;border-bottom:0}.mgp_container .mgp_optionsMenu.mgp_visible{opacity:1;pointer-events:auto}.mgp_container .mgp_optionsMenu.mgp_visible .mgp_background{transform:translate(0, 0);pointer-events:auto}.mgp_container .mgp_optionsMenu .mgp_selector.mgp_disabled{pointer-events:none;color:#888}.mgp_container .mgp_optionsMenu .mgp_selector.mgp_disabled:after{border-color:#888 !important}.mgp_container .mgp_optionsMenu .mgp_selector.mgp_disabled .mgp_value{color:#888 !important}.mgp_container.mgp_seekBarDrag .mgp_hotspots,.mgp_container.mgp_seekBarDrag .mgp_optionsMenu{pointer-events:none !important}.mgp_container .mgp_playerStateIcon{position:absolute;width:108px;height:108px;top:50%;left:50%;margin:-54px 0 0 -54px;border-radius:54px;text-align:center;z-index:6;pointer-events:none;cursor:pointer;transform:translateZ(0);opacity:0;transition:opacity .2s linear}.mgp_container .mgp_playerStateIcon .mgp_play,.mgp_container .mgp_playerStateIcon .mgp_pause{position:absolute;width:100%;height:100%;opacity:0;border-radius:54px;overflow:hidden;cursor:pointer;z-index:2;color:#fff;transition:opacity .2s linear}.mgp_container .mgp_playerStateIcon .mgp_play .mgp_icon,.mgp_container .mgp_playerStateIcon .mgp_pause .mgp_icon{margin-top:1px;font-size:36px;line-height:108px;border-radius:54px;cursor:pointer}.mgp_container .mgp_playerStateIcon .mgp_play .mgp_icon{margin-left:11px}.mgp_container .mgp_playerStateIcon .mgp_buffering{position:absolute;width:100%;height:100%;z-index:2;transform:rotate(32.5deg);opacity:0;transition:opacity .2s linear}.mgp_container .mgp_playerStateIcon .mgp_buffering svg{display:block;position:relative;margin:14px;width:80px;height:80px;animation:spin .66s steps(8) infinite}.mgp_container .mgp_playerStateIcon .mgp_background{position:absolute;width:100%;height:100%;overflow:hidden;opacity:.4;background:#000;border-radius:54px;z-index:1}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mgp_container.mgp_showFwdRwd .mgp_playerStateIcon{display:none}.mgp_container.mgp_readyState .mgp_playerStateIcon{opacity:1 !important;pointer-events:auto;transition:none !important;transform:none !important}.mgp_container.mgp_readyState .mgp_playerStateIcon .mgp_play{opacity:1 !important;pointer-events:auto}.mgp_container.mgp_tablet.mgp_pausedState .mgp_playerStateIcon,.mgp_container.mgp_tablet.mgp_hideControls.mgp_pausedState .mgp_playerStateIcon{opacity:1;pointer-events:auto}.mgp_container.mgp_tablet.mgp_pausedState .mgp_playerStateIcon .mgp_play,.mgp_container.mgp_tablet.mgp_hideControls.mgp_pausedState .mgp_playerStateIcon .mgp_play{opacity:1}.mgp_container.mgp_tablet.mgp_pausedState .mgp_playerStateIcon .mgp_pause,.mgp_container.mgp_tablet.mgp_hideControls.mgp_pausedState .mgp_playerStateIcon .mgp_pause{opacity:0}.mgp_container.mgp_playingState .mgp_playerStateIcon{opacity:1;pointer-events:auto}.mgp_container.mgp_playingState .mgp_playerStateIcon .mgp_play{opacity:0}.mgp_container.mgp_playingState.mgp_tablet.mgp_hideControls .mgp_playerStateIcon{opacity:0;pointer-events:none}.mgp_container.mgp_playingState.mgp_tablet.mgp_showControls .mgp_playerStateIcon{opacity:1}.mgp_container.mgp_playingState.mgp_tablet.mgp_showControls .mgp_playerStateIcon .mgp_pause{pointer-events:auto}.mgp_container.mgp_playingState.mgp_tablet .mgp_playerStateIcon .mgp_pause{opacity:1;transition-delay:.2s}.mgp_container.mgp_bufferingState .mgp_playerStateIcon,.mgp_container.mgp_bufferingState.mgp_embedded .mgp_playerStateIcon{opacity:1 !important}.mgp_container.mgp_bufferingState .mgp_playerStateIcon .mgp_buffering,.mgp_container.mgp_bufferingState.mgp_embedded .mgp_playerStateIcon .mgp_buffering{opacity:1 !important}.mgp_container.mgp_bufferingState .mgp_playerStateIcon{transition-delay:1s}.mgp_container.mgp_bufferingState .mgp_playerStateIcon .mgp_play{transition:none}.mgp_container.mgp_bufferingState .mgp_playerStateIcon .mgp_pause{transition:none}.mgp_container.mgp_adRollRunning .mgp_playerStateIcon,.mgp_container.mgp_embedded .mgp_playerStateIcon,.mgp_container.mgp_desktop .mgp_playerStateIcon{opacity:0;pointer-events:none}.mgp_container.mgp_adRollRunning .mgp_playerStateIcon>*,.mgp_container.mgp_embedded .mgp_playerStateIcon>*,.mgp_container.mgp_desktop .mgp_playerStateIcon>*{pointer-events:none}.mgp_container.mgp_playingState .mgp_playerStateIcon.mgp_animate .mgp_play{transition:none;opacity:1}.mgp_container.mgp_playingState .mgp_playerStateIcon.mgp_animate .mgp_pause{opacity:0;transition:none}.mgp_container.mgp_pausedState .mgp_playerStateIcon.mgp_animate .mgp_pause{transition:none;opacity:1}.mgp_container.mgp_pausedState .mgp_playerStateIcon.mgp_animate .mgp_play{opacity:0;transition:none}.mgp_container .mgp_playerStateIcon.mgp_animate{transition:none;opacity:0;transform:scale(0.4);animation:bounceBtn .3s normal forwards}@keyframes bounceBtn{0%{transform:scale(0.4);opacity:0}5%{transform:scale(0.4);opacity:1}50%{opacity:.8}95%{transform:scale(1.2);opacity:0}100%{transform:scale(1.2);opacity:0}}.mgp_container .mgp_nextVideoTooltip{position:absolute;bottom:56px;width:390px;height:124px;background:rgba(0,0,0,.8);padding:8px;left:15px;z-index:7;opacity:1;pointer-events:none;transform:translate(0, 0);transition:opacity .2s linear,transform .1s ease-out}.mgp_container .mgp_nextVideoTooltip.mgp_hidden{opacity:0;transform:translate(0, -10px)}.mgp_container .mgp_nextVideoTooltip .mgp_thumb{display:block;height:100%;width:192px;background-size:cover;background-position:center;position:relative;float:left;overflow:hidden}.mgp_container .mgp_nextVideoTooltip .mgp_thumb img,.mgp_container .mgp_nextVideoTooltip .mgp_thumb video{height:auto;width:100%}.mgp_container .mgp_nextVideoTooltip .mgp_thumb .mgp_preloadLine{left:-100%;position:absolute;top:0;height:2px;width:100%;z-index:5;animation:preloadAnimation linear 1s;-webkit-animation:preloadAnimation linear 1s;-o-animation:preloadAnimation linear 1s;animation-iteration-count:infinite;-webkit-animation-iteration-count:infinite;-o-animation-iteration-count:infinite;opacity:1}.mgp_container .mgp_nextVideoTooltip .mgp_text{width:46%;float:left;padding-left:8px}.mgp_container .mgp_nextVideoTooltip .mgp_text .mgp_next{font-weight:bold;color:#ccc;padding:5px 0}.mgp_container .mgp_nextVideoTooltip .mgp_text .mgp_title{max-height:60px;overflow:hidden;text-overflow:ellipsis;display:block;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:3}.mgp_container .mgp_nextVideoTooltip.mgp_videoLoaded .mgp_thumb .mgp_preloadLine{opacity:0;display:none}@keyframes preloadAnimation{0%{transform:translateX(0)}90%{transform:translateX(100%)}100%{transform:translateY(-2px)}}.mgp_container .mgp_overlayText{position:absolute;font-size:20px;line-height:1.4;width:auto;height:auto;box-sizing:border-box;cursor:default;border-radius:4px;text-shadow:0 0 5px rgba(0,0,0,.5);color:#fff}.mgp_container .mgp_overlayText.mgp_banner .mgp_text,.mgp_container .mgp_overlayText.mgp_iframe .mgp_text{padding:2px}.mgp_container .mgp_overlayText .mgp_text{width:100%;height:100%;padding:2px 10px;border:solid 2px rgba(255,255,255,.2);border-radius:4px;background-color:none;transition:background-color .2s linear,border-color .2s linear}.mgp_container .mgp_overlayText .mgp_text img{width:100%;border:0;display:block}.mgp_container .mgp_overlayText .mgp_text iframe{margin:0;padding:0;border:0;overflow:hidden;display:block}.mgp_container .mgp_overlayText .mgp_text i{font-style:italic}.mgp_container .mgp_overlayText .mgp_text b{font-weight:bold}.mgp_container .mgp_overlayText .mgp_text a{color:#9af}.mgp_container .mgp_overlayText .mgp_text a:hover{color:#cdf}.mgp_container .mgp_overlayText .mgp_text:hover{border-color:rgba(255,255,255,.5);background-color:rgba(255,255,255,.1)}.mgp_container .mgp_overlayText .mgp_text:hover .mgp_closeButton{opacity:1}.mgp_container .mgp_overlayText .mgp_closeButton{position:absolute;width:18px;height:18px;top:-10px;right:-10px;padding:0;text-align:center;font-weight:bold;font-size:20px;line-height:18px;text-shadow:none;box-sizing:border-box;background:#ccc;color:#000;border-radius:50%;cursor:pointer;opacity:0;transition:opacity .2s linear}.mgp_container .mgp_overlayText .mgp_closeButton:hover{background:#fff}.mgp_container .mgp_overlayText.mgp_hidden,.mgp_container .mgp_overlayText.mgp_closed{display:none}.mgp_container .mgp_overlayText.mgp_link .mgp_text{cursor:pointer}.mgp_container .mgp_overlayText.mgp_hCentered{left:10px;right:10px;text-align:center}.mgp_container .mgp_overlayText.mgp_hCentered .mgp_text{position:relative;display:inline-block;width:auto}.mgp_container .mgp_overlayText.mgp_noBorder .mgp_text{padding:0;border:none;background-color:none}.mgp_container .mgp_overlayText.mgp_noBorder iframe+.mgp_closeButton{right:-18px}.mgp_container .mgp_versionsInfo{position:absolute;z-index:6;top:46%;left:50%;padding:10px;transform:translate(-50%, -50%);background:rgba(0,0,0,.75);opacity:0;visibility:hidden;transition:opacity .2s linear}.mgp_container .mgp_versionsInfo .mgp_copyCloseDiv{border-bottom:1px solid rgba(255,255,255,.2);overflow:hidden;margin:-10px -10px 10px;padding:2px 4px}.mgp_container .mgp_versionsInfo .mgp_copyCloseDiv .mgp_copyMenu{float:right;margin-right:4px}.mgp_container .mgp_versionsInfo .mgp_copyCloseDiv .mgp_title{font-size:16px;line-height:30px;padding:0 0 0 5px;float:left}.mgp_container .mgp_versionsInfo .mgp_playerVersions{width:250px;height:200px;overflow-y:scroll}.mgp_container .mgp_versionsInfo .mgp_playerVersions .mgp_debugContainer{margin-bottom:15px}.mgp_container .mgp_versionsInfo .mgp_playerVersions .mgp_debugContainer:last-of-type{margin-bottom:0}.mgp_container .mgp_versionsInfo .mgp_playerVersions .mgp_debugContainer>div{color:#ccc;white-space:nowrap;padding:0px 10px 0 20px;font-size:12px;text-overflow:ellipsis;overflow:hidden}.mgp_container .mgp_versionsInfo .mgp_playerVersions .mgp_debugContainer>div.mgp_titleInfo{white-space:nowrap;padding:0 5px;font-size:14px;font-weight:bold;color:#fff}.mgp_container .mgp_versionsInfo .mgp_playerVersions .mgp_debugContainer>div strong{color:#ddd;font-weight:bold}.mgp_container .mgp_versionsInfo .mgp_playerVersions .mgp_debugContainer .mgp_subTitleInfo{font-size:115%;color:#ddd;font-weight:bold;margin-bottom:3px;margin-top:10px}.mgp_container .mgp_versionsInfo .mgp_playerVersions::-webkit-scrollbar-track{border-radius:0;background-color:rgba(0,0,0,.75)}.mgp_container .mgp_versionsInfo .mgp_playerVersions::-webkit-scrollbar{width:6px;background-color:rgba(0,0,0,.75)}.mgp_container .mgp_versionsInfo .mgp_playerVersions::-webkit-scrollbar-thumb{border-radius:0}.mgp_container .mgp_versionsInfo .mgp_playerVersions .mgp_adaptiveDetails{display:none}.mgp_container .mgp_versionsInfo .mgp_playerVersions .mgp_adaptiveDetails.mgp_active{display:block}.mgp_container .mgp_versionsInfo .mgp_hideVersionMenu,.mgp_container .mgp_versionsInfo .mgp_icon-copy{display:inline;float:right;cursor:pointer;pointer-events:auto;padding:5px}.mgp_container .mgp_versionsInfo .mgp_hideVersionMenu{font-size:25px}.mgp_container .mgp_versionsInfo .mgp_icon-copy{line-height:inherit;color:#ccc}.mgp_container .mgp_versionsInfo .mgp_icon-copy:active,.mgp_container .mgp_versionsInfo .mgp_icon-copy:hover{color:#fff}.mgp_container .mgp_versionsInfo.mgp_active{opacity:1;visibility:visible}.mgp_container .mgp_keyboardShortcuts{background:rgba(0,0,0,.75);position:absolute;top:50%;left:50%;transition:opacity .2s linear;width:90%;max-width:550px;transform:translate(-50%, -50%);z-index:6;opacity:0;visibility:hidden}.mgp_container .mgp_keyboardShortcuts .mgp_hideShortcuts{cursor:pointer;position:absolute;top:0;right:0;font-size:25px;padding:5px 8px;pointer-events:auto}.mgp_container .mgp_keyboardShortcuts .mgp_shortcutInfo{display:inline-block;padding:10px 15px 12px;width:100%}.mgp_container .mgp_keyboardShortcuts .mgp_shortcutInfo div{display:inline-block;margin:0;padding:5px 0px;vertical-align:middle;width:50%}.mgp_container .mgp_keyboardShortcuts .mgp_shortcutInfo div .mgp_shortBtn,.mgp_container .mgp_keyboardShortcuts .mgp_shortcutInfo div .mgp_longBtn{background-color:#fff;border-radius:3px;box-shadow:0 2px 0 2px #b7b7b7;color:#000;font:12px/30px sans-serif;height:30px;margin-right:10px;padding:0px;text-align:center;width:30px}.mgp_container .mgp_keyboardShortcuts .mgp_shortcutInfo div .mgp_longBtn{width:70px}.mgp_container .mgp_keyboardShortcuts .mgp_shortcutInfo div.mgp_volumeContainer .mgp_shortBtn,.mgp_container .mgp_keyboardShortcuts .mgp_shortcutInfo div.mgp_seekContainer .mgp_shortBtn{font-size:12px;line-height:28px}.mgp_container .mgp_keyboardShortcuts .mgp_shortcutInfo div span{display:inline-block;max-width:65%;max-height:30px;vertical-align:middle}.mgp_container .mgp_keyboardShortcuts.mgp_active{opacity:1;visibility:visible}.mgp_container .mgp_forwardRewind{display:none}.mgp_container .mgp_forwardRewind .mgp_fastForwardCont,.mgp_container .mgp_forwardRewind .mgp_rewindCont{opacity:0}.mgp_container.mgp_tablet .mgp_forwardRewind{display:block}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont{position:absolute;height:100%;width:100%;top:0;z-index:3;opacity:0;background-color:rgba(0,0,0,.4);transition:opacity .2s linear;pointer-events:none}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_forwardText,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_rewindText,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_forwardText,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_rewindText{font-size:14px;top:50%;margin-top:5px;position:absolute;z-index:5}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_fastForward,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_rewind,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_fastForward,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_rewind{position:absolute;z-index:5;width:70px;top:50%;left:50%;margin-top:-25px;color:#ccc;background-color:transparent;border:0;opacity:1;transition:opacity .5s cubic-bezier(1, 0, 1, 0);pointer-events:none;overflow:hidden;padding:0px}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_fastForward.mgp_hover .mgp_icon,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_rewind.mgp_hover .mgp_icon,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_fastForward.mgp_hover .mgp_icon,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_rewind.mgp_hover .mgp_icon{color:#fff;text-shadow:0 0 20px #fff}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_fastForward,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_forwardText,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_fastForward,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_forwardText{left:65%}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_rewind,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_rewindText,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_rewind,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_rewindText{left:22%}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_rewind,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_rewind{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_icon,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_icon{font-size:20px;-webkit-animation-name:seekAnimation;animation-name:seekAnimation;-webkit-animation-duration:1.5s;-webkit-animation-iteration-count:infinite;animation-duration:1s;animation-iteration-count:infinite;opacity:0;display:inline-block}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_icon:nth-child(2),.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_icon:nth-child(2){animation-delay:.2s}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont .mgp_icon:nth-child(3),.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont .mgp_icon:nth-child(3){animation-delay:.4s}.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_fastForwardCont.mgp_visible,.mgp_container.mgp_tablet .mgp_forwardRewind .mgp_rewindCont.mgp_visible{opacity:1}@-webkit-keyframes seekAnimation{0%,100%{opacity:0}50%{opacity:1}}@keyframes seekAnimation{0%,100%{opacity:0}50%{opacity:1}}.mgp_container.mgp_platformChange .mgp_controlBar{transition-duration:0s !important}.mgp_container.mgp_fullscreen .mgp_thumbnails,.mgp_container.mgp_tablet .mgp_thumbnails{bottom:80px}.mgp_container.mgp_fullscreen .mgp_controlBar,.mgp_container.mgp_tablet .mgp_controlBar{height:52px}.mgp_container.mgp_fullscreen .mgp_controlBar>.mgp_front,.mgp_container.mgp_tablet .mgp_controlBar>.mgp_front{height:52px}.mgp_container.mgp_fullscreen .mgp_controlBar>.mgp_background,.mgp_container.mgp_tablet .mgp_controlBar>.mgp_background{height:85px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_seekBar,.mgp_container.mgp_tablet .mgp_controlBar .mgp_seekBar{bottom:52px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_time,.mgp_container.mgp_tablet .mgp_controlBar .mgp_time{font-size:18px;line-height:52px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_btn,.mgp_container.mgp_tablet .mgp_controlBar .mgp_btn{font-size:18px;line-height:52px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_btn.mgp_icon,.mgp_container.mgp_tablet .mgp_controlBar .mgp_btn.mgp_icon{width:46px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_airplay,.mgp_container.mgp_tablet .mgp_controlBar .mgp_airplay{height:46px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_airplay .mgp_airplayBtn,.mgp_container.mgp_tablet .mgp_controlBar .mgp_airplay .mgp_airplayBtn{height:46px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_airplay .mgp_airplayBtn .mgp_airplay-icon,.mgp_container.mgp_tablet .mgp_controlBar .mgp_airplay .mgp_airplayBtn .mgp_airplay-icon{margin:14px 5px 5px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_volumeSlider,.mgp_container.mgp_tablet .mgp_controlBar .mgp_volumeSlider{padding:8px 8px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_fullscreen,.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_cinema,.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_options,.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_playPause,.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_nextVideo,.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_volume,.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_cc,.mgp_container.mgp_tablet .mgp_controlBar .mgp_fullscreen,.mgp_container.mgp_tablet .mgp_controlBar .mgp_cinema,.mgp_container.mgp_tablet .mgp_controlBar .mgp_options,.mgp_container.mgp_tablet .mgp_controlBar .mgp_playPause,.mgp_container.mgp_tablet .mgp_controlBar .mgp_nextVideo,.mgp_container.mgp_tablet .mgp_controlBar .mgp_volume,.mgp_container.mgp_tablet .mgp_controlBar .mgp_cc{width:46px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_cc .mgp_btn,.mgp_container.mgp_tablet .mgp_controlBar .mgp_cc .mgp_btn{font-size:12px;line-height:22px;margin:15px 10px;height:22px;width:28px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_options .mgp_btn,.mgp_container.mgp_tablet .mgp_controlBar .mgp_options .mgp_btn{font-size:22px}.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_options .mgp_btn.mgp_HD:after,.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_options .mgp_btn.mgp_K2:after,.mgp_container.mgp_fullscreen .mgp_controlBar .mgp_options .mgp_btn.mgp_K4:after,.mgp_container.mgp_tablet .mgp_controlBar .mgp_options .mgp_btn.mgp_HD:after,.mgp_container.mgp_tablet .mgp_controlBar .mgp_options .mgp_btn.mgp_K2:after,.mgp_container.mgp_tablet .mgp_controlBar .mgp_options .mgp_btn.mgp_K4:after{top:10px;right:4px}.mgp_container.mgp_fullscreen.mgp_hideControls .mgp_controlBar,.mgp_container.mgp_tablet.mgp_hideControls .mgp_controlBar{transform:translate(0, 61px)}.mgp_container.mgp_fullscreen.mgp_showControls .mgp_ccContainer,.mgp_container.mgp_tablet.mgp_showControls .mgp_ccContainer{bottom:68px}.mgp_container.mgp_fullscreen .mgp_optionsMenu,.mgp_container.mgp_tablet .mgp_optionsMenu{bottom:72px}.mgp_container.mgp_tablet.mgp_adRollRunning.mgp_playingState .mgp_playerStateIcon,.mgp_container.mgp_tablet.mgp_embedded.mgp_playingState .mgp_playerStateIcon{opacity:0;pointer-events:none}.mgp_container.mgp_tablet.mgp_adRollRunning.mgp_playingState .mgp_playerStateIcon .mgp_pause,.mgp_container.mgp_tablet.mgp_embedded.mgp_playingState .mgp_playerStateIcon .mgp_pause{display:none}.mgp_container.mgp_tablet.mgp_showControls .mgp_controlBar .mgp_seekBar .mgp_progressPadding .mgp_handle,.mgp_container.mgp_tablet.mgp_embedded .mgp_controlBar .mgp_seekBar .mgp_progressPadding .mgp_handle{transform:scale(1);opacity:1}.mgp_container .mgp_controlBar .mgp_actionTags{display:none}.mgp_container .mgp_controlBar .mgp_actionTags i{transition:color .2s ease-in-out}.mgp_container .mgp_controlBar .mgp_actionTagsEnabled .mgp_actionTags{display:block}.mgp_container .mgp_actionTagTitle{background:rgba(0,0,0,.5);background:linear-gradient(rgba(41, 41, 41, 0.9), rgba(17, 17, 17, 0.9));background:-webkit-gradient(rgba(41, 41, 41, 0.9), rgba(17, 17, 17, 0.9));border-radius:3px;box-shadow:0 0 10px rgba(255,255,255,.15);bottom:30px;display:none;font-size:12px;max-width:300px;overflow:hidden;position:absolute;padding:2px 10px;text-overflow:ellipsis;text-shadow:1px 1px 0 rgba(0,0,0,.7);white-space:nowrap;z-index:10}.mgp_container .mgp_actionTagsScreen{opacity:0;left:0;overflow:hidden;pointer-events:none;position:absolute;height:100%;transition:opacity .2s ease-in-out;width:100%;z-index:3}.mgp_container .mgp_actionTagsScreen .mgp_tagsOverlayTitle{opacity:0;display:none}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper,.mgp_container .mgp_actionTagsScreen .mgp_actionNav{transition:transform .2s ease-in-out;transform:translate(0, -10px)}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper{bottom:55px;position:absolute;width:100%}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper .mgp_actionTagsWrapper{overflow-x:auto;overflow-y:hidden;text-align:right;white-space:nowrap;width:auto;-ms-overflow-style:none;scrollbar-width:none}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper .mgp_actionTagsWrapper::-webkit-scrollbar{display:none}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper .mgp_actionTagsWrapper>*{box-sizing:border-box;display:inline-block;height:65px}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper .mgp_actionTagsWrapper .mgp_actionTagPill{background:#111;background:linear-gradient(rgba(41, 41, 41, 0.95), rgba(17, 17, 17, 0.95));background:-webkit-gradient(rgba(41, 41, 41, 0.95), rgba(17, 17, 17, 0.95));border-radius:5px;box-shadow:0 0 10px rgba(0,0,0,.5);cursor:pointer;margin-left:10px;padding:15px 10px}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper .mgp_actionTagsWrapper .mgp_actionTagPill:last-of-type{margin-right:20px}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper .mgp_actionTagsWrapper .mgp_actionTagPill span{text-shadow:1px 1px 0 rgba(0,0,0,.7);display:block;font-weight:bold;text-align:center}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper .mgp_actionTagsWrapper .mgp_actionTagPill span.mgp_tagName{color:#ccc;font-size:.825em}.mgp_container .mgp_actionTagsScreen .mgp_actionNavWrapper .mgp_actionTagsWrapper .mgp_actionTagPill span.mgp_tagTime{font-size:.75em}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNavWrapper{left:40px;width:calc(100% - 80px)}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav{bottom:55px;display:block;height:65px;position:absolute;text-shadow:1px 1px 0 rgba(0,0,0,.7);width:20px}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navLeft{cursor:pointer;left:20px}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navLeft:before{content:"";width:10px;height:10px;border-left:3px solid #ccc;border-bottom:3px solid #ccc;position:absolute;left:5px;top:32.5px;transform:rotate(45deg)}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navLeft:hover:before{border-color:#fff}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navLeft.mgp_animated{border-radius:5px;-webkit-animation:action .5s infinite alternate;animation:action .5s infinite alternate}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navLeft.mgp_animated:before{border-left-color:#fff;border-top-color:#fff}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navRight{cursor:pointer;right:20px}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navRight:before{content:"";width:10px;height:10px;border-left:3px solid #ccc;border-bottom:3px solid #ccc;position:absolute;left:5px;top:32.5px;transform:rotate(-135deg)}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navRight:hover:before{border-color:#fff}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navRight.mgp_animated{border-radius:5px;-webkit-animation:action .5s infinite alternate;animation:action .5s infinite alternate}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionNav.mgp_navRight.mgp_animated:before{border-left-color:#fff;border-top-color:#fff}.mgp_container .mgp_actionTagsScreen.mgp_navEnabled .mgp_actionTagsWrapper .mgp_actionTagPill:first-of-type{margin-left:0}.mgp_container.mgp_actionTagsScreenVisible .mgp_actionTagsScreen{opacity:1;pointer-events:auto;z-index:7}.mgp_container.mgp_actionTagsScreenVisible .mgp_actionNavWrapper,.mgp_container.mgp_actionTagsScreenVisible .mgp_actionNav{transform:translate(0, 0)}.mgp_container.mgp_actionTagsScreenVisible .mgp_controlBar .mgp_actionTags i{color:#fff}.mgp_container.mgp_actionTagsScreenVisible.mgp_fullscreen .mgp_actionNavWrapper{bottom:80px}.mgp_container.mgp_tablet.mgp_actionTagsScreenVisible .mgp_actionNavWrapper{bottom:75px}.mgp_container .mgp_castOverlay{align-items:center;bottom:0px;background:rgba(0,0,0,.9);display:flex;flex-direction:column;font-size:18px;justify-content:center;left:0px;pointer-events:none;right:0px;top:0px}.mgp_container .mgp_castOverlay .mgp_castText{color:#ccc;font-size:13px}.mgp_container .mgp_castOverlay .mgp_castLogo{margin:10px 0 20px;width:150px;height:150px}.mgp_container .mgp_castOverlay .mgp_castLogo button{border:0 !important;background:transparent;--disconnected-color: rgba(255, 255, 255, 0.1);--connected-color: rgba(255, 255, 255, 0.1)}.mgp_container .mgp_controlBar .mgp_chromecast{display:none;width:auto;margin:0 7px 0 0}.mgp_container .mgp_controlBar .mgp_chromecast:hover .mgp_chromecastBtn{color:#fff;--disconnected-color: #ffffff}.mgp_container .mgp_controlBar .mgp_chromecast .mgp_chromecastBtn{background-color:transparent;border:0;cursor:pointer;padding:5px;width:36px;height:100%;z-index:5;--disconnected-color: #cccccc}.mgp_container .mgp_controlBar .mgp_chromecast .mgp_chromecastBtn:focus{border:0;outline:0}.mgp_container{font:400 14px/20px "Helvetica Neue",Helvetica,Arial,sans-serif;color:#fff;-webkit-font-smoothing:antialiased;background:#000;position:relative;width:100%;height:100%;overflow:hidden}.mgp_container video{background:transparent}.mgp_container .mgp_eventCatcher{position:absolute;top:0;left:0px;width:100%;height:100%;z-index:4;outline:none}.mgp_container>.mgp_share{position:absolute;top:20px;right:28px;width:42px;height:42px;padding:1px;z-index:4;overflow:hidden;cursor:pointer;color:#fff;display:none;transform:translate(0, 0);transition:transform .3s ease}.mgp_container>.mgp_share .mgp_icon{font-size:40px}.mgp_container>.mgp_share:hover,.mgp_container>.mgp_share.mgp_hover{color:#fff}.mgp_container .mgp_videoPoster{z-index:3}.mgp_container .mgp_staticRoll{position:absolute;z-index:2;top:0;left:0;width:100%;height:100%;cursor:pointer;background-color:#000;background-repeat:no-repeat;background-position:center;background-size:cover}.mgp_container .mgp_staticRoll.mgp_hidden{display:none}.mgp_container .mgp_videoWrapper .mgp_screenshot{position:absolute;top:0;left:0;width:100%;height:100%;z-index:2;opacity:1;pointer-events:none}.mgp_container .mgp_videoWrapper .mgp_screenshot.mgp_hidden{opacity:0}.mgp_container .mgp_videoWrapper .mgp_screenshot canvas{position:absolute;top:0;left:0;width:100%;height:100%;transform:translateZ(360deg);-webkit-backface-visibility:hidden;-webkit-touch-callout:none}.mgp_container.mgp_vr .mgp_videoPoster{z-index:2}.mgp_container.mgp_vr .mgp_eventCatcher{display:none}.mgp_container.mgp_vr .mgp_videoWrapper>canvas{position:absolute;top:0;left:0;bottom:0;right:0;z-index:5;transform:translateZ(360deg);backface-visibility:hidden}.mgp_container.mgp_embedded .mgp_watchHD{position:absolute;z-index:4;top:66px;left:20px;background:rgba(0,0,0,.9);padding:10px 40px;font-weight:bold;text-transform:uppercase;cursor:pointer;transform:translate(0, 0);transition:transform .3s ease-in-out}.mgp_container.mgp_hideControls.mgp_embedded .mgp_watchHD{transform:translate(0, -46px)}.mgp_container.mgp_hideControls .mgp_tooltip,.mgp_container.mgp_hideControls .mgp_thumbnails{opacity:0 !important;transition:none;pointer-events:none}.mgp_container.mgp_hideControls>.mgp_share{transform:translate(72px, 0)}.mgp_container.mgp_hideControls .mgp_topBar{transform:translate(0, -46px)}.mgp_container.mgp_hideControls .mgp_seekBar .mgp_hotspots{opacity:0 !important;pointer-events:none !important}.mgp_container.mgp_fullscreen,.mgp_container video.mgp_fullscreen{position:fixed !important;z-index:2147483647 !important;top:0 !important;left:0 !important;bottom:0 !important;right:0 !important;min-width:100% !important;min-height:100% !important}', ""]);
            const u = d
        }, 26: (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {default: () => a});
            var r = n(637), i = n.n(r)()(!1);
            i.push([e.id, '.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole{overflow-y:hidden}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper{height:calc(100% - 50px);overflow-y:hidden}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages{height:100%;overflow-y:auto}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_warn,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_error,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_table{padding:3px 5px;border-bottom:1px solid #333;font:12px/1.5 Consolas,monospace;font-weight:100}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log:last-child,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_warn:last-child,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_error:last-child,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_table:last-child{border-bottom:0}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log:first-child,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_warn:first-child,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_error:first-child,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_table:first-child{margin-top:0}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log .mgp_time,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_warn .mgp_time,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_error .mgp_time,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_table .mgp_time{display:none;padding:0 0 0 10px;float:right;white-space:nowrap;color:#999}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log .mgp_link,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_warn .mgp_link,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_error .mgp_link,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_table .mgp_link{color:#bbb;text-decoration:underline}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log .mgp_reserved,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_warn .mgp_reserved,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_error .mgp_reserved,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_table .mgp_reserved{color:#999}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_warn,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_error{margin-top:-1px}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_warn{color:#f2ab26;background:#332b00;border-color:#650;border-top:1px solid #650}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_error{color:#ff8080;background:#290000;border-color:#5c0000;border-top:1px solid #5c0000}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-text{display:inline-block;margin-right:1em}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object{display:inline-block}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object.mgp_open{display:block}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-title{cursor:pointer;text-transform:capitalize}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-title:before{content:"+";display:inline-block;height:12px;width:12px;border:1px solid #fff;cursor:pointer;margin:0 5px 2px 5px;line-height:8px;vertical-align:middle;text-align:center}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-body{display:none;padding:0 10px}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-body code{display:block;white-space:pre-wrap;margin:5px 0;padding:5px;font-size:12px;color:#bbb;background:#222327}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-body code .mgp_number{color:#f29766}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-body code .mgp_braces{color:#fff}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-body code .mgp_property{color:#5babd0}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-body code .mgp_string,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-body code .mgp_link{color:#35d4c7}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object .mgp_log-body code .mgp_boolean{color:#98f}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object.mgp_open .mgp_log-title:before{content:"-"}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleMessagesWrapper .mgp_consoleMessages .mgp_log-object.mgp_open .mgp_log-body{cursor:copy;display:block;padding:0 0 0 10px}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleTerminalWrapper{font:13px/1.5 Consolas,monospace;height:50px;padding:2px 12px 2px 15px;position:relative}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleTerminalWrapper:before{content:">";font-size:16px;font-weight:bold;line-height:1;position:absolute;left:2px;text-shadow:1px 1px 0px #000;top:7px;width:15px}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleTerminalWrapper textarea{background:#27282c;color:#fff;height:100%;padding:4px 10px;resize:none;width:100%;border:0}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleTerminalWrapper textarea,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleTerminalWrapper textarea:hover,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleTerminalWrapper textarea:focus,.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleTerminalWrapper textarea:active{outline:none}.mgp_debugPanel .mgp_panel-tabs .mgp_tabConsole .mgp_consoleTerminalWrapper textarea:focus{background:#27282c}.mgp_debugPanel .mgp_panel-tabs .mgp_eventsTab{position:relative;height:100%;overflow:hidden}.mgp_debugPanel .mgp_panel-tabs .mgp_timelineControls,.mgp_debugPanel .mgp_panel-tabs .mgp_listControls{position:absolute;top:10px;right:10px;color:#ccc}.mgp_debugPanel .mgp_panel-tabs .mgp_timelineScrollStart,.mgp_debugPanel .mgp_panel-tabs .mgp_timelineScrollEnd,.mgp_debugPanel .mgp_panel-tabs .mgp_listScrollStart,.mgp_debugPanel .mgp_panel-tabs .mgp_listScrollEnd{color:#fff;cursor:pointer}.mgp_debugPanel .mgp_panel-tabs .mgp_listScrollStart,.mgp_debugPanel .mgp_panel-tabs .mgp_listScrollEnd{display:inline-block;transform:rotate(90deg)}.mgp_debugPanel .mgp_panel-tabs .mgp_listSorter{padding:10px;border-bottom:1px solid #333;position:relative}.mgp_debugPanel .mgp_panel-tabs .mgp_listSorter select{outline:none;width:100px;padding:1px 5px 2px;color:#ccc;background:#444;border-radius:10px;border:1px solid #666;margin-right:20px}.mgp_debugPanel .mgp_list{overflow:auto;position:absolute;left:0;width:100%;bottom:0;top:0}.mgp_debugPanel .mgp_item{padding:3px 5px;border-bottom:1px solid #333;font:12px/1.5 Consolas,monospace;font-weight:100;overflow:hidden}.mgp_debugPanel .mgp_item.mgp_open .mgp_itemDetails,.mgp_debugPanel .mgp_item.mgp_open .mgp_itemProps{display:block}.mgp_debugPanel .mgp_item.mgp_open .mgp_itemName:before{content:"-"}.mgp_debugPanel .mgp_item .mgp_fired,.mgp_debugPanel .mgp_item .mgp_subscriptions{margin:0;padding:0 5px;float:left;width:50%;min-width:340px;min-height:18px;cursor:pointer;list-style:none}.mgp_debugPanel .mgp_item .mgp_fired li:before,.mgp_debugPanel .mgp_item .mgp_subscriptions li:before{float:left;margin-right:10px;content:"•"}.mgp_debugPanel .mgp_item .mgp_fired li div,.mgp_debugPanel .mgp_item .mgp_subscriptions li div{height:18px;overflow:hidden;display:-webkit-box;white-space:pre-wrap;-webkit-line-clamp:1;-webkit-box-orient:vertical}.mgp_debugPanel .mgp_item .mgp_fired li.mgp_open div,.mgp_debugPanel .mgp_item .mgp_subscriptions li.mgp_open div{height:auto;display:block}.mgp_debugPanel .mgp_item .mgp_fired li.mgp_open .mgp_funcCode,.mgp_debugPanel .mgp_item .mgp_subscriptions li.mgp_open .mgp_funcCode{white-space:pre-wrap;display:block}.mgp_debugPanel .mgp_item .mgp_subscriptions li:before{color:#76ef76}.mgp_debugPanel .mgp_item .mgp_subscriptions .mgp_funcClass{color:#fff}.mgp_debugPanel .mgp_item .mgp_subscriptions .mgp_funcCode{color:#76ef76}.mgp_debugPanel .mgp_item .mgp_fired li:before{color:#ff8080}.mgp_debugPanel .mgp_item .mgp_fired .mgp_funcClass{color:#fff}.mgp_debugPanel .mgp_item .mgp_fired .mgp_funcCode{white-space:normal;color:#ff8080}.mgp_debugPanel .mgp_itemName{float:left;min-width:260px;cursor:pointer}.mgp_debugPanel .mgp_itemName:before{content:"+";display:inline-block;height:12px;width:12px;border:1px solid #fff;margin:0 5px 2px 5px;line-height:8px;vertical-align:middle;text-align:center}.mgp_debugPanel .mgp_itemInfo{float:left}.mgp_debugPanel .mgp_itemInfo span{display:inline-block;min-width:18px;margin:-2px -3px;text-align:center;padding:2px 3px;border-radius:4px}.mgp_debugPanel .mgp_itemInfo .mgp_itemS{color:#76ef76}.mgp_debugPanel .mgp_itemInfo .mgp_itemF{color:#ff8080}.mgp_debugPanel .mgp_subscribers{color:#76ef76}.mgp_debugPanel .mgp_fired{color:#ff8080}.mgp_debugPanel .mgp_itemDetails,.mgp_debugPanel .mgp_itemProps{clear:both;float:left;width:100%;display:none;border-radius:4px;margin:5px 0;padding:5px;font-size:12px;color:#bbb;background:#222327;overflow:hidden}.mgp_debugPanel .mgp_panel-tabs .mgp_eventsTab .mgp_list{top:178px}.mgp_debugPanel .mgp_panel-tabs .mgp_statesTab .mgp_list{top:132px}.mgp_debugPanel .mgp_panel-tabs .mgp_statesTab .mgp_timeline{height:98px}.mgp_debugPanel .mgp_panel-tabs .mgp_statesTab .mgp_timeline .mgp_block{width:102px;height:66px;white-space:nowrap;text-overflow:ellipsis}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp{overflow:hidden}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropName{float:left;min-width:170px;color:#fff}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropName:before{margin-right:10px;content:"•";color:#999}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropValue{float:left;padding-left:5px;min-width:70px}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropValue.mgp_boolean{color:#ff8080}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropValue.mgp_boolean.mgp_positive{color:#76ef76}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropValue.mgp_number{color:#f29766}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropValue.mgp_string{color:#35d4c7}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropDefaultValue{padding-left:5px;float:left;min-width:70px;color:#666}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropValue.mgp_string:before,.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropDefaultValue.mgp_string:before{content:"\'"}.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropValue.mgp_string:after,.mgp_debugPanel .mgp_panel-tabs .mgp_statesProp .mgp_statesPropDefaultValue.mgp_string:after{content:"\'"}.mgp_debugPanel .mgp_panel-tabs .mgp_counters{display:inline-block;margin-right:10px}.mgp_debugPanel .mgp_panel-tabs .mgp_filtered{color:#666}.mgp_debugPanel .mgp_panel-tabs .mgp_filter{background:#202124;padding:10px 10px 0}.mgp_debugPanel .mgp_panel-tabs .mgp_filter input,.mgp_debugPanel .mgp_panel-tabs .mgp_filter button{color:#ccc;background:#444;border-radius:10px;border:1px solid #666;padding:0 5px;outline:none}.mgp_debugPanel .mgp_panel-tabs .mgp_filter button.mgp_active{background:#666;color:#fff}.mgp_debugPanel .mgp_panel-tabs .mgp_filter .mgp_filterStringContainer{position:relative;display:inline-block;margin:2px 10px 2px 0}.mgp_debugPanel .mgp_panel-tabs .mgp_filter .mgp_filterString{margin:0;padding:0 20px 0 10px;width:120px}.mgp_debugPanel .mgp_panel-tabs .mgp_filter .mgp_filterClear{position:absolute;right:1px;top:1px;border:0}.mgp_debugPanel .mgp_panel-tabs .mgp_filter .mgp_filterPlus{width:30px;margin:0 -1px 0 0;border-radius:10px 0 0 10px}.mgp_debugPanel .mgp_panel-tabs .mgp_filter .mgp_filterMinus{width:30px;margin-left:0;margin-right:20px;top:-1px;position:relative;line-height:16px;padding-bottom:2px;border-radius:0 10px 10px 0}.mgp_debugPanel .mgp_panel-tabs .mgp_timeline{background:#202124;height:102px;padding:10px;border-bottom:1px solid #333;overflow-y:hidden;overflow-x:auto}.mgp_debugPanel .mgp_panel-tabs .mgp_timeline .mgp_scroller{white-space:nowrap}.mgp_debugPanel .mgp_panel-tabs .mgp_timeline .mgp_group{padding:5px 0 0 5px;margin:-2px 8px 0 3px;border:2px solid #999;border-radius:5px;display:inline-block}.mgp_debugPanel .mgp_panel-tabs .mgp_timeline .mgp_group.mgp_hidden{display:none}.mgp_debugPanel .mgp_panel-tabs .mgp_timeline .mgp_block{display:inline-block;margin:0 5px 0 0;width:65px;height:65px;overflow:hidden;box-sizing:border-box;position:relative;padding:3px 5px;font-size:10px;line-height:14px;border:1px solid #000;background:#bbb;color:#000;border-radius:5px;text-shadow:1px 1px 1px #fff;box-shadow:0 0 5px #000}.mgp_debugPanel .mgp_panel-tabs .mgp_timeline .mgp_block .mgp_time{position:absolute;display:none;bottom:5px;right:5px;text-align:right}.mgp_debugPanel .mgp_panel-tabs .mgp_timeline .mgp_block.mgp_hidden{display:none}.mgp_debugPanel,.mgp_debugPanelHeader{font-size:12px;z-index:9999}.mgp_debugPanel .mgp_panel-tab,.mgp_debugPanelHeader{background:#1a1a1a;color:#fff}.mgp_debugPanel{bottom:-230px;height:230px;position:fixed;overflow:hidden;text-align:left;transition:bottom .3s ease-in-out;width:100%;z-index:10000}.mgp_debugPanel .mgp_drag-bar{position:absolute;top:0;left:0;width:100%;height:8px;cursor:row-resize}.mgp_debugPanel .mgp_panel-tools{position:absolute;right:0;top:0;padding-right:5px;background:#333;text-shadow:1px 1px 0px #000}.mgp_debugPanel .mgp_panel-tools .mgp_close-btn,.mgp_debugPanel .mgp_panel-tools .mgp_clear-btn,.mgp_debugPanel .mgp_panel-tools .mgp_pause-btn,.mgp_debugPanel .mgp_panel-tools .mgp_time-btn{float:right;position:relative;width:30px;height:30px;text-align:center;margin:0;cursor:pointer;color:#999;font:15px/32px sans-serif;user-select:none}.mgp_debugPanel .mgp_panel-tools .mgp_close-btn:hover,.mgp_debugPanel .mgp_panel-tools .mgp_clear-btn:hover,.mgp_debugPanel .mgp_panel-tools .mgp_pause-btn:hover,.mgp_debugPanel .mgp_panel-tools .mgp_time-btn:hover{color:#fff}.mgp_debugPanel .mgp_panel-tools .mgp_close-btn:active,.mgp_debugPanel .mgp_panel-tools .mgp_clear-btn:active,.mgp_debugPanel .mgp_panel-tools .mgp_pause-btn:active,.mgp_debugPanel .mgp_panel-tools .mgp_time-btn:active{background:#202124}.mgp_debugPanel .mgp_panel-tools .mgp_close-btn{font-size:18px}.mgp_debugPanel .mgp_panel-tools .mgp_pause-btn{font-size:18px}.mgp_debugPanel .mgp_panel-tools .mgp_time-btn{font-size:17px}.mgp_debugPanel .mgp_panel-tools .mgp_time-btn::after{font-size:12px;position:absolute;top:-4px;left:12.5px;content:"⸆";text-shadow:none}.mgp_debugPanel .mgp_panel-tools .mgp_time-btn::before{font-size:9px;position:absolute;top:.5px;left:14px;transform:rotate(45deg);content:"⨽"}.mgp_debugPanel .mgp_panel-tools .mgp_pause-btn.mgp_active{color:#fff}.mgp_debugPanel .mgp_panel-tab-pills{background:#333;height:30px;overflow-x:auto;overflow-y:hidden;text-shadow:1px 1px 0px #000;white-space:nowrap}.mgp_debugPanel .mgp_panel-tab-pills .mgp_tab-pill{color:#999;cursor:pointer;display:inline-block;font-size:10px;line-height:1;padding:10px 12px;text-transform:uppercase;user-select:none}.mgp_debugPanel .mgp_panel-tab-pills .mgp_tab-pill:hover,.mgp_debugPanel .mgp_panel-tab-pills .mgp_tab-pill.mgp_active{color:#fff}.mgp_debugPanel .mgp_panel-tab-pills .mgp_tab-pill.mgp_active{background:#202124}.mgp_debugPanel .mgp_panel-tabs{height:calc(100% - 30px)}.mgp_debugPanel .mgp_panel-tabs .mgp_panel-tab{overflow-y:auto;line-height:18px;display:none}.mgp_debugPanel .mgp_panel-tabs .mgp_tabInfo .mgp_info{border-bottom:1px solid #333;color:#999;font:12px/1.5 Consolas,monospace;padding:3px 5px}.mgp_debugPanel .mgp_panel-tabs .mgp_tabInfo .mgp_info strong{color:#fff}.mgp_debugPanel .mgp_panel-tab{position:relative}.mgp_debugPanel .mgp_panel-tab.mgp_active{display:block;height:100%}.mgp_debugPanel.mgp_open{box-shadow:0px 0px 10px #000;bottom:0 !important}.mgp_debugPanel.mgp_open .mgp_debugPanelHeader{box-shadow:none}.mgp_debugPanel.mgp_timeStamps .mgp_time-btn{color:#fff !important}.mgp_debugPanel.mgp_timeStamps .mgp_consoleMessages .mgp_time{display:block !important}.mgp_debugPanel.mgp_timeStamps .mgp_timeline .mgp_time{display:block !important}.mgp_debugPanel .mgp_consoleMessagesWrapper .mgp_consoleMessages,.mgp_debugPanel .mgp_consoleTerminalWrapper textarea,.mgp_debugPanel .mgp_timeline,.mgp_debugPanel .mgp_list,.mgp_debugPanel .mgp_tabPlayerInfo{scrollbar-color:#666 #202124;scrollbar-width:thin}.mgp_debugPanel .mgp_consoleMessagesWrapper .mgp_consoleMessages::-webkit-scrollbar,.mgp_debugPanel .mgp_consoleTerminalWrapper textarea::-webkit-scrollbar,.mgp_debugPanel .mgp_timeline::-webkit-scrollbar,.mgp_debugPanel .mgp_list::-webkit-scrollbar,.mgp_debugPanel .mgp_tabPlayerInfo::-webkit-scrollbar{width:12px;height:12px}.mgp_debugPanel .mgp_consoleMessagesWrapper .mgp_consoleMessages::-webkit-scrollbar-thumb,.mgp_debugPanel .mgp_consoleTerminalWrapper textarea::-webkit-scrollbar-thumb,.mgp_debugPanel .mgp_timeline::-webkit-scrollbar-thumb,.mgp_debugPanel .mgp_list::-webkit-scrollbar-thumb,.mgp_debugPanel .mgp_tabPlayerInfo::-webkit-scrollbar-thumb{background-color:#666;border-radius:20px;border:3px solid #202124}.mgp_debugPanelHeader{border:1px solid #333;bottom:45px;box-shadow:0px 0px 10px #000;box-sizing:content-box;display:inline-block;height:35px;position:fixed;right:0;width:210px}.mgp_debugPanelHeader>*{display:block;float:left}.mgp_debugPanelHeader .mgp_panelTitle{cursor:grab;text-align:center;line-height:35px;width:140px;text-shadow:1px 1px 0px #000}.mgp_debugPanelHeader .mgp_panelTitle .mgp_panelName{text-transform:capitalize}.mgp_debugPanelHeader .mgp_panelToggle,.mgp_debugPanelHeader .mgp_panelClose{background:#333;cursor:pointer;height:35px;position:relative;width:35px}.mgp_debugPanelHeader .mgp_panelToggle .mgp_icon,.mgp_debugPanelHeader .mgp_panelClose .mgp_icon{transition:opacity .25s ease-in-out;opacity:.6}.mgp_debugPanelHeader .mgp_panelToggle .mgp_icon::before,.mgp_debugPanelHeader .mgp_panelToggle .mgp_icon::after,.mgp_debugPanelHeader .mgp_panelClose .mgp_icon::before,.mgp_debugPanelHeader .mgp_panelClose .mgp_icon::after{background:#fff;content:"";display:block;height:18px;left:calc(50%);position:absolute;top:calc(50% - 9px);width:1px}.mgp_debugPanelHeader .mgp_panelToggle:hover .mgp_icon,.mgp_debugPanelHeader .mgp_panelClose:hover .mgp_icon{opacity:1;width:2px}.mgp_debugPanelHeader .mgp_panelClose .mgp_icon::before,.mgp_debugPanelHeader .mgp_panelClose .mgp_icon::after{height:20px;top:calc(50% - 10px)}.mgp_debugPanelHeader .mgp_panelClose .mgp_icon::before{transform:rotate(45deg)}.mgp_debugPanelHeader .mgp_panelClose .mgp_icon::after{transform:rotate(-45deg)}.mgp_debugPanelHeader .mgp_panelToggle .mgp_icon::before,.mgp_debugPanelHeader .mgp_panelToggle .mgp_icon::after{transition:transform .25s ease-in-out}.mgp_debugPanelHeader .mgp_panelToggle .mgp_icon::after{transform:rotate(-90deg)}.mgp_debugPanelHeader.mgp_open .mgp_panelToggle .mgp_icon::before{transform:rotate(-90deg)}body.mgp_debug-panel--open{padding-bottom:230px !important}', ""]);
            const a = i
        }, 163: e => {
            e.exports = '<template class="svg_hotspots"><div class="hotspots"> <svg viewBox="0 0 1000 100" preserveAspectRatio="none"> <defs> <clipPath id="hotspotsClip" clipPathUnits="userSpaceOnUse"> <polygon/> </clipPath> </defs> <g clip-path="url(#hotspotsClip)"> <rect class="hotspotsBg" x="0" y="0" width="100%" height="100%" fill="rgba(33,29,27,0.58)"/> <rect class="hotspotsFill" x="0" y="0" width="100%" height="100%" fill="#6d6d6d"/> </g> </svg> </div> </template> '
        }, 637: e => {
            "use strict";
            e.exports = function (e) {
                var t = [];
                return t.toString = function () {
                    return this.map((function (t) {
                        var n = function (e, t) {
                            var n = e[1] || "", r = e[3];
                            if (!r) return n;
                            if (t && "function" == typeof btoa) {
                                var i = (o = r, s = btoa(unescape(encodeURIComponent(JSON.stringify(o)))), l = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s), "/*# ".concat(l, " */")),
                                    a = r.sources.map((function (e) {
                                        return "/*# sourceURL=".concat(r.sourceRoot || "").concat(e, " */")
                                    }));
                                return [n].concat(a).concat([i]).join("\n")
                            }
                            var o, s, l;
                            return [n].join("\n")
                        }(t, e);
                        return t[2] ? "@media ".concat(t[2], " {").concat(n, "}") : n
                    })).join("")
                }, t.i = function (e, n, r) {
                    "string" == typeof e && (e = [[null, e, ""]]);
                    var i = {};
                    if (r) for (var a = 0; a < this.length; a++) {
                        var o = this[a][0];
                        null != o && (i[o] = !0)
                    }
                    for (var s = 0; s < e.length; s++) {
                        var l = [].concat(e[s]);
                        r && i[l[0]] || (n && (l[2] ? l[2] = "".concat(n, " and ").concat(l[2]) : l[2] = n), t.push(l))
                    }
                }, t
            }
        }, 521: e => {
            "use strict";
            e.exports = function (e, t) {
                return t || (t = {}), "string" != typeof (e = e && e.__esModule ? e.default : e) ? e : (/^['"].*['"]$/.test(e) && (e = e.slice(1, -1)), t.hash && (e += t.hash), /["'() \t\n]/.test(e) || t.needQuotes ? '"'.concat(e.replace(/"/g, '\\"').replace(/\n/g, "\\n"), '"') : e)
            }
        }, 319: function (e) {
            var t;
            "undefined" != typeof window && (t = () => (() => {
                var e = {
                    21: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {default: () => d});
                        var r = function () {
                            function e(e, t) {
                                this.subtle = void 0, this.aesIV = void 0, this.subtle = e, this.aesIV = t
                            }

                            return e.prototype.decrypt = function (e, t) {
                                return this.subtle.decrypt({name: "AES-CBC", iv: this.aesIV}, t, e)
                            }, e
                        }(), i = function () {
                            function e(e, t) {
                                this.subtle = void 0, this.key = void 0, this.subtle = e, this.key = t
                            }

                            return e.prototype.expandKey = function () {
                                return this.subtle.importKey("raw", this.key, {name: "AES-CBC"}, !1, ["encrypt", "decrypt"])
                            }, e
                        }(), a = n(145), o = function () {
                            function e() {
                                this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.sBox = new Uint32Array(256), this.invSBox = new Uint32Array(256), this.key = new Uint32Array(0), this.ksRows = 0, this.keySize = 0, this.keySchedule = void 0, this.invKeySchedule = void 0, this.initTable()
                            }

                            var t = e.prototype;
                            return t.uint8ArrayToUint32Array_ = function (e) {
                                for (var t = new DataView(e), n = new Uint32Array(4), r = 0; r < 4; r++) n[r] = t.getUint32(4 * r);
                                return n
                            }, t.initTable = function () {
                                var e = this.sBox, t = this.invSBox, n = this.subMix, r = n[0], i = n[1], a = n[2],
                                    o = n[3], s = this.invSubMix, l = s[0], d = s[1], c = s[2], p = s[3],
                                    u = new Uint32Array(256), g = 0, m = 0, f = 0;
                                for (f = 0; f < 256; f++) u[f] = f < 128 ? f << 1 : f << 1 ^ 283;
                                for (f = 0; f < 256; f++) {
                                    var h = m ^ m << 1 ^ m << 2 ^ m << 3 ^ m << 4;
                                    h = h >>> 8 ^ 255 & h ^ 99, e[g] = h, t[h] = g;
                                    var _ = u[g], v = u[_], b = u[v], y = 257 * u[h] ^ 16843008 * h;
                                    r[g] = y << 24 | y >>> 8, i[g] = y << 16 | y >>> 16, a[g] = y << 8 | y >>> 24, o[g] = y, y = 16843009 * b ^ 65537 * v ^ 257 * _ ^ 16843008 * g, l[h] = y << 24 | y >>> 8, d[h] = y << 16 | y >>> 16, c[h] = y << 8 | y >>> 24, p[h] = y, g ? (g = _ ^ u[u[u[b ^ _]]], m ^= u[u[m]]) : g = m = 1
                                }
                            }, t.expandKey = function (e) {
                                for (var t = this.uint8ArrayToUint32Array_(e), n = !0, r = 0; r < t.length && n;) n = t[r] === this.key[r], r++;
                                if (!n) {
                                    this.key = t;
                                    var i = this.keySize = t.length;
                                    if (4 !== i && 6 !== i && 8 !== i) throw new Error("Invalid aes key size=" + i);
                                    var a, o, s, l, d = this.ksRows = 4 * (i + 6 + 1),
                                        c = this.keySchedule = new Uint32Array(d),
                                        p = this.invKeySchedule = new Uint32Array(d), u = this.sBox, g = this.rcon,
                                        m = this.invSubMix, f = m[0], h = m[1], _ = m[2], v = m[3];
                                    for (a = 0; a < d; a++) a < i ? s = c[a] = t[a] : (l = s, a % i == 0 ? (l = u[(l = l << 8 | l >>> 24) >>> 24] << 24 | u[l >>> 16 & 255] << 16 | u[l >>> 8 & 255] << 8 | u[255 & l], l ^= g[a / i | 0] << 24) : i > 6 && a % i == 4 && (l = u[l >>> 24] << 24 | u[l >>> 16 & 255] << 16 | u[l >>> 8 & 255] << 8 | u[255 & l]), c[a] = s = (c[a - i] ^ l) >>> 0);
                                    for (o = 0; o < d; o++) a = d - o, l = 3 & o ? c[a] : c[a - 4], p[o] = o < 4 || a <= 4 ? l : f[u[l >>> 24]] ^ h[u[l >>> 16 & 255]] ^ _[u[l >>> 8 & 255]] ^ v[u[255 & l]], p[o] = p[o] >>> 0
                                }
                            }, t.networkToHostOrderSwap = function (e) {
                                return e << 24 | (65280 & e) << 8 | (16711680 & e) >> 8 | e >>> 24
                            }, t.decrypt = function (e, t, n) {
                                for (var r, i, a, o, s, l, d, c, p, u, g, m, f, h, _ = this.keySize + 6, v = this.invKeySchedule, b = this.invSBox, y = this.invSubMix, A = y[0], E = y[1], T = y[2], w = y[3], S = this.uint8ArrayToUint32Array_(n), x = S[0], k = S[1], C = S[2], L = S[3], R = new Int32Array(e), P = new Int32Array(R.length), I = this.networkToHostOrderSwap; t < R.length;) {
                                    for (p = I(R[t]), u = I(R[t + 1]), g = I(R[t + 2]), m = I(R[t + 3]), s = p ^ v[0], l = m ^ v[1], d = g ^ v[2], c = u ^ v[3], f = 4, h = 1; h < _; h++) r = A[s >>> 24] ^ E[l >> 16 & 255] ^ T[d >> 8 & 255] ^ w[255 & c] ^ v[f], i = A[l >>> 24] ^ E[d >> 16 & 255] ^ T[c >> 8 & 255] ^ w[255 & s] ^ v[f + 1], a = A[d >>> 24] ^ E[c >> 16 & 255] ^ T[s >> 8 & 255] ^ w[255 & l] ^ v[f + 2], o = A[c >>> 24] ^ E[s >> 16 & 255] ^ T[l >> 8 & 255] ^ w[255 & d] ^ v[f + 3], s = r, l = i, d = a, c = o, f += 4;
                                    r = b[s >>> 24] << 24 ^ b[l >> 16 & 255] << 16 ^ b[d >> 8 & 255] << 8 ^ b[255 & c] ^ v[f], i = b[l >>> 24] << 24 ^ b[d >> 16 & 255] << 16 ^ b[c >> 8 & 255] << 8 ^ b[255 & s] ^ v[f + 1], a = b[d >>> 24] << 24 ^ b[c >> 16 & 255] << 16 ^ b[s >> 8 & 255] << 8 ^ b[255 & l] ^ v[f + 2], o = b[c >>> 24] << 24 ^ b[s >> 16 & 255] << 16 ^ b[l >> 8 & 255] << 8 ^ b[255 & d] ^ v[f + 3], P[t] = I(r ^ x), P[t + 1] = I(o ^ k), P[t + 2] = I(a ^ C), P[t + 3] = I(i ^ L), x = p, k = u, C = g, L = m, t += 4
                                }
                                return P.buffer
                            }, e
                        }(), s = n(93), l = n(571), d = function () {
                            function e(e, t) {
                                var n = (void 0 === t ? {} : t).removePKCS7Padding, r = void 0 === n || n;
                                if (this.logEnabled = !0, this.removePKCS7Padding = void 0, this.subtle = null, this.softwareDecrypter = null, this.key = null, this.fastAesKey = null, this.remainderData = null, this.currentIV = null, this.currentResult = null, this.useSoftware = void 0, this.useSoftware = e.enableSoftwareAES, this.removePKCS7Padding = r, r) try {
                                    var i = self.crypto;
                                    i && (this.subtle = i.subtle || i.webkitSubtle)
                                } catch (e) {
                                }
                                null === this.subtle && (this.useSoftware = !0)
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                this.subtle = null, this.softwareDecrypter = null, this.key = null, this.fastAesKey = null, this.remainderData = null, this.currentIV = null, this.currentResult = null
                            }, t.isSync = function () {
                                return this.useSoftware
                            }, t.flush = function () {
                                var e = this.currentResult, t = this.remainderData;
                                if (!e || t) return this.reset(), null;
                                var n, r, i, o = new Uint8Array(e);
                                return this.reset(), this.removePKCS7Padding ? (i = (r = (n = o).byteLength) && new DataView(n.buffer).getUint8(r - 1)) ? (0, a.sliceUint8)(n, 0, r - i) : n : o
                            }, t.reset = function () {
                                this.currentResult = null, this.currentIV = null, this.remainderData = null, this.softwareDecrypter && (this.softwareDecrypter = null)
                            }, t.decrypt = function (e, t, n) {
                                var r = this;
                                return this.useSoftware ? new Promise((function (i, a) {
                                    r.softwareDecrypt(new Uint8Array(e), t, n);
                                    var o = r.flush();
                                    o ? i(o.buffer) : a(new Error("[softwareDecrypt] Failed to decrypt data"))
                                })) : this.webCryptoDecrypt(new Uint8Array(e), t, n)
                            }, t.softwareDecrypt = function (e, t, n) {
                                var r = this.currentIV, i = this.currentResult, s = this.remainderData;
                                this.logOnce("JS AES decrypt"), s && (e = (0, l.appendUint8Array)(s, e), this.remainderData = null);
                                var d = this.getValidChunk(e);
                                if (!d.length) return null;
                                r && (n = r);
                                var c = this.softwareDecrypter;
                                c || (c = this.softwareDecrypter = new o), c.expandKey(t);
                                var p = i;
                                return this.currentResult = c.decrypt(d.buffer, 0, n), this.currentIV = (0, a.sliceUint8)(d, -16).buffer, p || null
                            }, t.webCryptoDecrypt = function (e, t, n) {
                                var a = this, o = this.subtle;
                                return this.key === t && this.fastAesKey || (this.key = t, this.fastAesKey = new i(o, t)), this.fastAesKey.expandKey().then((function (t) {
                                    return o ? (a.logOnce("WebCrypto AES decrypt"), new r(o, new Uint8Array(n)).decrypt(e.buffer, t)) : Promise.reject(new Error("web crypto not initialized"))
                                })).catch((function (r) {
                                    return s.logger.warn("[decrypter]: WebCrypto Error, disable WebCrypto API, " + r.name + ": " + r.message), a.onWebCryptoError(e, t, n)
                                }))
                            }, t.onWebCryptoError = function (e, t, n) {
                                this.useSoftware = !0, this.logEnabled = !0, this.softwareDecrypt(e, t, n);
                                var r = this.flush();
                                if (r) return r.buffer;
                                throw new Error("WebCrypto and softwareDecrypt: failed to decrypt data")
                            }, t.getValidChunk = function (e) {
                                var t = e, n = e.length - e.length % 16;
                                return n !== e.length && (t = (0, a.sliceUint8)(e, 0, n), this.remainderData = (0, a.sliceUint8)(e, n)), t
                            }, t.logOnce = function (e) {
                                this.logEnabled && (s.logger.log("[decrypter]: " + e), this.logEnabled = !1)
                            }, e
                        }()
                    }, 181: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {
                            canParse: () => l,
                            decodeFrame: () => g,
                            getID3Data: () => o,
                            getID3Frames: () => u,
                            getTimeStamp: () => d,
                            isFooter: () => a,
                            isHeader: () => i,
                            isTimeStampFrame: () => c,
                            testables: () => b,
                            utf8ArrayToStr: () => v
                        });
                        var r, i = function (e, t) {
                            return t + 10 <= e.length && 73 === e[t] && 68 === e[t + 1] && 51 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                        }, a = function (e, t) {
                            return t + 10 <= e.length && 51 === e[t] && 68 === e[t + 1] && 73 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                        }, o = function (e, t) {
                            for (var n = t, r = 0; i(e, t);) r += 10, r += s(e, t + 6), a(e, t + 10) && (r += 10), t += r;
                            if (r > 0) return e.subarray(n, n + r)
                        }, s = function (e, t) {
                            var n = 0;
                            return n = (127 & e[t]) << 21, n |= (127 & e[t + 1]) << 14, (n |= (127 & e[t + 2]) << 7) | 127 & e[t + 3]
                        }, l = function (e, t) {
                            return i(e, t) && s(e, t + 6) + 10 <= e.length - t
                        }, d = function (e) {
                            for (var t = u(e), n = 0; n < t.length; n++) {
                                var r = t[n];
                                if (c(r)) return _(r)
                            }
                        }, c = function (e) {
                            return e && "PRIV" === e.key && "com.apple.streaming.transportStreamTimestamp" === e.info
                        }, p = function (e) {
                            var t = String.fromCharCode(e[0], e[1], e[2], e[3]), n = s(e, 4);
                            return {type: t, size: n, data: e.subarray(10, 10 + n)}
                        }, u = function (e) {
                            for (var t = 0, n = []; i(e, t);) {
                                for (var r = s(e, t + 6), o = (t += 10) + r; t + 8 < o;) {
                                    var l = p(e.subarray(t)), d = g(l);
                                    d && n.push(d), t += l.size + 10
                                }
                                a(e, t) && (t += 10)
                            }
                            return n
                        }, g = function (e) {
                            return "PRIV" === e.type ? m(e) : "W" === e.type[0] ? h(e) : f(e)
                        }, m = function (e) {
                            if (!(e.size < 2)) {
                                var t = v(e.data, !0), n = new Uint8Array(e.data.subarray(t.length + 1));
                                return {key: e.type, info: t, data: n.buffer}
                            }
                        }, f = function (e) {
                            if (!(e.size < 2)) {
                                if ("TXXX" === e.type) {
                                    var t = 1, n = v(e.data.subarray(t), !0);
                                    t += n.length + 1;
                                    var r = v(e.data.subarray(t));
                                    return {key: e.type, info: n, data: r}
                                }
                                var i = v(e.data.subarray(1));
                                return {key: e.type, data: i}
                            }
                        }, h = function (e) {
                            if ("WXXX" === e.type) {
                                if (e.size < 2) return;
                                var t = 1, n = v(e.data.subarray(t), !0);
                                t += n.length + 1;
                                var r = v(e.data.subarray(t));
                                return {key: e.type, info: n, data: r}
                            }
                            var i = v(e.data);
                            return {key: e.type, data: i}
                        }, _ = function (e) {
                            if (8 === e.data.byteLength) {
                                var t = new Uint8Array(e.data), n = 1 & t[3],
                                    r = (t[4] << 23) + (t[5] << 15) + (t[6] << 7) + t[7];
                                return r /= 45, n && (r += 47721858.84), Math.round(r)
                            }
                        }, v = function (e, t) {
                            void 0 === t && (t = !1);
                            var n = y();
                            if (n) {
                                var r = n.decode(e);
                                if (t) {
                                    var i = r.indexOf("\0");
                                    return -1 !== i ? r.substring(0, i) : r
                                }
                                return r.replace(/\0/g, "")
                            }
                            for (var a, o, s, l = e.length, d = "", c = 0; c < l;) {
                                if (0 === (a = e[c++]) && t) return d;
                                if (0 !== a && 3 !== a) switch (a >> 4) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        d += String.fromCharCode(a);
                                        break;
                                    case 12:
                                    case 13:
                                        o = e[c++], d += String.fromCharCode((31 & a) << 6 | 63 & o);
                                        break;
                                    case 14:
                                        o = e[c++], s = e[c++], d += String.fromCharCode((15 & a) << 12 | (63 & o) << 6 | (63 & s) << 0)
                                }
                            }
                            return d
                        }, b = {decodeTextFrame: f};

                        function y() {
                            return r || void 0 === self.TextDecoder || (r = new self.TextDecoder("utf-8")), r
                        }
                    }, 182: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {default: () => l});
                        var r = n(764), i = n(851), a = n(93), o = n(729), s = n(973);

                        function l(e) {
                            var t = new o.EventEmitter, n = function (t, n) {
                                e.postMessage({event: t, data: n})
                            };
                            t.on(i.Events.FRAG_DECRYPTED, n), t.on(i.Events.ERROR, n), e.addEventListener("message", (function (o) {
                                var l = o.data;
                                switch (l.cmd) {
                                    case"init":
                                        var c = JSON.parse(l.config);
                                        e.transmuxer = new r.default(t, l.typeSupported, c, l.vendor, l.id), (0, a.enableLogs)(c.debug, l.id), function () {
                                            var e = function (e) {
                                                a.logger[e] = function (t) {
                                                    n("workerLog", {logType: e, message: t})
                                                }
                                            };
                                            for (var t in a.logger) e(t)
                                        }(), n("init", null);
                                        break;
                                    case"configure":
                                        e.transmuxer.configure(l.config);
                                        break;
                                    case"demux":
                                        var u = e.transmuxer.push(l.data, l.decryptdata, l.chunkMeta, l.state);
                                        (0, r.isPromise)(u) ? (e.transmuxer.async = !0, u.then((function (t) {
                                            d(e, t)
                                        })).catch((function (e) {
                                            n(i.Events.ERROR, {
                                                type: s.ErrorTypes.MEDIA_ERROR,
                                                details: s.ErrorDetails.FRAG_PARSING_ERROR,
                                                chunkMeta: l.chunkMeta,
                                                fatal: !1,
                                                error: e,
                                                err: e,
                                                reason: "transmuxer-worker push error"
                                            })
                                        }))) : (e.transmuxer.async = !1, d(e, u));
                                        break;
                                    case"flush":
                                        var g = l.chunkMeta, m = e.transmuxer.flush(g);
                                        (0, r.isPromise)(m) || e.transmuxer.async ? ((0, r.isPromise)(m) || (m = Promise.resolve(m)), m.then((function (t) {
                                            p(e, t, g)
                                        })).catch((function (e) {
                                            n(i.Events.ERROR, {
                                                type: s.ErrorTypes.MEDIA_ERROR,
                                                details: s.ErrorDetails.FRAG_PARSING_ERROR,
                                                chunkMeta: l.chunkMeta,
                                                fatal: !1,
                                                error: e,
                                                err: e,
                                                reason: "transmuxer-worker flush error"
                                            })
                                        }))) : p(e, m, g)
                                }
                            }))
                        }

                        function d(e, t) {
                            if (!((n = t.remuxResult).audio || n.video || n.text || n.id3 || n.initSegment)) return !1;
                            var n, r = [], i = t.remuxResult, a = i.audio, o = i.video;
                            return a && c(r, a), o && c(r, o), e.postMessage({
                                event: "transmuxComplete",
                                data: t
                            }, r), !0
                        }

                        function c(e, t) {
                            t.data1 && e.push(t.data1.buffer), t.data2 && e.push(t.data2.buffer)
                        }

                        function p(e, t, n) {
                            t.reduce((function (t, n) {
                                return d(e, n) || t
                            }), !1) || e.postMessage({
                                event: "transmuxComplete",
                                data: t[0]
                            }), e.postMessage({event: "flush", data: n})
                        }
                    }, 764: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {
                            TransmuxConfig: () => ye,
                            TransmuxState: () => Ae,
                            default: () => _e,
                            isPromise: () => be
                        });
                        var r = n(851), i = n(973), a = n(21), o = n(965), s = n(181), l = n(856);

                        function d(e, t) {
                            return void 0 === e && (e = ""), void 0 === t && (t = 9e4), {
                                type: e,
                                id: -1,
                                pid: -1,
                                inputTimeScale: t,
                                sequenceNumber: -1,
                                samples: [],
                                dropped: 0
                            }
                        }

                        var c = n(571), p = n(145), u = function () {
                            function e() {
                                this._audioTrack = void 0, this._id3Track = void 0, this.frameIndex = 0, this.cachedData = null, this.basePTS = null, this.initPTS = null, this.lastPTS = null
                            }

                            var t = e.prototype;
                            return t.resetInitSegment = function (e, t, n, r) {
                                this._id3Track = {
                                    type: "id3",
                                    id: 3,
                                    pid: -1,
                                    inputTimeScale: 9e4,
                                    sequenceNumber: 0,
                                    samples: [],
                                    dropped: 0
                                }
                            }, t.resetTimeStamp = function (e) {
                                this.initPTS = e, this.resetContiguity()
                            }, t.resetContiguity = function () {
                                this.basePTS = null, this.lastPTS = null, this.frameIndex = 0
                            }, t.canParse = function (e, t) {
                                return !1
                            }, t.appendFrame = function (e, t, n) {
                            }, t.demux = function (e, t) {
                                this.cachedData && (e = (0, c.appendUint8Array)(this.cachedData, e), this.cachedData = null);
                                var n, r = s.getID3Data(e, 0), i = r ? r.length : 0, a = this._audioTrack,
                                    u = this._id3Track, m = r ? s.getTimeStamp(r) : void 0, f = e.length;
                                for ((null === this.basePTS || 0 === this.frameIndex && (0, o.isFiniteNumber)(m)) && (this.basePTS = g(m, t, this.initPTS), this.lastPTS = this.basePTS), null === this.lastPTS && (this.lastPTS = this.basePTS), r && r.length > 0 && u.samples.push({
                                    pts: this.lastPTS,
                                    dts: this.lastPTS,
                                    data: r,
                                    type: l.MetadataSchema.audioId3,
                                    duration: Number.POSITIVE_INFINITY
                                }); i < f;) {
                                    if (this.canParse(e, i)) {
                                        var h = this.appendFrame(a, e, i);
                                        h ? (this.frameIndex++, this.lastPTS = h.sample.pts, n = i += h.length) : i = f
                                    } else s.canParse(e, i) ? (r = s.getID3Data(e, i), u.samples.push({
                                        pts: this.lastPTS,
                                        dts: this.lastPTS,
                                        data: r,
                                        type: l.MetadataSchema.audioId3,
                                        duration: Number.POSITIVE_INFINITY
                                    }), n = i += r.length) : i++;
                                    if (i === f && n !== f) {
                                        var _ = (0, p.sliceUint8)(e, n);
                                        this.cachedData ? this.cachedData = (0, c.appendUint8Array)(this.cachedData, _) : this.cachedData = _
                                    }
                                }
                                return {audioTrack: a, videoTrack: d(), id3Track: u, textTrack: d()}
                            }, t.demuxSampleAes = function (e, t, n) {
                                return Promise.reject(new Error("[" + this + "] This demuxer does not support Sample-AES decryption"))
                            }, t.flush = function (e) {
                                var t = this.cachedData;
                                return t && (this.cachedData = null, this.demux(t, 0)), {
                                    audioTrack: this._audioTrack,
                                    videoTrack: d(),
                                    id3Track: this._id3Track,
                                    textTrack: d()
                                }
                            }, t.destroy = function () {
                            }, e
                        }(), g = function (e, t, n) {
                            return (0, o.isFiniteNumber)(e) ? 90 * e : 9e4 * t + (n || 0)
                        };
                        const m = u;
                        var f = n(93);

                        function h(e, t) {
                            return 255 === e[t] && 240 == (246 & e[t + 1])
                        }

                        function _(e, t) {
                            return 1 & e[t + 1] ? 7 : 9
                        }

                        function v(e, t) {
                            return (3 & e[t + 3]) << 11 | e[t + 4] << 3 | (224 & e[t + 5]) >>> 5
                        }

                        function b(e, t) {
                            return t + 1 < e.length && h(e, t)
                        }

                        function y(e, t) {
                            if (b(e, t)) {
                                var n = _(e, t);
                                if (t + n >= e.length) return !1;
                                var r = v(e, t);
                                if (r <= n) return !1;
                                var i = t + r;
                                return i === e.length || b(e, i)
                            }
                            return !1
                        }

                        function A(e, t, n, a, o) {
                            if (!e.samplerate) {
                                var s = function (e, t, n, a) {
                                    var o, s, l, d, c = navigator.userAgent.toLowerCase(), p = a,
                                        u = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                                    o = 1 + ((192 & t[n + 2]) >>> 6);
                                    var g = (60 & t[n + 2]) >>> 2;
                                    if (!(g > u.length - 1)) return l = (1 & t[n + 2]) << 2, l |= (192 & t[n + 3]) >>> 6, f.logger.log("manifest codec:" + a + ", ADTS type:" + o + ", samplingIndex:" + g), /firefox/i.test(c) ? g >= 6 ? (o = 5, d = new Array(4), s = g - 3) : (o = 2, d = new Array(2), s = g) : -1 !== c.indexOf("android") ? (o = 2, d = new Array(2), s = g) : (o = 5, d = new Array(4), a && (-1 !== a.indexOf("mp4a.40.29") || -1 !== a.indexOf("mp4a.40.5")) || !a && g >= 6 ? s = g - 3 : ((a && -1 !== a.indexOf("mp4a.40.2") && (g >= 6 && 1 === l || /vivaldi/i.test(c)) || !a && 1 === l) && (o = 2, d = new Array(2)), s = g)), d[0] = o << 3, d[0] |= (14 & g) >> 1, d[1] |= (1 & g) << 7, d[1] |= l << 3, 5 === o && (d[1] |= (14 & s) >> 1, d[2] = (1 & s) << 7, d[2] |= 8, d[3] = 0), {
                                        config: d,
                                        samplerate: u[g],
                                        channelCount: l,
                                        codec: "mp4a.40." + o,
                                        manifestCodec: p
                                    };
                                    e.trigger(r.Events.ERROR, {
                                        type: i.ErrorTypes.MEDIA_ERROR,
                                        details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                        fatal: !0,
                                        reason: "invalid ADTS sampling index:" + g
                                    })
                                }(t, n, a, o);
                                if (!s) return;
                                e.config = s.config, e.samplerate = s.samplerate, e.channelCount = s.channelCount, e.codec = s.codec, e.manifestCodec = s.manifestCodec, f.logger.log("parsed codec:" + e.codec + ", rate:" + s.samplerate + ", channels:" + s.channelCount)
                            }
                        }

                        function E(e) {
                            return 9216e4 / e
                        }

                        function T(e, t, n, r, i) {
                            var a, o = r + i * E(e.samplerate), s = function (e, t) {
                                var n = _(e, t);
                                if (t + n <= e.length) {
                                    var r = v(e, t) - n;
                                    if (r > 0) return {headerLength: n, frameLength: r}
                                }
                            }(t, n);
                            if (s) {
                                var l = s.frameLength, d = s.headerLength, c = d + l, p = Math.max(0, n + c - t.length);
                                p ? (a = new Uint8Array(c - d)).set(t.subarray(n + d, t.length), 0) : a = t.subarray(n + d, n + c);
                                var u = {unit: a, pts: o};
                                return p || e.samples.push(u), {sample: u, length: c, missing: p}
                            }
                            var g = t.length - n;
                            return (a = new Uint8Array(g)).set(t.subarray(n, t.length), 0), {
                                sample: {unit: a, pts: o},
                                length: g,
                                missing: -1
                            }
                        }

                        function w(e, t) {
                            return (w = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
                                return e.__proto__ = t, e
                            })(e, t)
                        }

                        const S = function (e) {
                            var t, n;

                            function r(t, n) {
                                var r;
                                return (r = e.call(this) || this).observer = void 0, r.config = void 0, r.observer = t, r.config = n, r
                            }

                            n = e, (t = r).prototype = Object.create(n.prototype), t.prototype.constructor = t, w(t, n);
                            var i = r.prototype;
                            return i.resetInitSegment = function (t, n, r, i) {
                                e.prototype.resetInitSegment.call(this, t, n, r, i), this._audioTrack = {
                                    container: "audio/adts",
                                    type: "audio",
                                    id: 2,
                                    pid: -1,
                                    sequenceNumber: 0,
                                    segmentCodec: "aac",
                                    samples: [],
                                    manifestCodec: n,
                                    duration: i,
                                    inputTimeScale: 9e4,
                                    dropped: 0
                                }
                            }, r.probe = function (e) {
                                if (!e) return !1;
                                for (var t = (s.getID3Data(e, 0) || []).length, n = e.length; t < n; t++) if (y(e, t)) return f.logger.log("ADTS sync word found !"), !0;
                                return !1
                            }, i.canParse = function (e, t) {
                                return function (e, t) {
                                    return function (e, t) {
                                        return t + 5 < e.length
                                    }(e, t) && h(e, t) && v(e, t) <= e.length - t
                                }(e, t)
                            }, i.appendFrame = function (e, t, n) {
                                A(e, this.observer, t, n, e.manifestCodec);
                                var r = T(e, t, n, this.basePTS, this.frameIndex);
                                if (r && 0 === r.missing) return r
                            }, r
                        }(m);
                        var x = /\/emsg[-/]ID3/i;
                        const k = function () {
                            function e(e, t) {
                                this.remainderData = null, this.timeOffset = 0, this.config = void 0, this.videoTrack = void 0, this.audioTrack = void 0, this.id3Track = void 0, this.txtTrack = void 0, this.config = t
                            }

                            var t = e.prototype;
                            return t.resetTimeStamp = function () {
                            }, t.resetInitSegment = function (e, t, n, r) {
                                var i = this.videoTrack = d("video", 1), a = this.audioTrack = d("audio", 1),
                                    o = this.txtTrack = d("text", 1);
                                if (this.id3Track = d("id3", 1), this.timeOffset = 0, e && e.byteLength) {
                                    var s = (0, c.parseInitSegment)(e);
                                    if (s.video) {
                                        var l = s.video, p = l.id, u = l.timescale, g = l.codec;
                                        i.id = p, i.timescale = o.timescale = u, i.codec = g
                                    }
                                    if (s.audio) {
                                        var m = s.audio, f = m.id, h = m.timescale, _ = m.codec;
                                        a.id = f, a.timescale = h, a.codec = _
                                    }
                                    o.id = c.RemuxerTrackIdConfig.text, i.sampleDuration = 0, i.duration = a.duration = r
                                }
                            }, t.resetContiguity = function () {
                            }, e.probe = function (e) {
                                return e = e.length > 16384 ? e.subarray(0, 16384) : e, (0, c.findBox)(e, ["moof"]).length > 0
                            }, t.demux = function (e, t) {
                                this.timeOffset = t;
                                var n = e, r = this.videoTrack, i = this.txtTrack;
                                if (this.config.progressive) {
                                    this.remainderData && (n = (0, c.appendUint8Array)(this.remainderData, e));
                                    var a = (0, c.segmentValidRange)(n);
                                    this.remainderData = a.remainder, r.samples = a.valid || new Uint8Array
                                } else r.samples = n;
                                var o = this.extractID3Track(r, t);
                                return i.samples = (0, c.parseSamples)(t, r), {
                                    videoTrack: r,
                                    audioTrack: this.audioTrack,
                                    id3Track: o,
                                    textTrack: this.txtTrack
                                }
                            }, t.flush = function () {
                                var e = this.timeOffset, t = this.videoTrack, n = this.txtTrack;
                                t.samples = this.remainderData || new Uint8Array, this.remainderData = null;
                                var r = this.extractID3Track(t, this.timeOffset);
                                return n.samples = (0, c.parseSamples)(e, t), {
                                    videoTrack: t,
                                    audioTrack: d(),
                                    id3Track: r,
                                    textTrack: d()
                                }
                            }, t.extractID3Track = function (e, t) {
                                var n = this.id3Track;
                                if (e.samples.length) {
                                    var r = (0, c.findBox)(e.samples, ["emsg"]);
                                    r && r.forEach((function (e) {
                                        var r = (0, c.parseEmsg)(e);
                                        if (x.test(r.schemeIdUri)) {
                                            var i = (0, o.isFiniteNumber)(r.presentationTime) ? r.presentationTime / r.timeScale : t + r.presentationTimeDelta / r.timeScale,
                                                a = 4294967295 === r.eventDuration ? Number.POSITIVE_INFINITY : r.eventDuration / r.timeScale;
                                            a <= .001 && (a = Number.POSITIVE_INFINITY);
                                            var s = r.payload;
                                            n.samples.push({
                                                data: s,
                                                len: s.byteLength,
                                                dts: i,
                                                pts: i,
                                                type: l.MetadataSchema.emsg,
                                                duration: a
                                            })
                                        }
                                    }))
                                }
                                return n
                            }, t.demuxSampleAes = function (e, t, n) {
                                return Promise.reject(new Error("The MP4 demuxer does not support SAMPLE-AES decryption"))
                            }, t.destroy = function () {
                            }, e
                        }();
                        var C = null,
                            L = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
                            R = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
                            P = [[0, 72, 144, 12], [0, 0, 0, 0], [0, 72, 144, 12], [0, 144, 144, 12]], I = [0, 1, 1, 4];

                        function M(e, t, n, r, i) {
                            if (!(n + 24 > t.length)) {
                                var a = D(t, n);
                                if (a && n + a.frameLength <= t.length) {
                                    var o = r + i * (9e4 * a.samplesPerFrame / a.sampleRate),
                                        s = {unit: t.subarray(n, n + a.frameLength), pts: o, dts: o};
                                    return e.config = [], e.channelCount = a.channelCount, e.samplerate = a.sampleRate, e.samples.push(s), {
                                        sample: s,
                                        length: a.frameLength,
                                        missing: 0
                                    }
                                }
                            }
                        }

                        function D(e, t) {
                            var n = e[t + 1] >> 3 & 3, r = e[t + 1] >> 1 & 3, i = e[t + 2] >> 4 & 15,
                                a = e[t + 2] >> 2 & 3;
                            if (1 !== n && 0 !== i && 15 !== i && 3 !== a) {
                                var o = e[t + 2] >> 1 & 1, s = e[t + 3] >> 6,
                                    l = 1e3 * L[14 * (3 === n ? 3 - r : 3 === r ? 3 : 4) + i - 1],
                                    d = R[3 * (3 === n ? 0 : 2 === n ? 1 : 2) + a], c = 3 === s ? 1 : 2, p = P[n][r],
                                    u = I[r], g = 8 * p * u, m = Math.floor(p * l / d + o) * u;
                                if (null === C) {
                                    var f = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
                                    C = f ? parseInt(f[1]) : 0
                                }
                                return !!C && C <= 87 && 2 === r && l >= 224e3 && 0 === s && (e[t + 3] = 128 | e[t + 3]), {
                                    sampleRate: d,
                                    channelCount: c,
                                    frameLength: m,
                                    samplesPerFrame: g
                                }
                            }
                        }

                        function O(e, t) {
                            return 255 === e[t] && 224 == (224 & e[t + 1]) && 0 != (6 & e[t + 1])
                        }

                        function B(e, t) {
                            return t + 1 < e.length && O(e, t)
                        }

                        function N(e, t) {
                            if (t + 1 < e.length && O(e, t)) {
                                var n = D(e, t), r = 4;
                                null != n && n.frameLength && (r = n.frameLength);
                                var i = t + r;
                                return i === e.length || B(e, i)
                            }
                            return !1
                        }

                        const F = function () {
                            function e(e) {
                                this.data = void 0, this.bytesAvailable = void 0, this.word = void 0, this.bitsAvailable = void 0, this.data = e, this.bytesAvailable = e.byteLength, this.word = 0, this.bitsAvailable = 0
                            }

                            var t = e.prototype;
                            return t.loadWord = function () {
                                var e = this.data, t = this.bytesAvailable, n = e.byteLength - t, r = new Uint8Array(4),
                                    i = Math.min(4, t);
                                if (0 === i) throw new Error("no bytes available");
                                r.set(e.subarray(n, n + i)), this.word = new DataView(r.buffer).getUint32(0), this.bitsAvailable = 8 * i, this.bytesAvailable -= i
                            }, t.skipBits = function (e) {
                                var t;
                                e = Math.min(e, 8 * this.bytesAvailable + this.bitsAvailable), this.bitsAvailable > e ? (this.word <<= e, this.bitsAvailable -= e) : (e -= this.bitsAvailable, e -= (t = e >> 3) << 3, this.bytesAvailable -= t, this.loadWord(), this.word <<= e, this.bitsAvailable -= e)
                            }, t.readBits = function (e) {
                                var t = Math.min(this.bitsAvailable, e), n = this.word >>> 32 - t;
                                if (e > 32 && f.logger.error("Cannot read more than 32 bits at a time"), this.bitsAvailable -= t, this.bitsAvailable > 0) this.word <<= t; else {
                                    if (!(this.bytesAvailable > 0)) throw new Error("no bits available");
                                    this.loadWord()
                                }
                                return (t = e - t) > 0 && this.bitsAvailable ? n << t | this.readBits(t) : n
                            }, t.skipLZ = function () {
                                var e;
                                for (e = 0; e < this.bitsAvailable; ++e) if (0 != (this.word & 2147483648 >>> e)) return this.word <<= e, this.bitsAvailable -= e, e;
                                return this.loadWord(), e + this.skipLZ()
                            }, t.skipUEG = function () {
                                this.skipBits(1 + this.skipLZ())
                            }, t.skipEG = function () {
                                this.skipBits(1 + this.skipLZ())
                            }, t.readUEG = function () {
                                var e = this.skipLZ();
                                return this.readBits(e + 1) - 1
                            }, t.readEG = function () {
                                var e = this.readUEG();
                                return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                            }, t.readBoolean = function () {
                                return 1 === this.readBits(1)
                            }, t.readUByte = function () {
                                return this.readBits(8)
                            }, t.readUShort = function () {
                                return this.readBits(16)
                            }, t.readUInt = function () {
                                return this.readBits(32)
                            }, t.skipScalingList = function (e) {
                                for (var t = 8, n = 8, r = 0; r < e; r++) 0 !== n && (n = (t + this.readEG() + 256) % 256), t = 0 === n ? t : n
                            }, t.readSPS = function () {
                                var e, t, n, r = 0, i = 0, a = 0, o = 0, s = this.readUByte.bind(this),
                                    l = this.readBits.bind(this), d = this.readUEG.bind(this),
                                    c = this.readBoolean.bind(this), p = this.skipBits.bind(this),
                                    u = this.skipEG.bind(this), g = this.skipUEG.bind(this),
                                    m = this.skipScalingList.bind(this);
                                s();
                                var f = s();
                                if (l(5), p(3), s(), g(), 100 === f || 110 === f || 122 === f || 244 === f || 44 === f || 83 === f || 86 === f || 118 === f || 128 === f) {
                                    var h = d();
                                    if (3 === h && p(1), g(), g(), p(1), c()) for (t = 3 !== h ? 8 : 12, n = 0; n < t; n++) c() && m(n < 6 ? 16 : 64)
                                }
                                g();
                                var _ = d();
                                if (0 === _) d(); else if (1 === _) for (p(1), u(), u(), e = d(), n = 0; n < e; n++) u();
                                g(), p(1);
                                var v = d(), b = d(), y = l(1);
                                0 === y && p(1), p(1), c() && (r = d(), i = d(), a = d(), o = d());
                                var A = [1, 1];
                                if (c() && c()) switch (s()) {
                                    case 1:
                                        A = [1, 1];
                                        break;
                                    case 2:
                                        A = [12, 11];
                                        break;
                                    case 3:
                                        A = [10, 11];
                                        break;
                                    case 4:
                                        A = [16, 11];
                                        break;
                                    case 5:
                                        A = [40, 33];
                                        break;
                                    case 6:
                                        A = [24, 11];
                                        break;
                                    case 7:
                                        A = [20, 11];
                                        break;
                                    case 8:
                                        A = [32, 11];
                                        break;
                                    case 9:
                                        A = [80, 33];
                                        break;
                                    case 10:
                                        A = [18, 11];
                                        break;
                                    case 11:
                                        A = [15, 11];
                                        break;
                                    case 12:
                                        A = [64, 33];
                                        break;
                                    case 13:
                                        A = [160, 99];
                                        break;
                                    case 14:
                                        A = [4, 3];
                                        break;
                                    case 15:
                                        A = [3, 2];
                                        break;
                                    case 16:
                                        A = [2, 1];
                                        break;
                                    case 255:
                                        A = [s() << 8 | s(), s() << 8 | s()]
                                }
                                return {
                                    width: Math.ceil(16 * (v + 1) - 2 * r - 2 * i),
                                    height: (2 - y) * (b + 1) * 16 - (y ? 2 : 4) * (a + o),
                                    pixelRatio: A
                                }
                            }, t.readSliceType = function () {
                                return this.readUByte(), this.readUEG(), this.readUEG()
                            }, e
                        }(), U = function () {
                            function e(e, t, n) {
                                this.keyData = void 0, this.decrypter = void 0, this.keyData = n, this.decrypter = new a.default(t, {removePKCS7Padding: !1})
                            }

                            var t = e.prototype;
                            return t.decryptBuffer = function (e) {
                                return this.decrypter.decrypt(e, this.keyData.key.buffer, this.keyData.iv.buffer)
                            }, t.decryptAacSample = function (e, t, n) {
                                var r = this, i = e[t].unit;
                                if (!(i.length <= 16)) {
                                    var a = i.subarray(16, i.length - i.length % 16),
                                        o = a.buffer.slice(a.byteOffset, a.byteOffset + a.length);
                                    this.decryptBuffer(o).then((function (a) {
                                        var o = new Uint8Array(a);
                                        i.set(o, 16), r.decrypter.isSync() || r.decryptAacSamples(e, t + 1, n)
                                    }))
                                }
                            }, t.decryptAacSamples = function (e, t, n) {
                                for (; ; t++) {
                                    if (t >= e.length) return void n();
                                    if (!(e[t].unit.length < 32 || (this.decryptAacSample(e, t, n), this.decrypter.isSync()))) return
                                }
                            }, t.getAvcEncryptedData = function (e) {
                                for (var t = 16 * Math.floor((e.length - 48) / 160) + 16, n = new Int8Array(t), r = 0, i = 32; i < e.length - 16; i += 160, r += 16) n.set(e.subarray(i, i + 16), r);
                                return n
                            }, t.getAvcDecryptedUnit = function (e, t) {
                                for (var n = new Uint8Array(t), r = 0, i = 32; i < e.length - 16; i += 160, r += 16) e.set(n.subarray(r, r + 16), i);
                                return e
                            }, t.decryptAvcSample = function (e, t, n, r, i) {
                                var a = this, o = (0, c.discardEPB)(i.data), s = this.getAvcEncryptedData(o);
                                this.decryptBuffer(s.buffer).then((function (s) {
                                    i.data = a.getAvcDecryptedUnit(o, s), a.decrypter.isSync() || a.decryptAvcSamples(e, t, n + 1, r)
                                }))
                            }, t.decryptAvcSamples = function (e, t, n, r) {
                                if (e instanceof Uint8Array) throw new Error("Cannot decrypt samples of type Uint8Array");
                                for (; ; t++, n = 0) {
                                    if (t >= e.length) return void r();
                                    for (var i = e[t].units; !(n >= i.length); n++) {
                                        var a = i[n];
                                        if (!(a.data.length <= 48 || 1 !== a.type && 5 !== a.type || (this.decryptAvcSample(e, t, n, r, a), this.decrypter.isSync()))) return
                                    }
                                }
                            }, e
                        }();

                        function H() {
                            return (H = Object.assign ? Object.assign.bind() : function (e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                                }
                                return e
                            }).apply(this, arguments)
                        }

                        var Y = 188;

                        function G(e, t, n, r) {
                            return {key: e, frame: !1, pts: t, dts: n, units: [], debug: r, length: 0}
                        }

                        function V(e, t) {
                            return ((31 & e[t + 1]) << 8) + e[t + 2]
                        }

                        function K(e, t) {
                            return (31 & e[t + 10]) << 8 | e[t + 11]
                        }

                        function z(e, t, n, r) {
                            var i = {audio: -1, avc: -1, id3: -1, segmentCodec: "aac"},
                                a = t + 3 + ((15 & e[t + 1]) << 8 | e[t + 2]) - 4;
                            for (t += 12 + ((15 & e[t + 10]) << 8 | e[t + 11]); t < a;) {
                                var o = V(e, t);
                                switch (e[t]) {
                                    case 207:
                                        if (!r) {
                                            f.logger.log("ADTS AAC with AES-128-CBC frame encryption found in unencrypted stream");
                                            break
                                        }
                                    case 15:
                                        -1 === i.audio && (i.audio = o);
                                        break;
                                    case 21:
                                        -1 === i.id3 && (i.id3 = o);
                                        break;
                                    case 219:
                                        if (!r) {
                                            f.logger.log("H.264 with AES-128-CBC slice encryption found in unencrypted stream");
                                            break
                                        }
                                    case 27:
                                        -1 === i.avc && (i.avc = o);
                                        break;
                                    case 3:
                                    case 4:
                                        !0 !== n.mpeg && !0 !== n.mp3 ? f.logger.log("MPEG audio found, not supported in this browser") : -1 === i.audio && (i.audio = o, i.segmentCodec = "mp3");
                                        break;
                                    case 36:
                                        f.logger.warn("Unsupported HEVC stream type found")
                                }
                                t += 5 + ((15 & e[t + 3]) << 8 | e[t + 4])
                            }
                            return i
                        }

                        function j(e) {
                            var t, n, r, i, a, o = 0, s = e.data;
                            if (!e || 0 === e.size) return null;
                            for (; s[0].length < 19 && s.length > 1;) {
                                var l = new Uint8Array(s[0].length + s[1].length);
                                l.set(s[0]), l.set(s[1], s[0].length), s[0] = l, s.splice(1, 1)
                            }
                            if (1 === ((t = s[0])[0] << 16) + (t[1] << 8) + t[2]) {
                                if ((n = (t[4] << 8) + t[5]) && n > e.size - 6) return null;
                                var d = t[7];
                                192 & d && (i = 536870912 * (14 & t[9]) + 4194304 * (255 & t[10]) + 16384 * (254 & t[11]) + 128 * (255 & t[12]) + (254 & t[13]) / 2, 64 & d ? i - (a = 536870912 * (14 & t[14]) + 4194304 * (255 & t[15]) + 16384 * (254 & t[16]) + 128 * (255 & t[17]) + (254 & t[18]) / 2) > 54e5 && (f.logger.warn(Math.round((i - a) / 9e4) + "s delta between PTS and DTS, align them"), i = a) : a = i);
                                var c = (r = t[8]) + 9;
                                if (e.size <= c) return null;
                                e.size -= c;
                                for (var p = new Uint8Array(e.size), u = 0, g = s.length; u < g; u++) {
                                    var m = (t = s[u]).byteLength;
                                    if (c) {
                                        if (c > m) {
                                            c -= m;
                                            continue
                                        }
                                        t = t.subarray(c), m -= c, c = 0
                                    }
                                    p.set(t, o), o += m
                                }
                                return n && (n -= r + 3), {data: p, pts: i, dts: a, len: n}
                            }
                            return null
                        }

                        function Q(e, t) {
                            if (e.units.length && e.frame) {
                                if (void 0 === e.pts) {
                                    var n = t.samples, r = n.length;
                                    if (!r) return void t.dropped++;
                                    var i = n[r - 1];
                                    e.pts = i.pts, e.dts = i.dts
                                }
                                t.samples.push(e)
                            }
                            e.debug.length && f.logger.log(e.pts + "/" + e.dts + ":" + e.debug)
                        }

                        const W = function () {
                            function e(e, t, n) {
                                this.observer = void 0, this.config = void 0, this.typeSupported = void 0, this.sampleAes = null, this.pmtParsed = !1, this.audioCodec = void 0, this.videoCodec = void 0, this._duration = 0, this._pmtId = -1, this._avcTrack = void 0, this._audioTrack = void 0, this._id3Track = void 0, this._txtTrack = void 0, this.aacOverFlow = null, this.avcSample = null, this.remainderData = null, this.observer = e, this.config = t, this.typeSupported = n
                            }

                            e.probe = function (t) {
                                var n = e.syncOffset(t);
                                return n > 0 && f.logger.warn("MPEG2-TS detected but first sync word found @ offset " + n), -1 !== n
                            }, e.syncOffset = function (e) {
                                for (var t = Math.min(940, e.length - Y) + 1, n = 0; n < t;) {
                                    for (var r = !1, i = 0; i < t && 71 === e[i]; i += Y) if (r || 0 !== V(e, i) || (r = !0), r && i + Y > t) return n;
                                    n++
                                }
                                return -1
                            }, e.createTrack = function (e, t) {
                                return {
                                    container: "video" === e || "audio" === e ? "video/mp2t" : void 0,
                                    type: e,
                                    id: c.RemuxerTrackIdConfig[e],
                                    pid: -1,
                                    inputTimeScale: 9e4,
                                    sequenceNumber: 0,
                                    samples: [],
                                    dropped: 0,
                                    duration: "audio" === e ? t : void 0
                                }
                            };
                            var t = e.prototype;
                            return t.resetInitSegment = function (t, n, r, i) {
                                this.pmtParsed = !1, this._pmtId = -1, this._avcTrack = e.createTrack("video"), this._audioTrack = e.createTrack("audio", i), this._id3Track = e.createTrack("id3"), this._txtTrack = e.createTrack("text"), this._audioTrack.segmentCodec = "aac", this.aacOverFlow = null, this.avcSample = null, this.remainderData = null, this.audioCodec = n, this.videoCodec = r, this._duration = i
                            }, t.resetTimeStamp = function () {
                            }, t.resetContiguity = function () {
                                var e = this._audioTrack, t = this._avcTrack, n = this._id3Track;
                                e && (e.pesData = null), t && (t.pesData = null), n && (n.pesData = null), this.aacOverFlow = null, this.avcSample = null, this.remainderData = null
                            }, t.demux = function (t, n, a, o) {
                                var s;
                                void 0 === a && (a = !1), void 0 === o && (o = !1), a || (this.sampleAes = null);
                                var l = this._avcTrack, d = this._audioTrack, p = this._id3Track, u = this._txtTrack,
                                    g = l.pid, m = l.pesData, h = d.pid, _ = p.pid, v = d.pesData, b = p.pesData,
                                    y = null, A = this.pmtParsed, E = this._pmtId, T = t.length;
                                if (this.remainderData && (T = (t = (0, c.appendUint8Array)(this.remainderData, t)).length, this.remainderData = null), T < Y && !o) return this.remainderData = t, {
                                    audioTrack: d,
                                    videoTrack: l,
                                    id3Track: p,
                                    textTrack: u
                                };
                                var w = Math.max(0, e.syncOffset(t));
                                (T -= (T - w) % Y) < t.byteLength && !o && (this.remainderData = new Uint8Array(t.buffer, T, t.buffer.byteLength - T));
                                for (var S = 0, x = w; x < T; x += Y) if (71 === t[x]) {
                                    var k = !!(64 & t[x + 1]), C = V(t, x), L = void 0;
                                    if ((48 & t[x + 3]) >> 4 > 1) {
                                        if ((L = x + 5 + t[x + 4]) === x + Y) continue
                                    } else L = x + 4;
                                    switch (C) {
                                        case g:
                                            k && (m && (s = j(m)) && this.parseAVCPES(l, u, s, !1), m = {
                                                data: [],
                                                size: 0
                                            }), m && (m.data.push(t.subarray(L, x + Y)), m.size += x + Y - L);
                                            break;
                                        case h:
                                            if (k) {
                                                if (v && (s = j(v))) switch (d.segmentCodec) {
                                                    case"aac":
                                                        this.parseAACPES(d, s);
                                                        break;
                                                    case"mp3":
                                                        this.parseMPEGPES(d, s)
                                                }
                                                v = {data: [], size: 0}
                                            }
                                            v && (v.data.push(t.subarray(L, x + Y)), v.size += x + Y - L);
                                            break;
                                        case _:
                                            k && (b && (s = j(b)) && this.parseID3PES(p, s), b = {
                                                data: [],
                                                size: 0
                                            }), b && (b.data.push(t.subarray(L, x + Y)), b.size += x + Y - L);
                                            break;
                                        case 0:
                                            k && (L += t[L] + 1), E = this._pmtId = K(t, L);
                                            break;
                                        case E:
                                            k && (L += t[L] + 1);
                                            var R = z(t, L, this.typeSupported, a);
                                            (g = R.avc) > 0 && (l.pid = g), (h = R.audio) > 0 && (d.pid = h, d.segmentCodec = R.segmentCodec), (_ = R.id3) > 0 && (p.pid = _), null === y || A || (f.logger.log("unknown PID '" + y + "' in TS found"), y = null, x = w - 188), A = this.pmtParsed = !0;
                                            break;
                                        case 17:
                                        case 8191:
                                            break;
                                        default:
                                            y = C
                                    }
                                } else S++;
                                S > 0 && this.observer.emit(r.Events.ERROR, r.Events.ERROR, {
                                    type: i.ErrorTypes.MEDIA_ERROR,
                                    details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                    fatal: !1,
                                    reason: "Found " + S + " TS packet/s that do not start with 0x47"
                                }), l.pesData = m, d.pesData = v, p.pesData = b;
                                var P = {audioTrack: d, videoTrack: l, id3Track: p, textTrack: u};
                                return o && this.extractRemainingSamples(P), P
                            }, t.flush = function () {
                                var e, t = this.remainderData;
                                return this.remainderData = null, e = t ? this.demux(t, -1, !1, !0) : {
                                    videoTrack: this._avcTrack,
                                    audioTrack: this._audioTrack,
                                    id3Track: this._id3Track,
                                    textTrack: this._txtTrack
                                }, this.extractRemainingSamples(e), this.sampleAes ? this.decrypt(e, this.sampleAes) : e
                            }, t.extractRemainingSamples = function (e) {
                                var t, n = e.audioTrack, r = e.videoTrack, i = e.id3Track, a = e.textTrack,
                                    o = r.pesData, s = n.pesData, l = i.pesData;
                                if (o && (t = j(o)) ? (this.parseAVCPES(r, a, t, !0), r.pesData = null) : r.pesData = o, s && (t = j(s))) {
                                    switch (n.segmentCodec) {
                                        case"aac":
                                            this.parseAACPES(n, t);
                                            break;
                                        case"mp3":
                                            this.parseMPEGPES(n, t)
                                    }
                                    n.pesData = null
                                } else null != s && s.size && f.logger.log("last AAC PES packet truncated,might overlap between fragments"), n.pesData = s;
                                l && (t = j(l)) ? (this.parseID3PES(i, t), i.pesData = null) : i.pesData = l
                            }, t.demuxSampleAes = function (e, t, n) {
                                var r = this.demux(e, n, !0, !this.config.progressive),
                                    i = this.sampleAes = new U(this.observer, this.config, t);
                                return this.decrypt(r, i)
                            }, t.decrypt = function (e, t) {
                                return new Promise((function (n) {
                                    var r = e.audioTrack, i = e.videoTrack;
                                    r.samples && "aac" === r.segmentCodec ? t.decryptAacSamples(r.samples, 0, (function () {
                                        i.samples ? t.decryptAvcSamples(i.samples, 0, 0, (function () {
                                            n(e)
                                        })) : n(e)
                                    })) : i.samples && t.decryptAvcSamples(i.samples, 0, 0, (function () {
                                        n(e)
                                    }))
                                }))
                            }, t.destroy = function () {
                                this._duration = 0
                            }, t.parseAVCPES = function (e, t, n, r) {
                                var i, a = this, o = this.parseAVCNALu(e, n.data), s = this.avcSample, l = !1;
                                n.data = null, s && o.length && !e.audFound && (Q(s, e), s = this.avcSample = G(!1, n.pts, n.dts, "")), o.forEach((function (r) {
                                    switch (r.type) {
                                        case 1:
                                            i = !0, s || (s = a.avcSample = G(!0, n.pts, n.dts, "")), s.frame = !0;
                                            var o = r.data;
                                            if (l && o.length > 4) {
                                                var d = new F(o).readSliceType();
                                                2 !== d && 4 !== d && 7 !== d && 9 !== d || (s.key = !0)
                                            }
                                            break;
                                        case 5:
                                            i = !0, s || (s = a.avcSample = G(!0, n.pts, n.dts, "")), s.key = !0, s.frame = !0;
                                            break;
                                        case 6:
                                            i = !0, (0, c.parseSEIMessageFromNALu)(r.data, 1, n.pts, t.samples);
                                            break;
                                        case 7:
                                            if (i = !0, l = !0, !e.sps) {
                                                var p = new F(r.data).readSPS();
                                                e.width = p.width, e.height = p.height, e.pixelRatio = p.pixelRatio, e.sps = [r.data], e.duration = a._duration;
                                                for (var u = r.data.subarray(1, 4), g = "avc1.", m = 0; m < 3; m++) {
                                                    var f = u[m].toString(16);
                                                    f.length < 2 && (f = "0" + f), g += f
                                                }
                                                e.codec = g
                                            }
                                            break;
                                        case 8:
                                            i = !0, e.pps || (e.pps = [r.data]);
                                            break;
                                        case 9:
                                            i = !1, e.audFound = !0, s && Q(s, e), s = a.avcSample = G(!1, n.pts, n.dts, "");
                                            break;
                                        case 12:
                                            i = !0;
                                            break;
                                        default:
                                            i = !1, s && (s.debug += "unknown NAL " + r.type + " ")
                                    }
                                    s && i && s.units.push(r)
                                })), r && s && (Q(s, e), this.avcSample = null)
                            }, t.getLastNalUnit = function (e) {
                                var t, n, r = this.avcSample;
                                if (r && 0 !== r.units.length || (r = e[e.length - 1]), null !== (t = r) && void 0 !== t && t.units) {
                                    var i = r.units;
                                    n = i[i.length - 1]
                                }
                                return n
                            }, t.parseAVCNALu = function (e, t) {
                                var n, r, i = t.byteLength, a = e.naluState || 0, o = a, s = [], l = 0, d = -1, c = 0;
                                for (-1 === a && (d = 0, c = 31 & t[0], a = 0, l = 1); l < i;) if (n = t[l++], a) if (1 !== a) if (n) if (1 === n) {
                                    if (d >= 0) {
                                        var p = {data: t.subarray(d, l - a - 1), type: c};
                                        s.push(p)
                                    } else {
                                        var u = this.getLastNalUnit(e.samples);
                                        if (u && (o && l <= 4 - o && u.state && (u.data = u.data.subarray(0, u.data.byteLength - o)), (r = l - a - 1) > 0)) {
                                            var g = new Uint8Array(u.data.byteLength + r);
                                            g.set(u.data, 0), g.set(t.subarray(0, r), u.data.byteLength), u.data = g, u.state = 0
                                        }
                                    }
                                    l < i ? (d = l, c = 31 & t[l], a = 0) : a = -1
                                } else a = 0; else a = 3; else a = n ? 0 : 2; else a = n ? 0 : 1;
                                if (d >= 0 && a >= 0) {
                                    var m = {data: t.subarray(d, i), type: c, state: a};
                                    s.push(m)
                                }
                                if (0 === s.length) {
                                    var f = this.getLastNalUnit(e.samples);
                                    if (f) {
                                        var h = new Uint8Array(f.data.byteLength + t.byteLength);
                                        h.set(f.data, 0), h.set(t, f.data.byteLength), f.data = h
                                    }
                                }
                                return e.naluState = a, s
                            }, t.parseAACPES = function (e, t) {
                                var n, a, o, s, l, d = 0, c = this.aacOverFlow, p = t.data;
                                if (c) {
                                    this.aacOverFlow = null;
                                    var u = c.missing, g = c.sample.unit.byteLength;
                                    if (-1 === u) {
                                        var m = new Uint8Array(g + p.byteLength);
                                        m.set(c.sample.unit, 0), m.set(p, g), p = m
                                    } else {
                                        var h = g - u;
                                        c.sample.unit.set(p.subarray(0, u), h), e.samples.push(c.sample), d = c.missing
                                    }
                                }
                                for (n = d, a = p.length; n < a - 1 && !b(p, n); n++) ;
                                if (n === d || (n < a - 1 ? (o = "AAC PES did not start with ADTS header,offset:" + n, s = !1) : (o = "no ADTS header found in AAC PES", s = !0), f.logger.warn("parsing error:" + o), this.observer.emit(r.Events.ERROR, r.Events.ERROR, {
                                    type: i.ErrorTypes.MEDIA_ERROR,
                                    details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                    fatal: s,
                                    reason: o
                                }), !s)) {
                                    if (A(e, this.observer, p, n, this.audioCodec), void 0 !== t.pts) l = t.pts; else {
                                        if (!c) return void f.logger.warn("[tsdemuxer]: AAC PES unknown PTS");
                                        var _ = E(e.samplerate);
                                        l = c.sample.pts + _
                                    }
                                    for (var v, y = 0; n < a;) {
                                        if (n += (v = T(e, p, n, l, y)).length, v.missing) {
                                            this.aacOverFlow = v;
                                            break
                                        }
                                        for (y++; n < a - 1 && !b(p, n); n++) ;
                                    }
                                }
                            }, t.parseMPEGPES = function (e, t) {
                                var n = t.data, r = n.length, i = 0, a = 0, o = t.pts;
                                if (void 0 !== o) for (; a < r;) if (B(n, a)) {
                                    var s = M(e, n, a, o, i);
                                    if (!s) break;
                                    a += s.length, i++
                                } else a++; else f.logger.warn("[tsdemuxer]: MPEG PES unknown PTS")
                            }, t.parseID3PES = function (e, t) {
                                if (void 0 !== t.pts) {
                                    var n = H({}, t, {
                                        type: this._avcTrack ? l.MetadataSchema.emsg : l.MetadataSchema.audioId3,
                                        duration: Number.POSITIVE_INFINITY
                                    });
                                    e.samples.push(n)
                                } else f.logger.warn("[tsdemuxer]: ID3 PES unknown PTS")
                            }, e
                        }();

                        function q(e, t) {
                            return (q = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
                                return e.__proto__ = t, e
                            })(e, t)
                        }

                        const X = function (e) {
                            var t, n;

                            function r() {
                                return e.apply(this, arguments) || this
                            }

                            n = e, (t = r).prototype = Object.create(n.prototype), t.prototype.constructor = t, q(t, n);
                            var i = r.prototype;
                            return i.resetInitSegment = function (t, n, r, i) {
                                e.prototype.resetInitSegment.call(this, t, n, r, i), this._audioTrack = {
                                    container: "audio/mpeg",
                                    type: "audio",
                                    id: 2,
                                    pid: -1,
                                    sequenceNumber: 0,
                                    segmentCodec: "mp3",
                                    samples: [],
                                    manifestCodec: n,
                                    duration: i,
                                    inputTimeScale: 9e4,
                                    dropped: 0
                                }
                            }, r.probe = function (e) {
                                if (!e) return !1;
                                for (var t = (s.getID3Data(e, 0) || []).length, n = e.length; t < n; t++) if (N(e, t)) return f.logger.log("MPEG Audio sync word found !"), !0;
                                return !1
                            }, i.canParse = function (e, t) {
                                return function (e, t) {
                                    return O(e, t) && 4 <= e.length - t
                                }(e, t)
                            }, i.appendFrame = function (e, t, n) {
                                if (null !== this.basePTS) return M(e, t, n, this.basePTS, this.frameIndex)
                            }, r
                        }(m), J = function () {
                            function e() {
                            }

                            return e.getSilentFrame = function (e, t) {
                                if ("mp4a.40.2" === e) {
                                    if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                                    if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                                    if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                                    if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                                    if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                                    if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224])
                                } else {
                                    if (1 === t) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                    if (2 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                    if (3 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                                }
                            }, e
                        }();
                        var $ = Math.pow(2, 32) - 1, Z = function () {
                            function e() {
                            }

                            return e.init = function () {
                                var t;
                                for (t in e.types = {
                                    avc1: [],
                                    avcC: [],
                                    btrt: [],
                                    dinf: [],
                                    dref: [],
                                    esds: [],
                                    ftyp: [],
                                    hdlr: [],
                                    mdat: [],
                                    mdhd: [],
                                    mdia: [],
                                    mfhd: [],
                                    minf: [],
                                    moof: [],
                                    moov: [],
                                    mp4a: [],
                                    ".mp3": [],
                                    mvex: [],
                                    mvhd: [],
                                    pasp: [],
                                    sdtp: [],
                                    stbl: [],
                                    stco: [],
                                    stsc: [],
                                    stsd: [],
                                    stsz: [],
                                    stts: [],
                                    tfdt: [],
                                    tfhd: [],
                                    traf: [],
                                    trak: [],
                                    trun: [],
                                    trex: [],
                                    tkhd: [],
                                    vmhd: [],
                                    smhd: []
                                }, e.types) e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                                var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                                    r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                                e.HDLR_TYPES = {video: n, audio: r};
                                var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                                    a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                                e.STTS = e.STSC = e.STCO = a, e.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), e.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), e.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), e.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                                var o = new Uint8Array([105, 115, 111, 109]), s = new Uint8Array([97, 118, 99, 49]),
                                    l = new Uint8Array([0, 0, 0, 1]);
                                e.FTYP = e.box(e.types.ftyp, o, l, o, s), e.DINF = e.box(e.types.dinf, e.box(e.types.dref, i))
                            }, e.box = function (e) {
                                for (var t = 8, n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) r[i - 1] = arguments[i];
                                for (var a = r.length, o = a; a--;) t += r[a].byteLength;
                                var s = new Uint8Array(t);
                                for (s[0] = t >> 24 & 255, s[1] = t >> 16 & 255, s[2] = t >> 8 & 255, s[3] = 255 & t, s.set(e, 4), a = 0, t = 8; a < o; a++) s.set(r[a], t), t += r[a].byteLength;
                                return s
                            }, e.hdlr = function (t) {
                                return e.box(e.types.hdlr, e.HDLR_TYPES[t])
                            }, e.mdat = function (t) {
                                return e.box(e.types.mdat, t)
                            }, e.mdhd = function (t, n) {
                                n *= t;
                                var r = Math.floor(n / ($ + 1)), i = Math.floor(n % ($ + 1));
                                return e.box(e.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, 85, 196, 0, 0]))
                            }, e.mdia = function (t) {
                                return e.box(e.types.mdia, e.mdhd(t.timescale, t.duration), e.hdlr(t.type), e.minf(t))
                            }, e.mfhd = function (t) {
                                return e.box(e.types.mfhd, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t]))
                            }, e.minf = function (t) {
                                return "audio" === t.type ? e.box(e.types.minf, e.box(e.types.smhd, e.SMHD), e.DINF, e.stbl(t)) : e.box(e.types.minf, e.box(e.types.vmhd, e.VMHD), e.DINF, e.stbl(t))
                            }, e.moof = function (t, n, r) {
                                return e.box(e.types.moof, e.mfhd(t), e.traf(r, n))
                            }, e.moov = function (t) {
                                for (var n = t.length, r = []; n--;) r[n] = e.trak(t[n]);
                                return e.box.apply(null, [e.types.moov, e.mvhd(t[0].timescale, t[0].duration)].concat(r).concat(e.mvex(t)))
                            }, e.mvex = function (t) {
                                for (var n = t.length, r = []; n--;) r[n] = e.trex(t[n]);
                                return e.box.apply(null, [e.types.mvex].concat(r))
                            }, e.mvhd = function (t, n) {
                                n *= t;
                                var r = Math.floor(n / ($ + 1)), i = Math.floor(n % ($ + 1)),
                                    a = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                                return e.box(e.types.mvhd, a)
                            }, e.sdtp = function (t) {
                                var n, r, i = t.samples || [], a = new Uint8Array(4 + i.length);
                                for (n = 0; n < i.length; n++) r = i[n].flags, a[n + 4] = r.dependsOn << 4 | r.isDependedOn << 2 | r.hasRedundancy;
                                return e.box(e.types.sdtp, a)
                            }, e.stbl = function (t) {
                                return e.box(e.types.stbl, e.stsd(t), e.box(e.types.stts, e.STTS), e.box(e.types.stsc, e.STSC), e.box(e.types.stsz, e.STSZ), e.box(e.types.stco, e.STCO))
                            }, e.avc1 = function (t) {
                                var n, r, i, a = [], o = [];
                                for (n = 0; n < t.sps.length; n++) i = (r = t.sps[n]).byteLength, a.push(i >>> 8 & 255), a.push(255 & i), a = a.concat(Array.prototype.slice.call(r));
                                for (n = 0; n < t.pps.length; n++) i = (r = t.pps[n]).byteLength, o.push(i >>> 8 & 255), o.push(255 & i), o = o.concat(Array.prototype.slice.call(r));
                                var s = e.box(e.types.avcC, new Uint8Array([1, a[3], a[4], a[5], 255, 224 | t.sps.length].concat(a).concat([t.pps.length]).concat(o))),
                                    l = t.width, d = t.height, c = t.pixelRatio[0], p = t.pixelRatio[1];
                                return e.box(e.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, l >> 8 & 255, 255 & l, d >> 8 & 255, 255 & d, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), s, e.box(e.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), e.box(e.types.pasp, new Uint8Array([c >> 24, c >> 16 & 255, c >> 8 & 255, 255 & c, p >> 24, p >> 16 & 255, p >> 8 & 255, 255 & p])))
                            }, e.esds = function (e) {
                                var t = e.config.length;
                                return new Uint8Array([0, 0, 0, 0, 3, 23 + t, 0, 1, 0, 4, 15 + t, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([t]).concat(e.config).concat([6, 1, 2]))
                            }, e.mp4a = function (t) {
                                var n = t.samplerate;
                                return e.box(e.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0]), e.box(e.types.esds, e.esds(t)))
                            }, e.mp3 = function (t) {
                                var n = t.samplerate;
                                return e.box(e.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0]))
                            }, e.stsd = function (t) {
                                return "audio" === t.type ? "mp3" === t.segmentCodec && "mp3" === t.codec ? e.box(e.types.stsd, e.STSD, e.mp3(t)) : e.box(e.types.stsd, e.STSD, e.mp4a(t)) : e.box(e.types.stsd, e.STSD, e.avc1(t))
                            }, e.tkhd = function (t) {
                                var n = t.id, r = t.duration * t.timescale, i = t.width, a = t.height,
                                    o = Math.floor(r / ($ + 1)), s = Math.floor(r % ($ + 1));
                                return e.box(e.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 0, 0, 0, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, i >> 8 & 255, 255 & i, 0, 0, a >> 8 & 255, 255 & a, 0, 0]))
                            }, e.traf = function (t, n) {
                                var r = e.sdtp(t), i = t.id, a = Math.floor(n / ($ + 1)), o = Math.floor(n % ($ + 1));
                                return e.box(e.types.traf, e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i])), e.box(e.types.tfdt, new Uint8Array([1, 0, 0, 0, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o])), e.trun(t, r.length + 16 + 20 + 8 + 16 + 8 + 8), r)
                            }, e.trak = function (t) {
                                return t.duration = t.duration || 4294967295, e.box(e.types.trak, e.tkhd(t), e.mdia(t))
                            }, e.trex = function (t) {
                                var n = t.id;
                                return e.box(e.types.trex, new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                            }, e.trun = function (t, n) {
                                var r, i, a, o, s, l, d = t.samples || [], c = d.length, p = 12 + 16 * c,
                                    u = new Uint8Array(p);
                                for (n += 8 + p, u.set(["video" === t.type ? 1 : 0, 0, 15, 1, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, 255 & c, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n], 0), r = 0; r < c; r++) a = (i = d[r]).duration, o = i.size, s = i.flags, l = i.cts, u.set([a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, 255 & a, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, 255 & o, s.isLeading << 2 | s.dependsOn, s.isDependedOn << 6 | s.hasRedundancy << 4 | s.paddingValue << 1 | s.isNonSync, 61440 & s.degradPrio, 15 & s.degradPrio, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l], 12 + 16 * r);
                                return e.box(e.types.trun, u)
                            }, e.initSegment = function (t) {
                                e.types || e.init();
                                var n = e.moov(t), r = new Uint8Array(e.FTYP.byteLength + n.byteLength);
                                return r.set(e.FTYP), r.set(n, e.FTYP.byteLength), r
                            }, e
                        }();
                        Z.types = void 0, Z.HDLR_TYPES = void 0, Z.STTS = void 0, Z.STSC = void 0, Z.STCO = void 0, Z.STSZ = void 0, Z.VMHD = void 0, Z.SMHD = void 0, Z.STSD = void 0, Z.FTYP = void 0, Z.DINF = void 0;
                        const ee = Z;
                        var te = n(308);

                        function ne(e, t) {
                            return void 0 === t && (t = !1), function (e, t, n, r) {
                                void 0 === n && (n = 1), void 0 === r && (r = !1);
                                var i = 1e3 * e * n;
                                return r ? Math.round(i) : i
                            }(e, 0, 1 / 9e4, t)
                        }

                        function re() {
                            return (re = Object.assign ? Object.assign.bind() : function (e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                                }
                                return e
                            }).apply(this, arguments)
                        }

                        var ie = null, ae = null, oe = function () {
                            function e(e, t, n, r) {
                                if (void 0 === r && (r = ""), this.observer = void 0, this.config = void 0, this.typeSupported = void 0, this.ISGenerated = !1, this._initPTS = void 0, this._initDTS = void 0, this.nextAvcDts = null, this.nextAudioPts = null, this.videoSampleDuration = null, this.isAudioContiguous = !1, this.isVideoContiguous = !1, this.observer = e, this.config = t, this.typeSupported = n, this.ISGenerated = !1, null === ie) {
                                    var i = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
                                    ie = i ? parseInt(i[1]) : 0
                                }
                                if (null === ae) {
                                    var a = navigator.userAgent.match(/Safari\/(\d+)/i);
                                    ae = a ? parseInt(a[1]) : 0
                                }
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                            }, t.resetTimeStamp = function (e) {
                                f.logger.log("[mp4-remuxer]: initPTS & initDTS reset"), this._initPTS = this._initDTS = e
                            }, t.resetNextTimestamp = function () {
                                f.logger.log("[mp4-remuxer]: reset next timestamp"), this.isVideoContiguous = !1, this.isAudioContiguous = !1
                            }, t.resetInitSegment = function () {
                                f.logger.log("[mp4-remuxer]: ISGenerated flag reset"), this.ISGenerated = !1
                            }, t.getVideoStartPts = function (e) {
                                var t = !1, n = e.reduce((function (e, n) {
                                    var r = n.pts - e;
                                    return r < -4294967296 ? (t = !0, se(e, n.pts)) : r > 0 ? e : n.pts
                                }), e[0].pts);
                                return t && f.logger.debug("PTS rollover detected"), n
                            }, t.remux = function (e, t, n, r, i, a, o, s) {
                                var l, d, c, p, u, g, m = i, h = i, _ = e.pid > -1, v = t.pid > -1,
                                    b = t.samples.length, y = e.samples.length > 0, A = o && b > 0 || b > 1;
                                if ((!_ || y) && (!v || A) || this.ISGenerated || o) {
                                    this.ISGenerated || (c = this.generateIS(e, t, i));
                                    var E, T = this.isVideoContiguous, w = -1;
                                    if (A && (w = function (e) {
                                        for (var t = 0; t < e.length; t++) if (e[t].key) return t;
                                        return -1
                                    }(t.samples), !T && this.config.forceKeyFrameOnDiscontinuity)) if (g = !0, w > 0) {
                                        f.logger.warn("[mp4-remuxer]: Dropped " + w + " out of " + b + " video samples due to a missing keyframe");
                                        var S = this.getVideoStartPts(t.samples);
                                        t.samples = t.samples.slice(w), t.dropped += w, E = h += (t.samples[0].pts - S) / t.inputTimeScale
                                    } else -1 === w && (f.logger.warn("[mp4-remuxer]: No keyframe found out of " + b + " video samples"), g = !1);
                                    if (this.ISGenerated) {
                                        if (y && A) {
                                            var x = this.getVideoStartPts(t.samples),
                                                k = (se(e.samples[0].pts, x) - x) / t.inputTimeScale;
                                            m += Math.max(0, k), h += Math.max(0, -k)
                                        }
                                        if (y) {
                                            if (e.samplerate || (f.logger.warn("[mp4-remuxer]: regenerate InitSegment as audio detected"), c = this.generateIS(e, t, i)), d = this.remuxAudio(e, m, this.isAudioContiguous, a, v || A || s === te.PlaylistLevelType.AUDIO ? h : void 0), A) {
                                                var C = d ? d.endPTS - d.startPTS : 0;
                                                t.inputTimeScale || (f.logger.warn("[mp4-remuxer]: regenerate InitSegment as video detected"), c = this.generateIS(e, t, i)), l = this.remuxVideo(t, h, T, C)
                                            }
                                        } else A && (l = this.remuxVideo(t, h, T, 0));
                                        l && (l.firstKeyFrame = w, l.independent = -1 !== w, l.firstKeyFramePTS = E)
                                    }
                                }
                                return this.ISGenerated && (n.samples.length && (u = le(n, i, this._initPTS, this._initDTS)), r.samples.length && (p = de(r, i, this._initPTS))), {
                                    audio: d,
                                    video: l,
                                    initSegment: c,
                                    independent: g,
                                    text: p,
                                    id3: u
                                }
                            }, t.generateIS = function (e, t, n) {
                                var r, i, a, s = e.samples, l = t.samples, d = this.typeSupported, c = {},
                                    p = !(0, o.isFiniteNumber)(this._initPTS), u = "audio/mp4";
                                if (p && (r = i = 1 / 0), e.config && s.length && (e.timescale = e.samplerate, "mp3" === e.segmentCodec && (d.mpeg ? (u = "audio/mpeg", e.codec = "") : d.mp3 && (e.codec = "mp3")), c.audio = {
                                    id: "audio",
                                    container: u,
                                    codec: e.codec,
                                    initSegment: "mp3" === e.segmentCodec && d.mpeg ? new Uint8Array(0) : ee.initSegment([e]),
                                    metadata: {channelCount: e.channelCount}
                                }, p && (a = e.inputTimeScale, r = i = s[0].pts - Math.round(a * n))), t.sps && t.pps && l.length && (t.timescale = t.inputTimeScale, c.video = {
                                    id: "main",
                                    container: "video/mp4",
                                    codec: t.codec,
                                    initSegment: ee.initSegment([t]),
                                    metadata: {width: t.width, height: t.height}
                                }, p)) {
                                    a = t.inputTimeScale;
                                    var g = this.getVideoStartPts(l), m = Math.round(a * n);
                                    i = Math.min(i, se(l[0].dts, g) - m), r = Math.min(r, g - m)
                                }
                                if (Object.keys(c).length) return this.ISGenerated = !0, p && (this._initPTS = r, this._initDTS = i), {
                                    tracks: c,
                                    initPTS: r,
                                    timescale: a
                                }
                            }, t.remuxVideo = function (e, t, n, a) {
                                var o, s, l = e.inputTimeScale, d = e.samples, c = [], p = d.length, u = this._initPTS,
                                    g = this.nextAvcDts, m = 8, h = this.videoSampleDuration,
                                    _ = Number.POSITIVE_INFINITY, v = Number.NEGATIVE_INFINITY, b = !1;
                                n && null !== g || (g = t * l - (d[0].pts - se(d[0].dts, d[0].pts)));
                                for (var y = 0; y < p; y++) {
                                    var A = d[y];
                                    A.pts = se(A.pts - u, g), A.dts = se(A.dts - u, g), A.dts < d[y > 0 ? y - 1 : y].dts && (b = !0)
                                }
                                b && d.sort((function (e, t) {
                                    var n = e.dts - t.dts, r = e.pts - t.pts;
                                    return n || r
                                })), o = d[0].dts;
                                var E = d[d.length - 1].dts - o,
                                    T = E ? Math.round(E / (p - 1)) : h || e.inputTimeScale / 30;
                                if (n) {
                                    var w = o - g, S = w > T, x = w < -1;
                                    if ((S || x) && (S ? f.logger.warn("AVC: " + ne(w, !0) + " ms (" + w + "dts) hole between fragments detected, filling it") : f.logger.warn("AVC: " + ne(-w, !0) + " ms (" + w + "dts) overlapping between fragments detected"), !x || g > d[0].pts)) {
                                        o = g;
                                        var k = d[0].pts - w;
                                        d[0].dts = o, d[0].pts = k, f.logger.log("Video: First PTS/DTS adjusted: " + ne(k, !0) + "/" + ne(o, !0) + ", delta: " + ne(w, !0) + " ms")
                                    }
                                }
                                o = Math.max(0, o);
                                for (var C = 0, L = 0, R = 0; R < p; R++) {
                                    for (var P = d[R], I = P.units, M = I.length, D = 0, O = 0; O < M; O++) D += I[O].data.length;
                                    L += D, C += M, P.length = D, P.dts = Math.max(P.dts, o), _ = Math.min(P.pts, _), v = Math.max(P.pts, v)
                                }
                                s = d[p - 1].dts;
                                var B, N = L + 4 * C + 8;
                                try {
                                    B = new Uint8Array(N)
                                } catch (e) {
                                    return void this.observer.emit(r.Events.ERROR, r.Events.ERROR, {
                                        type: i.ErrorTypes.MUX_ERROR,
                                        details: i.ErrorDetails.REMUX_ALLOC_ERROR,
                                        fatal: !1,
                                        bytes: N,
                                        reason: "fail allocating video mdat " + N
                                    })
                                }
                                var F = new DataView(B.buffer);
                                F.setUint32(0, N), B.set(ee.types.mdat, 4);
                                for (var U = !1, H = Number.POSITIVE_INFINITY, Y = Number.POSITIVE_INFINITY, G = Number.NEGATIVE_INFINITY, V = Number.NEGATIVE_INFINITY, K = 0; K < p; K++) {
                                    for (var z = d[K], j = z.units, Q = 0, W = 0, q = j.length; W < q; W++) {
                                        var X = j[W], J = X.data, $ = X.data.byteLength;
                                        F.setUint32(m, $), m += 4, B.set(J, m), m += $, Q += 4 + $
                                    }
                                    var Z = void 0;
                                    if (K < p - 1) h = d[K + 1].dts - z.dts, Z = d[K + 1].pts - z.pts; else {
                                        var te = this.config, oe = K > 0 ? z.dts - d[K - 1].dts : T;
                                        if (Z = K > 0 ? z.pts - d[K - 1].pts : T, te.stretchShortVideoTrack && null !== this.nextAudioPts) {
                                            var le = Math.floor(te.maxBufferHole * l),
                                                de = (a ? _ + a * l : this.nextAudioPts) - z.pts;
                                            de > le ? ((h = de - oe) < 0 ? h = oe : U = !0, f.logger.log("[mp4-remuxer]: It is approximately " + de / 90 + " ms to the next segment; using duration " + h / 90 + " ms for the last video frame.")) : h = oe
                                        } else h = oe
                                    }
                                    var pe = Math.round(z.pts - z.dts);
                                    H = Math.min(H, h), G = Math.max(G, h), Y = Math.min(Y, Z), V = Math.max(V, Z), c.push(new ce(z.key, h, Q, pe))
                                }
                                if (c.length) if (ie) {
                                    if (ie < 70) {
                                        var ue = c[0].flags;
                                        ue.dependsOn = 2, ue.isNonSync = 0
                                    }
                                } else if (ae && V - Y < G - H && T / G < .025 && 0 === c[0].cts) {
                                    f.logger.warn("Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration.");
                                    for (var ge = o, me = 0, fe = c.length; me < fe; me++) {
                                        var he = ge + c[me].duration, _e = ge + c[me].cts;
                                        if (me < fe - 1) {
                                            var ve = he + c[me + 1].cts;
                                            c[me].duration = ve - _e
                                        } else c[me].duration = me ? c[me - 1].duration : T;
                                        c[me].cts = 0, ge = he
                                    }
                                }
                                h = U || !h ? T : h, this.nextAvcDts = g = s + h, this.videoSampleDuration = h, this.isVideoContiguous = !0;
                                var be = {
                                    data1: ee.moof(e.sequenceNumber++, o, re({}, e, {samples: c})),
                                    data2: B,
                                    startPTS: _ / l,
                                    endPTS: (v + h) / l,
                                    startDTS: o / l,
                                    endDTS: g / l,
                                    type: "video",
                                    hasAudio: !1,
                                    hasVideo: !0,
                                    nb: c.length,
                                    dropped: e.dropped
                                };
                                return e.samples = [], e.dropped = 0, be
                            }, t.remuxAudio = function (e, t, n, a, o) {
                                var s = e.inputTimeScale, l = s / (e.samplerate ? e.samplerate : s),
                                    d = "aac" === e.segmentCodec ? 1024 : 1152, c = d * l, p = this._initPTS,
                                    u = "mp3" === e.segmentCodec && this.typeSupported.mpeg, g = [], m = void 0 !== o,
                                    h = e.samples, _ = u ? 0 : 8, v = this.nextAudioPts || -1, b = t * s;
                                if (this.isAudioContiguous = n = n || h.length && v > 0 && (a && Math.abs(b - v) < 9e3 || Math.abs(se(h[0].pts - p, b) - v) < 20 * c), h.forEach((function (e) {
                                    e.pts = se(e.pts - p, b)
                                })), !n || v < 0) {
                                    if (!(h = h.filter((function (e) {
                                        return e.pts >= 0
                                    }))).length) return;
                                    v = 0 === o ? 0 : a && !m ? Math.max(0, b) : h[0].pts
                                }
                                if ("aac" === e.segmentCodec) for (var y = this.config.maxAudioFramesDrift, A = 0, E = v; A < h.length; A++) {
                                    var T = h[A], w = T.pts, S = w - E, x = Math.abs(1e3 * S / s);
                                    if (S <= -y * c && m) 0 === A && (f.logger.warn("Audio frame @ " + (w / s).toFixed(3) + "s overlaps nextAudioPts by " + Math.round(1e3 * S / s) + " ms."), this.nextAudioPts = v = E = w); else if (S >= y * c && x < 1e4 && m) {
                                        var k = Math.round(S / c);
                                        (E = w - k * c) < 0 && (k--, E += c), 0 === A && (this.nextAudioPts = v = E), f.logger.warn("[mp4-remuxer]: Injecting " + k + " audio frame @ " + (E / s).toFixed(3) + "s due to " + Math.round(1e3 * S / s) + " ms gap.");
                                        for (var C = 0; C < k; C++) {
                                            var L = Math.max(E, 0),
                                                R = J.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                                            R || (f.logger.log("[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead."), R = T.unit.subarray()), h.splice(A, 0, {
                                                unit: R,
                                                pts: L
                                            }), E += c, A++
                                        }
                                    }
                                    T.pts = E, E += c
                                }
                                for (var P, I = null, M = null, D = 0, O = h.length; O--;) D += h[O].unit.byteLength;
                                for (var B = 0, N = h.length; B < N; B++) {
                                    var F = h[B], U = F.unit, H = F.pts;
                                    if (null !== M) g[B - 1].duration = Math.round((H - M) / l); else {
                                        if (n && "aac" === e.segmentCodec && (H = v), I = H, !(D > 0)) return;
                                        D += _;
                                        try {
                                            P = new Uint8Array(D)
                                        } catch (e) {
                                            return void this.observer.emit(r.Events.ERROR, r.Events.ERROR, {
                                                type: i.ErrorTypes.MUX_ERROR,
                                                details: i.ErrorDetails.REMUX_ALLOC_ERROR,
                                                fatal: !1,
                                                bytes: D,
                                                reason: "fail allocating audio mdat " + D
                                            })
                                        }
                                        u || (new DataView(P.buffer).setUint32(0, D), P.set(ee.types.mdat, 4))
                                    }
                                    P.set(U, _);
                                    var Y = U.byteLength;
                                    _ += Y, g.push(new ce(!0, d, Y, 0)), M = H
                                }
                                var G = g.length;
                                if (G) {
                                    var V = g[g.length - 1];
                                    this.nextAudioPts = v = M + l * V.duration;
                                    var K = u ? new Uint8Array(0) : ee.moof(e.sequenceNumber++, I / l, re({}, e, {samples: g}));
                                    e.samples = [];
                                    var z = I / s, j = v / s, Q = {
                                        data1: K,
                                        data2: P,
                                        startPTS: z,
                                        endPTS: j,
                                        startDTS: z,
                                        endDTS: j,
                                        type: "audio",
                                        hasAudio: !0,
                                        hasVideo: !1,
                                        nb: G
                                    };
                                    return this.isAudioContiguous = !0, Q
                                }
                            }, t.remuxEmptyAudio = function (e, t, n, r) {
                                var i = e.inputTimeScale, a = i / (e.samplerate ? e.samplerate : i),
                                    o = this.nextAudioPts, s = (null !== o ? o : r.startDTS * i) + this._initDTS,
                                    l = r.endDTS * i + this._initDTS, d = 1024 * a, c = Math.ceil((l - s) / d),
                                    p = J.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                                if (f.logger.warn("[mp4-remuxer]: remux empty Audio"), p) {
                                    for (var u = [], g = 0; g < c; g++) {
                                        var m = s + g * d;
                                        u.push({unit: p, pts: m, dts: m})
                                    }
                                    return e.samples = u, this.remuxAudio(e, t, n, !1)
                                }
                                f.logger.trace("[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec")
                            }, e
                        }();

                        function se(e, t) {
                            var n;
                            if (null === t) return e;
                            for (n = t < e ? -8589934592 : 8589934592; Math.abs(e - t) > 4294967296;) e += n;
                            return e
                        }

                        function le(e, t, n, r) {
                            var i = e.samples.length;
                            if (i) {
                                for (var a = e.inputTimeScale, o = 0; o < i; o++) {
                                    var s = e.samples[o];
                                    s.pts = se(s.pts - n, t * a) / a, s.dts = se(s.dts - r, t * a) / a
                                }
                                var l = e.samples;
                                return e.samples = [], {samples: l}
                            }
                        }

                        function de(e, t, n) {
                            var r = e.samples.length;
                            if (r) {
                                for (var i = e.inputTimeScale, a = 0; a < r; a++) {
                                    var o = e.samples[a];
                                    o.pts = se(o.pts - n, t * i) / i
                                }
                                e.samples.sort((function (e, t) {
                                    return e.pts - t.pts
                                }));
                                var s = e.samples;
                                return e.samples = [], {samples: s}
                            }
                        }

                        var ce = function (e, t, n, r) {
                            this.size = void 0, this.duration = void 0, this.cts = void 0, this.flags = void 0, this.duration = t, this.size = n, this.cts = r, this.flags = new pe(e)
                        }, pe = function (e) {
                            this.isLeading = 0, this.isDependedOn = 0, this.hasRedundancy = 0, this.degradPrio = 0, this.dependsOn = 1, this.isNonSync = 1, this.dependsOn = e ? 2 : 1, this.isNonSync = e ? 0 : 1
                        }, ue = n(923);

                        function ge(e, t) {
                            var n = null == e ? void 0 : e.codec;
                            return n && n.length > 4 ? n : "hvc1" === n || "hev1" === n ? "hvc1.1.c.L120.90" : "av01" === n ? "av01.0.04M.08" : "avc1" === n || t === ue.ElementaryStreamTypes.VIDEO ? "avc1.42e01e" : "mp4a.40.5"
                        }

                        const me = function () {
                            function e() {
                                this.emitInitSegment = !1, this.audioCodec = void 0, this.videoCodec = void 0, this.initData = void 0, this.initPTS = void 0, this.initTracks = void 0, this.lastEndTime = null
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                            }, t.resetTimeStamp = function (e) {
                                this.initPTS = e, this.lastEndTime = null
                            }, t.resetNextTimestamp = function () {
                                this.lastEndTime = null
                            }, t.resetInitSegment = function (e, t, n, r) {
                                this.audioCodec = t, this.videoCodec = n, this.generateInitSegment((0, c.patchEncyptionData)(e, r)), this.emitInitSegment = !0
                            }, t.generateInitSegment = function (e) {
                                var t = this.audioCodec, n = this.videoCodec;
                                if (!e || !e.byteLength) return this.initTracks = void 0, void (this.initData = void 0);
                                var r = this.initData = (0, c.parseInitSegment)(e);
                                t || (t = ge(r.audio, ue.ElementaryStreamTypes.AUDIO)), n || (n = ge(r.video, ue.ElementaryStreamTypes.VIDEO));
                                var i = {};
                                r.audio && r.video ? i.audiovideo = {
                                    container: "video/mp4",
                                    codec: t + "," + n,
                                    initSegment: e,
                                    id: "main"
                                } : r.audio ? i.audio = {
                                    container: "audio/mp4",
                                    codec: t,
                                    initSegment: e,
                                    id: "audio"
                                } : r.video ? i.video = {
                                    container: "video/mp4",
                                    codec: n,
                                    initSegment: e,
                                    id: "main"
                                } : f.logger.warn("[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes."), this.initTracks = i
                            }, t.remux = function (e, t, n, r, i) {
                                var a, s = this.initPTS, l = this.lastEndTime,
                                    d = {audio: void 0, video: void 0, text: r, id3: n, initSegment: void 0};
                                (0, o.isFiniteNumber)(l) || (l = this.lastEndTime = i || 0);
                                var p = t.samples;
                                if (!p || !p.length) return d;
                                var u = {initPTS: void 0, timescale: 1}, g = this.initData;
                                if (g && g.length || (this.generateInitSegment(p), g = this.initData), !g || !g.length) return f.logger.warn("[passthrough-remuxer.ts]: Failed to generate initSegment."), d;
                                this.emitInitSegment && (u.tracks = this.initTracks, this.emitInitSegment = !1);
                                var m = (0, c.getStartDTS)(g, p);
                                (0, o.isFiniteNumber)(s) || (this.initPTS = u.initPTS = s = m - i);
                                var h = (0, c.getDuration)(p, g), _ = e ? m - s : l, v = _ + h;
                                (0, c.offsetStartDTS)(g, p, s), h > 0 ? this.lastEndTime = v : (f.logger.warn("Duration parsed from mp4 should be greater than zero"), this.resetNextTimestamp());
                                var b = !!g.audio, y = !!g.video, A = "";
                                b && (A += "audio"), y && (A += "video");
                                var E = {
                                    data1: p,
                                    startPTS: _,
                                    startDTS: _,
                                    endPTS: v,
                                    endDTS: v,
                                    type: A,
                                    hasAudio: b,
                                    hasVideo: y,
                                    nb: 1,
                                    dropped: 0
                                };
                                d.audio = "audio" === E.type ? E : void 0, d.video = "audio" !== E.type ? E : void 0, d.initSegment = u;
                                var T = null != (a = this.initPTS) ? a : 0;
                                return d.id3 = le(n, i, T, T), r.samples.length && (d.text = de(r, i, T)), d
                            }, e
                        }();
                        var fe;
                        try {
                            fe = self.performance.now.bind(self.performance)
                        } catch (e) {
                            f.logger.debug("Unable to use Performance API on this environment"), fe = self.Date.now
                        }
                        var he = [{demux: k, remux: me}, {demux: W, remux: oe}, {demux: S, remux: oe}, {
                            demux: X,
                            remux: oe
                        }], _e = function () {
                            function e(e, t, n, r, i) {
                                this.async = !1, this.observer = void 0, this.typeSupported = void 0, this.config = void 0, this.vendor = void 0, this.id = void 0, this.demuxer = void 0, this.remuxer = void 0, this.decrypter = void 0, this.probe = void 0, this.decryptionPromise = null, this.transmuxConfig = void 0, this.currentTransmuxState = void 0, this.observer = e, this.typeSupported = t, this.config = n, this.vendor = r, this.id = i
                            }

                            var t = e.prototype;
                            return t.configure = function (e) {
                                this.transmuxConfig = e, this.decrypter && this.decrypter.reset()
                            }, t.push = function (e, t, n, r) {
                                var i = this, a = n.transmuxing;
                                a.executeStart = fe();
                                var o = new Uint8Array(e), s = this.currentTransmuxState, l = this.transmuxConfig;
                                r && (this.currentTransmuxState = r);
                                var d = r || s, c = d.contiguous, p = d.discontinuity, u = d.trackSwitch,
                                    g = d.accurateTimeOffset, m = d.timeOffset, f = d.initSegmentChange,
                                    h = l.audioCodec, _ = l.videoCodec, v = l.defaultInitPts, b = l.duration,
                                    y = l.initSegmentData, A = function (e, t) {
                                        var n = null;
                                        return e.byteLength > 0 && null != t && null != t.key && null !== t.iv && null != t.method && (n = t), n
                                    }(o, t);
                                if (A && "AES-128" === A.method) {
                                    var E = this.getDecrypter();
                                    if (!E.isSync()) return this.decryptionPromise = E.webCryptoDecrypt(o, A.key.buffer, A.iv.buffer).then((function (e) {
                                        var t = i.push(e, null, n);
                                        return i.decryptionPromise = null, t
                                    })), this.decryptionPromise;
                                    var T = E.softwareDecrypt(o, A.key.buffer, A.iv.buffer);
                                    if (n.part > -1 && (T = E.flush()), !T) return a.executeEnd = fe(), ve(n);
                                    o = new Uint8Array(T)
                                }
                                var w = this.needsProbing(p, u);
                                w && this.configureTransmuxer(o), (p || u || f || w) && this.resetInitSegment(y, h, _, b, t), (p || f || w) && this.resetInitialTimestamp(v), c || this.resetContiguity();
                                var S = this.transmux(o, A, m, g, n), x = this.currentTransmuxState;
                                return x.contiguous = !0, x.discontinuity = !1, x.trackSwitch = !1, a.executeEnd = fe(), S
                            }, t.flush = function (e) {
                                var t = this, n = e.transmuxing;
                                n.executeStart = fe();
                                var a = this.decrypter, o = this.currentTransmuxState, s = this.decryptionPromise;
                                if (s) return s.then((function () {
                                    return t.flush(e)
                                }));
                                var l = [], d = o.timeOffset;
                                if (a) {
                                    var c = a.flush();
                                    c && l.push(this.push(c, null, e))
                                }
                                var p = this.demuxer, u = this.remuxer;
                                if (!p || !u) return this.observer.emit(r.Events.ERROR, r.Events.ERROR, {
                                    type: i.ErrorTypes.MEDIA_ERROR,
                                    details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                    fatal: !0,
                                    reason: "no demux matching with content found"
                                }), n.executeEnd = fe(), [ve(e)];
                                var g = p.flush(d);
                                return be(g) ? g.then((function (n) {
                                    return t.flushRemux(l, n, e), l
                                })) : (this.flushRemux(l, g, e), l)
                            }, t.flushRemux = function (e, t, n) {
                                var r = t.audioTrack, i = t.videoTrack, a = t.id3Track, o = t.textTrack,
                                    s = this.currentTransmuxState, l = s.accurateTimeOffset, d = s.timeOffset;
                                f.logger.log("[transmuxer.ts]: Flushed fragment " + n.sn + (n.part > -1 ? " p: " + n.part : "") + " of level " + n.level);
                                var c = this.remuxer.remux(r, i, a, o, d, l, !0, this.id);
                                e.push({remuxResult: c, chunkMeta: n}), n.transmuxing.executeEnd = fe()
                            }, t.resetInitialTimestamp = function (e) {
                                var t = this.demuxer, n = this.remuxer;
                                t && n && (t.resetTimeStamp(e), n.resetTimeStamp(e))
                            }, t.resetContiguity = function () {
                                var e = this.demuxer, t = this.remuxer;
                                e && t && (e.resetContiguity(), t.resetNextTimestamp())
                            }, t.resetInitSegment = function (e, t, n, r, i) {
                                var a = this.demuxer, o = this.remuxer;
                                a && o && (a.resetInitSegment(e, t, n, r), o.resetInitSegment(e, t, n, i))
                            }, t.destroy = function () {
                                this.demuxer && (this.demuxer.destroy(), this.demuxer = void 0), this.remuxer && (this.remuxer.destroy(), this.remuxer = void 0)
                            }, t.transmux = function (e, t, n, r, i) {
                                return t && "SAMPLE-AES" === t.method ? this.transmuxSampleAes(e, t, n, r, i) : this.transmuxUnencrypted(e, n, r, i)
                            }, t.transmuxUnencrypted = function (e, t, n, r) {
                                var i = this.demuxer.demux(e, t, !1, !this.config.progressive), a = i.audioTrack,
                                    o = i.videoTrack, s = i.id3Track, l = i.textTrack;
                                return {remuxResult: this.remuxer.remux(a, o, s, l, t, n, !1, this.id), chunkMeta: r}
                            }, t.transmuxSampleAes = function (e, t, n, r, i) {
                                var a = this;
                                return this.demuxer.demuxSampleAes(e, t, n).then((function (e) {
                                    return {
                                        remuxResult: a.remuxer.remux(e.audioTrack, e.videoTrack, e.id3Track, e.textTrack, n, r, !1, a.id),
                                        chunkMeta: i
                                    }
                                }))
                            }, t.configureTransmuxer = function (e) {
                                for (var t, n = this.config, r = this.observer, i = this.typeSupported, a = this.vendor, o = 0, s = he.length; o < s; o++) if (he[o].demux.probe(e)) {
                                    t = he[o];
                                    break
                                }
                                t || (f.logger.warn("Failed to find demuxer by probing frag, treating as mp4 passthrough"), t = {
                                    demux: k,
                                    remux: me
                                });
                                var l = this.demuxer, d = this.remuxer, c = t.remux, p = t.demux;
                                d && d instanceof c || (this.remuxer = new c(r, n, i, a)), l && l instanceof p || (this.demuxer = new p(r, n, i), this.probe = p.probe)
                            }, t.needsProbing = function (e, t) {
                                return !this.demuxer || !this.remuxer || e || t
                            }, t.getDecrypter = function () {
                                var e = this.decrypter;
                                return e || (e = this.decrypter = new a.default(this.config)), e
                            }, e
                        }(), ve = function (e) {
                            return {remuxResult: {}, chunkMeta: e}
                        };

                        function be(e) {
                            return "then" in e && e.then instanceof Function
                        }

                        var ye = function (e, t, n, r, i) {
                            this.audioCodec = void 0, this.videoCodec = void 0, this.initSegmentData = void 0, this.duration = void 0, this.defaultInitPts = void 0, this.audioCodec = e, this.videoCodec = t, this.initSegmentData = n, this.duration = r, this.defaultInitPts = i
                        }, Ae = function (e, t, n, r, i, a) {
                            this.discontinuity = void 0, this.contiguous = void 0, this.accurateTimeOffset = void 0, this.trackSwitch = void 0, this.timeOffset = void 0, this.initSegmentChange = void 0, this.discontinuity = e, this.contiguous = t, this.accurateTimeOffset = n, this.trackSwitch = r, this.timeOffset = i, this.initSegmentChange = a
                        }
                    }, 514: e => {
                        e.exports = void 0
                    }, 973: (e, t, n) => {
                        "use strict";
                        var r, i;
                        n.r(t), n.d(t, {ErrorDetails: () => i, ErrorTypes: () => r}), function (e) {
                            e.NETWORK_ERROR = "networkError", e.MEDIA_ERROR = "mediaError", e.KEY_SYSTEM_ERROR = "keySystemError", e.MUX_ERROR = "muxError", e.OTHER_ERROR = "otherError"
                        }(r || (r = {})), function (e) {
                            e.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys", e.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess", e.KEY_SYSTEM_NO_SESSION = "keySystemNoSession", e.KEY_SYSTEM_NO_CONFIGURED_LICENSE = "keySystemNoConfiguredLicense", e.KEY_SYSTEM_LICENSE_REQUEST_FAILED = "keySystemLicenseRequestFailed", e.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED = "keySystemServerCertificateRequestFailed", e.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED = "keySystemServerCertificateUpdateFailed", e.KEY_SYSTEM_SESSION_UPDATE_FAILED = "keySystemSessionUpdateFailed", e.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED = "keySystemStatusOutputRestricted", e.KEY_SYSTEM_STATUS_INTERNAL_ERROR = "keySystemStatusInternalError", e.MANIFEST_LOAD_ERROR = "manifestLoadError", e.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut", e.MANIFEST_PARSING_ERROR = "manifestParsingError", e.MANIFEST_INCOMPATIBLE_CODECS_ERROR = "manifestIncompatibleCodecsError", e.LEVEL_EMPTY_ERROR = "levelEmptyError", e.LEVEL_LOAD_ERROR = "levelLoadError", e.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut", e.LEVEL_SWITCH_ERROR = "levelSwitchError", e.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError", e.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut", e.SUBTITLE_LOAD_ERROR = "subtitleTrackLoadError", e.SUBTITLE_TRACK_LOAD_TIMEOUT = "subtitleTrackLoadTimeOut", e.FRAG_LOAD_ERROR = "fragLoadError", e.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut", e.FRAG_DECRYPT_ERROR = "fragDecryptError", e.FRAG_PARSING_ERROR = "fragParsingError", e.REMUX_ALLOC_ERROR = "remuxAllocError", e.KEY_LOAD_ERROR = "keyLoadError", e.KEY_LOAD_TIMEOUT = "keyLoadTimeOut", e.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError", e.BUFFER_INCOMPATIBLE_CODECS_ERROR = "bufferIncompatibleCodecsError", e.BUFFER_APPEND_ERROR = "bufferAppendError", e.BUFFER_APPENDING_ERROR = "bufferAppendingError", e.BUFFER_STALLED_ERROR = "bufferStalledError", e.BUFFER_FULL_ERROR = "bufferFullError", e.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole", e.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall", e.INTERNAL_EXCEPTION = "internalException", e.INTERNAL_ABORTED = "aborted", e.UNKNOWN = "unknown"
                        }(i || (i = {}))
                    }, 851: (e, t, n) => {
                        "use strict";
                        var r;
                        n.r(t), n.d(t, {Events: () => r}), function (e) {
                            e.MEDIA_ATTACHING = "hlsMediaAttaching", e.MEDIA_ATTACHED = "hlsMediaAttached", e.MEDIA_DETACHING = "hlsMediaDetaching", e.MEDIA_DETACHED = "hlsMediaDetached", e.BUFFER_RESET = "hlsBufferReset", e.BUFFER_CODECS = "hlsBufferCodecs", e.BUFFER_CREATED = "hlsBufferCreated", e.BUFFER_APPENDING = "hlsBufferAppending", e.BUFFER_APPENDED = "hlsBufferAppended", e.BUFFER_EOS = "hlsBufferEos", e.BUFFER_FLUSHING = "hlsBufferFlushing", e.BUFFER_FLUSHED = "hlsBufferFlushed", e.MANIFEST_LOADING = "hlsManifestLoading", e.MANIFEST_LOADED = "hlsManifestLoaded", e.MANIFEST_PARSED = "hlsManifestParsed", e.LEVEL_SWITCHING = "hlsLevelSwitching", e.LEVEL_SWITCHED = "hlsLevelSwitched", e.LEVEL_LOADING = "hlsLevelLoading", e.LEVEL_LOADED = "hlsLevelLoaded", e.LEVEL_UPDATED = "hlsLevelUpdated", e.LEVEL_PTS_UPDATED = "hlsLevelPtsUpdated", e.LEVELS_UPDATED = "hlsLevelsUpdated", e.AUDIO_TRACKS_UPDATED = "hlsAudioTracksUpdated", e.AUDIO_TRACK_SWITCHING = "hlsAudioTrackSwitching", e.AUDIO_TRACK_SWITCHED = "hlsAudioTrackSwitched", e.AUDIO_TRACK_LOADING = "hlsAudioTrackLoading", e.AUDIO_TRACK_LOADED = "hlsAudioTrackLoaded", e.SUBTITLE_TRACKS_UPDATED = "hlsSubtitleTracksUpdated", e.SUBTITLE_TRACKS_CLEARED = "hlsSubtitleTracksCleared", e.SUBTITLE_TRACK_SWITCH = "hlsSubtitleTrackSwitch", e.SUBTITLE_TRACK_LOADING = "hlsSubtitleTrackLoading", e.SUBTITLE_TRACK_LOADED = "hlsSubtitleTrackLoaded", e.SUBTITLE_FRAG_PROCESSED = "hlsSubtitleFragProcessed", e.CUES_PARSED = "hlsCuesParsed", e.NON_NATIVE_TEXT_TRACKS_FOUND = "hlsNonNativeTextTracksFound", e.INIT_PTS_FOUND = "hlsInitPtsFound", e.FRAG_LOADING = "hlsFragLoading", e.FRAG_LOAD_EMERGENCY_ABORTED = "hlsFragLoadEmergencyAborted", e.FRAG_LOADED = "hlsFragLoaded", e.FRAG_DECRYPTED = "hlsFragDecrypted", e.FRAG_PARSING_INIT_SEGMENT = "hlsFragParsingInitSegment", e.FRAG_PARSING_USERDATA = "hlsFragParsingUserdata", e.FRAG_PARSING_METADATA = "hlsFragParsingMetadata", e.FRAG_PARSED = "hlsFragParsed", e.FRAG_BUFFERED = "hlsFragBuffered", e.FRAG_CHANGED = "hlsFragChanged", e.FPS_DROP = "hlsFpsDrop", e.FPS_DROP_LEVEL_CAPPING = "hlsFpsDropLevelCapping", e.ERROR = "hlsError", e.DESTROYING = "hlsDestroying", e.KEY_LOADING = "hlsKeyLoading", e.KEY_LOADED = "hlsKeyLoaded", e.LIVE_BACK_BUFFER_REACHED = "hlsLiveBackBufferReached", e.BACK_BUFFER_REACHED = "hlsBackBufferReached"
                        }(r || (r = {}))
                    }, 53: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {default: () => Ft});
                        var r, i = n(945), a = n(965), o = n(851), s = n(973), l = n(93), d = /^(\d+)x(\d+)$/,
                            c = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g, p = function () {
                                function e(t) {
                                    for (var n in "string" == typeof t && (t = e.parseAttrList(t)), t) t.hasOwnProperty(n) && (this[n] = t[n])
                                }

                                var t = e.prototype;
                                return t.decimalInteger = function (e) {
                                    var t = parseInt(this[e], 10);
                                    return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t
                                }, t.hexadecimalInteger = function (e) {
                                    if (this[e]) {
                                        var t = (this[e] || "0x").slice(2);
                                        t = (1 & t.length ? "0" : "") + t;
                                        for (var n = new Uint8Array(t.length / 2), r = 0; r < t.length / 2; r++) n[r] = parseInt(t.slice(2 * r, 2 * r + 2), 16);
                                        return n
                                    }
                                    return null
                                }, t.hexadecimalIntegerAsNumber = function (e) {
                                    var t = parseInt(this[e], 16);
                                    return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t
                                }, t.decimalFloatingPoint = function (e) {
                                    return parseFloat(this[e])
                                }, t.optionalFloat = function (e, t) {
                                    var n = this[e];
                                    return n ? parseFloat(n) : t
                                }, t.enumeratedString = function (e) {
                                    return this[e]
                                }, t.bool = function (e) {
                                    return "YES" === this[e]
                                }, t.decimalResolution = function (e) {
                                    var t = d.exec(this[e]);
                                    if (null !== t) return {width: parseInt(t[1], 10), height: parseInt(t[2], 10)}
                                }, e.parseAttrList = function (e) {
                                    var t, n = {};
                                    for (c.lastIndex = 0; null !== (t = c.exec(e));) {
                                        var r = t[2];
                                        0 === r.indexOf('"') && r.lastIndexOf('"') === r.length - 1 && (r = r.slice(1, -1)), n[t[1]] = r
                                    }
                                    return n
                                }, e
                            }();

                        function u() {
                            return (u = Object.assign ? Object.assign.bind() : function (e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                                }
                                return e
                            }).apply(this, arguments)
                        }

                        !function (e) {
                            e.ID = "ID", e.CLASS = "CLASS", e.START_DATE = "START-DATE", e.DURATION = "DURATION", e.END_DATE = "END-DATE", e.END_ON_NEXT = "END-ON-NEXT", e.PLANNED_DURATION = "PLANNED-DURATION", e.SCTE35_OUT = "SCTE35-OUT", e.SCTE35_IN = "SCTE35-IN"
                        }(r || (r = {}));
                        var g, m, f, h = function () {
                            function e(e, t) {
                                if (this.attr = void 0, this._startDate = void 0, this._endDate = void 0, this._badValueForSameId = void 0, t) {
                                    var n = t.attr;
                                    for (var i in n) if (Object.prototype.hasOwnProperty.call(e, i) && e[i] !== n[i]) {
                                        l.logger.warn('DATERANGE tag attribute: "' + i + '" does not match for tags with ID: "' + e.ID + '"'), this._badValueForSameId = i;
                                        break
                                    }
                                    e = u(new p({}), n, e)
                                }
                                if (this.attr = e, this._startDate = new Date(e[r.START_DATE]), r.END_DATE in this.attr) {
                                    var o = new Date(this.attr[r.END_DATE]);
                                    (0, a.isFiniteNumber)(o.getTime()) && (this._endDate = o)
                                }
                            }

                            var t, n;
                            return t = e, (n = [{
                                key: "id", get: function () {
                                    return this.attr.ID
                                }
                            }, {
                                key: "class", get: function () {
                                    return this.attr.CLASS
                                }
                            }, {
                                key: "startDate", get: function () {
                                    return this._startDate
                                }
                            }, {
                                key: "endDate", get: function () {
                                    if (this._endDate) return this._endDate;
                                    var e = this.duration;
                                    return null !== e ? new Date(this._startDate.getTime() + 1e3 * e) : null
                                }
                            }, {
                                key: "duration", get: function () {
                                    if (r.DURATION in this.attr) {
                                        var e = this.attr.decimalFloatingPoint(r.DURATION);
                                        if ((0, a.isFiniteNumber)(e)) return e
                                    } else if (this._endDate) return (this._endDate.getTime() - this._startDate.getTime()) / 1e3;
                                    return null
                                }
                            }, {
                                key: "plannedDuration", get: function () {
                                    return r.PLANNED_DURATION in this.attr ? this.attr.decimalFloatingPoint(r.PLANNED_DURATION) : null
                                }
                            }, {
                                key: "endOnNext", get: function () {
                                    return this.attr.bool(r.END_ON_NEXT)
                                }
                            }, {
                                key: "isValid", get: function () {
                                    return !!this.id && !this._badValueForSameId && (0, a.isFiniteNumber)(this.startDate.getTime()) && (null === this.duration || this.duration >= 0) && (!this.endOnNext || !!this.class)
                                }
                            }]) && function (e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                        if ("object" != typeof e || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var r = n.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(e)
                                    }(r.key)) ? i : String(i), r)
                                }
                                var i
                            }(t.prototype, n), Object.defineProperty(t, "prototype", {writable: !1}), e
                        }(), _ = n(923), v = function () {
                            function e(e) {
                                this.PTSKnown = !1, this.alignedSliding = !1, this.averagetargetduration = void 0, this.endCC = 0, this.endSN = 0, this.fragments = void 0, this.fragmentHint = void 0, this.partList = null, this.dateRanges = void 0, this.live = !0, this.ageHeader = 0, this.advancedDateTime = void 0, this.updated = !0, this.advanced = !0, this.availabilityDelay = void 0, this.misses = 0, this.startCC = 0, this.startSN = 0, this.startTimeOffset = null, this.targetduration = 0, this.totalduration = 0, this.type = null, this.url = void 0, this.m3u8 = "", this.version = null, this.canBlockReload = !1, this.canSkipUntil = 0, this.canSkipDateRanges = !1, this.skippedSegments = 0, this.recentlyRemovedDateranges = void 0, this.partHoldBack = 0, this.holdBack = 0, this.partTarget = 0, this.preloadHint = void 0, this.renditionReports = void 0, this.tuneInGoal = 0, this.deltaUpdateFailed = void 0, this.driftStartTime = 0, this.driftEndTime = 0, this.driftStart = 0, this.driftEnd = 0, this.encryptedFragments = void 0, this.fragments = [], this.encryptedFragments = [], this.dateRanges = {}, this.url = e
                            }

                            var t, n;
                            return e.prototype.reloaded = function (e) {
                                if (!e) return this.advanced = !0, void (this.updated = !0);
                                var t = this.lastPartSn - e.lastPartSn, n = this.lastPartIndex - e.lastPartIndex;
                                this.updated = this.endSN !== e.endSN || !!n || !!t, this.advanced = this.endSN > e.endSN || t > 0 || 0 === t && n > 0, this.updated || this.advanced ? this.misses = Math.floor(.6 * e.misses) : this.misses = e.misses + 1, this.availabilityDelay = e.availabilityDelay
                            }, t = e, (n = [{
                                key: "hasProgramDateTime", get: function () {
                                    return !!this.fragments.length && (0, a.isFiniteNumber)(this.fragments[this.fragments.length - 1].programDateTime)
                                }
                            }, {
                                key: "levelTargetDuration", get: function () {
                                    return this.averagetargetduration || this.targetduration || 10
                                }
                            }, {
                                key: "drift", get: function () {
                                    var e = this.driftEndTime - this.driftStartTime;
                                    return e > 0 ? 1e3 * (this.driftEnd - this.driftStart) / e : 1
                                }
                            }, {
                                key: "edge", get: function () {
                                    return this.partEnd || this.fragmentEnd
                                }
                            }, {
                                key: "partEnd", get: function () {
                                    var e;
                                    return null !== (e = this.partList) && void 0 !== e && e.length ? this.partList[this.partList.length - 1].end : this.fragmentEnd
                                }
                            }, {
                                key: "fragmentEnd", get: function () {
                                    var e;
                                    return null !== (e = this.fragments) && void 0 !== e && e.length ? this.fragments[this.fragments.length - 1].end : 0
                                }
                            }, {
                                key: "age", get: function () {
                                    return this.advancedDateTime ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3 : 0
                                }
                            }, {
                                key: "lastPartIndex", get: function () {
                                    var e;
                                    return null !== (e = this.partList) && void 0 !== e && e.length ? this.partList[this.partList.length - 1].index : -1
                                }
                            }, {
                                key: "lastPartSn", get: function () {
                                    var e;
                                    return null !== (e = this.partList) && void 0 !== e && e.length ? this.partList[this.partList.length - 1].fragment.sn : this.endSN
                                }
                            }]) && function (e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                        if ("object" != typeof e || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var r = n.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(e)
                                    }(r.key)) ? i : String(i), r)
                                }
                                var i
                            }(t.prototype, n), Object.defineProperty(t, "prototype", {writable: !1}), e
                        }();

                        function b(e) {
                            return Uint8Array.from(atob(e), (function (e) {
                                return e.charCodeAt(0)
                            }))
                        }

                        !function (e) {
                            e.CLEARKEY = "org.w3.clearkey", e.FAIRPLAY = "com.apple.fps", e.PLAYREADY = "com.microsoft.playready", e.WIDEVINE = "com.widevine.alpha"
                        }(g || (g = {})), function (e) {
                            e.CLEARKEY = "org.w3.clearkey", e.FAIRPLAY = "com.apple.streamingkeydelivery", e.PLAYREADY = "com.microsoft.playready", e.WIDEVINE = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed"
                        }(m || (m = {})), function (e) {
                            e.WIDEVINE = "edef8ba979d64acea3c827dcd51d21ed"
                        }(f || (f = {}));
                        var y = "undefined" != typeof self && self.navigator && self.navigator.requestMediaKeySystemAccess ? self.navigator.requestMediaKeySystemAccess.bind(self.navigator) : null,
                            A = n(571), E = {}, T = function () {
                                function e(e, t, n, r, i) {
                                    void 0 === r && (r = [1]), void 0 === i && (i = null), this.uri = void 0, this.method = void 0, this.keyFormat = void 0, this.keyFormatVersions = void 0, this.encrypted = void 0, this.isCommonEncryption = void 0, this.iv = null, this.key = null, this.keyId = null, this.pssh = null, this.method = e, this.uri = t, this.keyFormat = n, this.keyFormatVersions = r, this.iv = i, this.encrypted = !!e && "NONE" !== e, this.isCommonEncryption = this.encrypted && "AES-128" !== e
                                }

                                e.clearKeyUriToKeyIdMap = function () {
                                    E = {}
                                };
                                var t = e.prototype;
                                return t.isSupported = function () {
                                    if (this.method) {
                                        if ("AES-128" === this.method || "NONE" === this.method) return !0;
                                        switch (this.keyFormat) {
                                            case"identity":
                                                return "SAMPLE-AES" === this.method;
                                            case m.FAIRPLAY:
                                            case m.WIDEVINE:
                                            case m.PLAYREADY:
                                            case m.CLEARKEY:
                                                return -1 !== ["ISO-23001-7", "SAMPLE-AES", "SAMPLE-AES-CENC", "SAMPLE-AES-CTR"].indexOf(this.method)
                                        }
                                    }
                                    return !1
                                }, t.getDecryptData = function (t) {
                                    if (!this.encrypted || !this.uri) return null;
                                    if ("AES-128" === this.method && this.uri && !this.iv) {
                                        "number" != typeof t && ("AES-128" !== this.method || this.iv || l.logger.warn('missing IV for initialization segment with method="' + this.method + '" - compliance issue'), t = 0);
                                        var n = function (e) {
                                            for (var t = new Uint8Array(16), n = 12; n < 16; n++) t[n] = e >> 8 * (15 - n) & 255;
                                            return t
                                        }(t);
                                        return new e(this.method, this.uri, "identity", this.keyFormatVersions, n)
                                    }
                                    var r = function (e) {
                                        var t, n, r = e.split(":"), i = null;
                                        if ("data" === r[0] && 2 === r.length) {
                                            var a = r[1].split(";"), o = a[a.length - 1].split(",");
                                            if (2 === o.length) {
                                                var s = "base64" === o[0], l = o[1];
                                                s ? (a.splice(-1, 1), i = b(l)) : (t = function (e) {
                                                    return Uint8Array.from(unescape(encodeURIComponent(e)), (function (e) {
                                                        return e.charCodeAt(0)
                                                    }))
                                                }(l).subarray(0, 16), (n = new Uint8Array(16)).set(t, 16 - t.length), i = n)
                                            }
                                        }
                                        return i
                                    }(this.uri);
                                    if (r) switch (this.keyFormat) {
                                        case m.WIDEVINE:
                                            this.pssh = r, r.length >= 22 && (this.keyId = r.subarray(r.length - 22, r.length - 6));
                                            break;
                                        case m.PLAYREADY:
                                            var i = new Uint8Array([154, 4, 240, 121, 152, 64, 66, 134, 171, 146, 230, 91, 224, 136, 95, 149]);
                                            this.pssh = (0, A.mp4pssh)(i, null, r);
                                            var a = new Uint16Array(r.buffer, r.byteOffset, r.byteLength / 2),
                                                o = String.fromCharCode.apply(null, Array.from(a)),
                                                s = o.substring(o.indexOf("<"), o.length),
                                                d = (new DOMParser).parseFromString(s, "text/xml").getElementsByTagName("KID")[0];
                                            if (d) {
                                                var c = d.childNodes[0] ? d.childNodes[0].nodeValue : d.getAttribute("VALUE");
                                                if (c) {
                                                    var p = b(c).subarray(0, 16);
                                                    !function (e) {
                                                        var t = function (e, t, n) {
                                                            var r = e[t];
                                                            e[t] = e[n], e[n] = r
                                                        };
                                                        t(e, 0, 3), t(e, 1, 2), t(e, 4, 5), t(e, 6, 7)
                                                    }(p), this.keyId = p
                                                }
                                            }
                                            break;
                                        default:
                                            var u = r.subarray(0, 16);
                                            if (16 !== u.length) {
                                                var g = new Uint8Array(16);
                                                g.set(u, 16 - u.length), u = g
                                            }
                                            this.keyId = u
                                    }
                                    if (!this.keyId || 16 !== this.keyId.byteLength) {
                                        var f = E[this.uri];
                                        if (!f) {
                                            var h = Object.keys(E).length % Number.MAX_SAFE_INTEGER;
                                            f = new Uint8Array(16), new DataView(f.buffer, 12, 4).setUint32(0, h), E[this.uri] = f
                                        }
                                        this.keyId = f
                                    }
                                    return this
                                }, e
                            }(), w = {
                                audio: {
                                    a3ds: !0,
                                    "ac-3": !0,
                                    "ac-4": !0,
                                    alac: !0,
                                    alaw: !0,
                                    dra1: !0,
                                    "dts+": !0,
                                    "dts-": !0,
                                    dtsc: !0,
                                    dtse: !0,
                                    dtsh: !0,
                                    "ec-3": !0,
                                    enca: !0,
                                    g719: !0,
                                    g726: !0,
                                    m4ae: !0,
                                    mha1: !0,
                                    mha2: !0,
                                    mhm1: !0,
                                    mhm2: !0,
                                    mlpa: !0,
                                    mp4a: !0,
                                    "raw ": !0,
                                    Opus: !0,
                                    opus: !0,
                                    samr: !0,
                                    sawb: !0,
                                    sawp: !0,
                                    sevc: !0,
                                    sqcp: !0,
                                    ssmv: !0,
                                    twos: !0,
                                    ulaw: !0
                                },
                                video: {
                                    avc1: !0,
                                    avc2: !0,
                                    avc3: !0,
                                    avc4: !0,
                                    avcp: !0,
                                    av01: !0,
                                    drac: !0,
                                    dva1: !0,
                                    dvav: !0,
                                    dvh1: !0,
                                    dvhe: !0,
                                    encv: !0,
                                    hev1: !0,
                                    hvc1: !0,
                                    mjp2: !0,
                                    mp4v: !0,
                                    mvc1: !0,
                                    mvc2: !0,
                                    mvc3: !0,
                                    mvc4: !0,
                                    resv: !0,
                                    rv60: !0,
                                    s263: !0,
                                    svc1: !0,
                                    svc2: !0,
                                    "vc-1": !0,
                                    vp08: !0,
                                    vp09: !0
                                },
                                text: {stpp: !0, wvtt: !0}
                            };

                        function S(e, t) {
                            return MediaSource.isTypeSupported((t || "video") + '/mp4;codecs="' + e + '"')
                        }

                        function x() {
                            return (x = Object.assign ? Object.assign.bind() : function (e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                                }
                                return e
                            }).apply(this, arguments)
                        }

                        var k = /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-SESSION-DATA:([^\r\n]*)[\r\n]+|#EXT-X-SESSION-KEY:([^\n\r]*)[\r\n]+/g,
                            C = /#EXT-X-MEDIA:(.*)/g,
                            L = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /(?!#) *(\S[\S ]*)/.source, /#EXT-X-BYTERANGE:*(.+)/.source, /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /#.*/.source].join("|"), "g"),
                            R = new RegExp([/#(EXTM3U)/.source, /#EXT-X-(DATERANGE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/.source, /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/.source, /#EXT-X-(DISCONTINUITY|ENDLIST|GAP)/.source, /(#)([^:]*):(.*)/.source, /(#)(.*)(?:.*)\r?\n?/.source].join("|")),
                            P = function () {
                                function e() {
                                }

                                return e.findGroup = function (e, t) {
                                    for (var n = 0; n < e.length; n++) {
                                        var r = e[n];
                                        if (r.id === t) return r
                                    }
                                }, e.convertAVC1ToAVCOTI = function (e) {
                                    var t = e.split(".");
                                    if (t.length > 2) {
                                        var n = t.shift() + ".";
                                        return (n += parseInt(t.shift()).toString(16)) + ("000" + parseInt(t.shift()).toString(16)).slice(-4)
                                    }
                                    return e
                                }, e.resolve = function (e, t) {
                                    return (0, i.buildAbsoluteURL)(t, e, {alwaysNormalize: !0})
                                }, e.parseMasterPlaylist = function (t, n) {
                                    var r, i = [], a = [], o = {}, s = [], d = !1;
                                    for (k.lastIndex = 0; null != (r = k.exec(t));) if (r[1]) {
                                        var c, u = new p(r[1]), g = {
                                            attrs: u,
                                            bitrate: u.decimalInteger("AVERAGE-BANDWIDTH") || u.decimalInteger("BANDWIDTH"),
                                            name: u.NAME,
                                            url: e.resolve(r[2], n)
                                        }, m = u.decimalResolution("RESOLUTION");
                                        m && (g.width = m.width, g.height = m.height), M((u.CODECS || "").split(/[ ,]+/).filter((function (e) {
                                            return e
                                        })), g), g.videoCodec && -1 !== g.videoCodec.indexOf("avc1") && (g.videoCodec = e.convertAVC1ToAVCOTI(g.videoCodec)), null !== (c = g.unknownCodecs) && void 0 !== c && c.length || a.push(g), i.push(g)
                                    } else if (r[3]) {
                                        var f = new p(r[3]);
                                        f["DATA-ID"] && (d = !0, o[f["DATA-ID"]] = f)
                                    } else if (r[4]) {
                                        var h = r[4], _ = I(h, n);
                                        _.encrypted && _.isSupported() ? s.push(_) : l.logger.warn('[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "' + h + '"')
                                    }
                                    return {
                                        levels: a.length > 0 && a.length < i.length ? a : i,
                                        sessionData: d ? o : null,
                                        sessionKeys: s.length ? s : null
                                    }
                                }, e.parseMasterPlaylistMedia = function (t, n, r, i) {
                                    var a;
                                    void 0 === i && (i = []);
                                    var o = [], s = 0;
                                    for (C.lastIndex = 0; null !== (a = C.exec(t));) {
                                        var l = new p(a[1]);
                                        if (l.TYPE === r) {
                                            var d = {
                                                attrs: l,
                                                bitrate: 0,
                                                id: s++,
                                                groupId: l["GROUP-ID"],
                                                instreamId: l["INSTREAM-ID"],
                                                name: l.NAME || l.LANGUAGE || "",
                                                type: r,
                                                default: l.bool("DEFAULT"),
                                                autoselect: l.bool("AUTOSELECT"),
                                                forced: l.bool("FORCED"),
                                                lang: l.LANGUAGE,
                                                url: l.URI ? e.resolve(l.URI, n) : ""
                                            };
                                            if (i.length) {
                                                var c = e.findGroup(i, d.groupId) || i[0];
                                                D(d, c, "audioCodec"), D(d, c, "textCodec")
                                            }
                                            o.push(d)
                                        }
                                    }
                                    return o
                                }, e.parseLevelPlaylist = function (e, t, n, r, i) {
                                    var o, s, d, c = new v(t), u = c.fragments, g = null, m = 0, f = 0, b = 0, y = 0,
                                        A = null, E = new _.Fragment(r, t), T = -1, w = !1;
                                    for (L.lastIndex = 0, c.m3u8 = e; null !== (o = L.exec(e));) {
                                        w && (w = !1, (E = new _.Fragment(r, t)).start = b, E.sn = m, E.cc = y, E.level = n, g && (E.initSegment = g, E.rawProgramDateTime = g.rawProgramDateTime, g.rawProgramDateTime = null));
                                        var S = o[1];
                                        if (S) {
                                            E.duration = parseFloat(S);
                                            var k = (" " + o[2]).slice(1);
                                            E.title = k || null, E.tagList.push(k ? ["INF", S, k] : ["INF", S])
                                        } else if (o[3]) (0, a.isFiniteNumber)(E.duration) && (E.start = b, d && N(E, d, c), E.sn = m, E.level = n, E.cc = y, E.urlId = i, u.push(E), E.relurl = (" " + o[3]).slice(1), O(E, A), A = E, b += E.duration, m++, f = 0, w = !0); else if (o[4]) {
                                            var C = (" " + o[4]).slice(1);
                                            A ? E.setByteRange(C, A) : E.setByteRange(C)
                                        } else if (o[5]) E.rawProgramDateTime = (" " + o[5]).slice(1), E.tagList.push(["PROGRAM-DATE-TIME", E.rawProgramDateTime]), -1 === T && (T = u.length); else {
                                            if (!(o = o[0].match(R))) {
                                                l.logger.warn("No matches on slow regex match for level playlist!");
                                                continue
                                            }
                                            for (s = 1; s < o.length && void 0 === o[s]; s++) ;
                                            var P = (" " + o[s]).slice(1), M = (" " + o[s + 1]).slice(1),
                                                D = o[s + 2] ? (" " + o[s + 2]).slice(1) : "";
                                            switch (P) {
                                                case"PLAYLIST-TYPE":
                                                    c.type = M.toUpperCase();
                                                    break;
                                                case"MEDIA-SEQUENCE":
                                                    m = c.startSN = parseInt(M);
                                                    break;
                                                case"SKIP":
                                                    var F = new p(M), U = F.decimalInteger("SKIPPED-SEGMENTS");
                                                    if ((0, a.isFiniteNumber)(U)) {
                                                        c.skippedSegments = U;
                                                        for (var H = U; H--;) u.unshift(null);
                                                        m += U
                                                    }
                                                    var Y = F.enumeratedString("RECENTLY-REMOVED-DATERANGES");
                                                    Y && (c.recentlyRemovedDateranges = Y.split("\t"));
                                                    break;
                                                case"TARGETDURATION":
                                                    c.targetduration = parseFloat(M);
                                                    break;
                                                case"VERSION":
                                                    c.version = parseInt(M);
                                                    break;
                                                case"EXTM3U":
                                                    break;
                                                case"ENDLIST":
                                                    c.live = !1;
                                                    break;
                                                case"#":
                                                    (M || D) && E.tagList.push(D ? [M, D] : [M]);
                                                    break;
                                                case"DISCONTINUITY":
                                                    y++, E.tagList.push(["DIS"]);
                                                    break;
                                                case"GAP":
                                                    E.tagList.push([P]);
                                                    break;
                                                case"BITRATE":
                                                    E.tagList.push([P, M]);
                                                    break;
                                                case"DATERANGE":
                                                    var G = new p(M), V = new h(G, c.dateRanges[G.ID]);
                                                    V.isValid || c.skippedSegments ? c.dateRanges[V.id] = V : l.logger.warn('Ignoring invalid DATERANGE tag: "' + M + '"'), E.tagList.push(["EXT-X-DATERANGE", M]);
                                                    break;
                                                case"DISCONTINUITY-SEQUENCE":
                                                    y = parseInt(M);
                                                    break;
                                                case"KEY":
                                                    var K = I(M, t);
                                                    if (K.isSupported()) {
                                                        if ("NONE" === K.method) {
                                                            d = void 0;
                                                            break
                                                        }
                                                        d || (d = {}), d[K.keyFormat] && (d = x({}, d)), d[K.keyFormat] = K
                                                    } else l.logger.warn('[Keys] Ignoring invalid EXT-X-KEY tag: "' + M + '"');
                                                    break;
                                                case"START":
                                                    var z = new p(M).decimalFloatingPoint("TIME-OFFSET");
                                                    (0, a.isFiniteNumber)(z) && (c.startTimeOffset = z);
                                                    break;
                                                case"MAP":
                                                    var j = new p(M);
                                                    if (E.duration) {
                                                        var Q = new _.Fragment(r, t);
                                                        B(Q, j, n, d), g = Q, E.initSegment = g, g.rawProgramDateTime && !E.rawProgramDateTime && (E.rawProgramDateTime = g.rawProgramDateTime)
                                                    } else B(E, j, n, d), g = E, w = !0;
                                                    break;
                                                case"SERVER-CONTROL":
                                                    var W = new p(M);
                                                    c.canBlockReload = W.bool("CAN-BLOCK-RELOAD"), c.canSkipUntil = W.optionalFloat("CAN-SKIP-UNTIL", 0), c.canSkipDateRanges = c.canSkipUntil > 0 && W.bool("CAN-SKIP-DATERANGES"), c.partHoldBack = W.optionalFloat("PART-HOLD-BACK", 0), c.holdBack = W.optionalFloat("HOLD-BACK", 0);
                                                    break;
                                                case"PART-INF":
                                                    var q = new p(M);
                                                    c.partTarget = q.decimalFloatingPoint("PART-TARGET");
                                                    break;
                                                case"PART":
                                                    var X = c.partList;
                                                    X || (X = c.partList = []);
                                                    var J = f > 0 ? X[X.length - 1] : void 0, $ = f++,
                                                        Z = new _.Part(new p(M), E, t, $, J);
                                                    X.push(Z), E.duration += Z.duration;
                                                    break;
                                                case"PRELOAD-HINT":
                                                    var ee = new p(M);
                                                    c.preloadHint = ee;
                                                    break;
                                                case"RENDITION-REPORT":
                                                    var te = new p(M);
                                                    c.renditionReports = c.renditionReports || [], c.renditionReports.push(te);
                                                    break;
                                                default:
                                                    l.logger.warn("line parsed but not handled: " + o)
                                            }
                                        }
                                    }
                                    A && !A.relurl ? (u.pop(), b -= A.duration, c.partList && (c.fragmentHint = A)) : c.partList && (O(E, A), E.cc = y, c.fragmentHint = E, d && N(E, d, c));
                                    var ne = u.length, re = u[0], ie = u[ne - 1];
                                    if ((b += c.skippedSegments * c.targetduration) > 0 && ne && ie) {
                                        c.averagetargetduration = b / ne;
                                        var ae = ie.sn;
                                        c.endSN = "initSegment" !== ae ? ae : 0, c.live || (ie.endList = !0), re && (c.startCC = re.cc)
                                    } else c.endSN = 0, c.startCC = 0;
                                    return c.fragmentHint && (b += c.fragmentHint.duration), c.totalduration = b, c.endCC = y, T > 0 && function (e, t) {
                                        for (var n = e[t], r = t; r--;) {
                                            var i = e[r];
                                            if (!i) return;
                                            i.programDateTime = n.programDateTime - 1e3 * i.duration, n = i
                                        }
                                    }(u, T), c
                                }, e
                            }();

                        function I(e, t) {
                            var n, r, i = new p(e), a = null != (n = i.enumeratedString("METHOD")) ? n : "", o = i.URI,
                                s = i.hexadecimalInteger("IV"), d = i.enumeratedString("KEYFORMATVERSIONS"),
                                c = null != (r = i.enumeratedString("KEYFORMAT")) ? r : "identity";
                            o && i.IV && !s && l.logger.error("Invalid IV: " + i.IV);
                            var u = o ? P.resolve(o, t) : "",
                                g = (d || "1").split("/").map(Number).filter(Number.isFinite);
                            return new T(a, u, c, g, s)
                        }

                        function M(e, t) {
                            ["video", "audio", "text"].forEach((function (n) {
                                var r = e.filter((function (e) {
                                    return function (e, t) {
                                        var n = w[t];
                                        return !!n && !0 === n[e.slice(0, 4)]
                                    }(e, n)
                                }));
                                if (r.length) {
                                    var i = r.filter((function (e) {
                                        return 0 === e.lastIndexOf("avc1", 0) || 0 === e.lastIndexOf("mp4a", 0)
                                    }));
                                    t[n + "Codec"] = i.length > 0 ? i[0] : r[0], e = e.filter((function (e) {
                                        return -1 === r.indexOf(e)
                                    }))
                                }
                            })), t.unknownCodecs = e
                        }

                        function D(e, t, n) {
                            var r = t[n];
                            r && (e[n] = r)
                        }

                        function O(e, t) {
                            e.rawProgramDateTime ? e.programDateTime = Date.parse(e.rawProgramDateTime) : null != t && t.programDateTime && (e.programDateTime = t.endProgramDateTime), (0, a.isFiniteNumber)(e.programDateTime) || (e.programDateTime = null, e.rawProgramDateTime = null)
                        }

                        function B(e, t, n, r) {
                            e.relurl = t.URI, t.BYTERANGE && e.setByteRange(t.BYTERANGE), e.level = n, e.sn = "initSegment", r && (e.levelkeys = r), e.initSegment = null
                        }

                        function N(e, t, n) {
                            e.levelkeys = t;
                            var r = n.encryptedFragments;
                            r.length && r[r.length - 1].levelkeys === t || !Object.keys(t).some((function (e) {
                                return t[e].isCommonEncryption
                            })) || r.push(e)
                        }

                        var F = n(308);

                        function U(e, t) {
                            var n = e.url;
                            return void 0 !== n && 0 !== n.indexOf("data:") || (n = t.url), n
                        }

                        const H = function () {
                            function e(e) {
                                this.hls = void 0, this.loaders = Object.create(null), this.hls = e, this.registerListeners()
                            }

                            var t = e.prototype;
                            return t.startLoad = function (e) {
                            }, t.stopLoad = function () {
                                this.destroyInternalLoaders()
                            }, t.registerListeners = function () {
                                var e = this.hls;
                                e.on(o.Events.MANIFEST_LOADING, this.onManifestLoading, this), e.on(o.Events.LEVEL_LOADING, this.onLevelLoading, this), e.on(o.Events.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this), e.on(o.Events.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this)
                            }, t.unregisterListeners = function () {
                                var e = this.hls;
                                e.off(o.Events.MANIFEST_LOADING, this.onManifestLoading, this), e.off(o.Events.LEVEL_LOADING, this.onLevelLoading, this), e.off(o.Events.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this), e.off(o.Events.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this)
                            }, t.createInternalLoader = function (e) {
                                var t = this.hls.config, n = t.pLoader, r = t.loader, i = new (n || r)(t);
                                return e.loader = i, this.loaders[e.type] = i, i
                            }, t.getInternalLoader = function (e) {
                                return this.loaders[e.type]
                            }, t.resetInternalLoader = function (e) {
                                this.loaders[e] && delete this.loaders[e]
                            }, t.destroyInternalLoaders = function () {
                                for (var e in this.loaders) {
                                    var t = this.loaders[e];
                                    t && t.destroy(), this.resetInternalLoader(e)
                                }
                            }, t.destroy = function () {
                                this.unregisterListeners(), this.destroyInternalLoaders()
                            }, t.onManifestLoading = function (e, t) {
                                var n = t.url;
                                this.load({
                                    id: null,
                                    groupId: null,
                                    level: 0,
                                    responseType: "text",
                                    type: F.PlaylistContextType.MANIFEST,
                                    url: n,
                                    deliveryDirectives: null
                                })
                            }, t.onLevelLoading = function (e, t) {
                                var n = t.id, r = t.level, i = t.url, a = t.deliveryDirectives;
                                this.load({
                                    id: n,
                                    groupId: null,
                                    level: r,
                                    responseType: "text",
                                    type: F.PlaylistContextType.LEVEL,
                                    url: i,
                                    deliveryDirectives: a
                                })
                            }, t.onAudioTrackLoading = function (e, t) {
                                var n = t.id, r = t.groupId, i = t.url, a = t.deliveryDirectives;
                                this.load({
                                    id: n,
                                    groupId: r,
                                    level: null,
                                    responseType: "text",
                                    type: F.PlaylistContextType.AUDIO_TRACK,
                                    url: i,
                                    deliveryDirectives: a
                                })
                            }, t.onSubtitleTrackLoading = function (e, t) {
                                var n = t.id, r = t.groupId, i = t.url, a = t.deliveryDirectives;
                                this.load({
                                    id: n,
                                    groupId: r,
                                    level: null,
                                    responseType: "text",
                                    type: F.PlaylistContextType.SUBTITLE_TRACK,
                                    url: i,
                                    deliveryDirectives: a
                                })
                            }, t.load = function (e) {
                                var t, n, r, i, a, o, s = this.hls.config, d = this.getInternalLoader(e);
                                if (d) {
                                    var c = d.context;
                                    if (c && c.url === e.url) return void l.logger.trace("[playlist-loader]: playlist request ongoing");
                                    l.logger.log("[playlist-loader]: aborting previous loader for type: " + e.type), d.abort()
                                }
                                switch (e.type) {
                                    case F.PlaylistContextType.MANIFEST:
                                        n = s.manifestLoadingMaxRetry, r = s.manifestLoadingTimeOut, i = s.manifestLoadingRetryDelay, a = s.manifestLoadingMaxRetryTimeout;
                                        break;
                                    case F.PlaylistContextType.LEVEL:
                                    case F.PlaylistContextType.AUDIO_TRACK:
                                    case F.PlaylistContextType.SUBTITLE_TRACK:
                                        n = 0, r = s.levelLoadingTimeOut;
                                        break;
                                    default:
                                        n = s.levelLoadingMaxRetry, r = s.levelLoadingTimeOut, i = s.levelLoadingRetryDelay, a = s.levelLoadingMaxRetryTimeout
                                }
                                if (d = this.createInternalLoader(e), null !== (t = e.deliveryDirectives) && void 0 !== t && t.part && (e.type === F.PlaylistContextType.LEVEL && null !== e.level ? o = this.hls.levels[e.level].details : e.type === F.PlaylistContextType.AUDIO_TRACK && null !== e.id ? o = this.hls.audioTracks[e.id].details : e.type === F.PlaylistContextType.SUBTITLE_TRACK && null !== e.id && (o = this.hls.subtitleTracks[e.id].details), o)) {
                                    var p = o.partTarget, u = o.targetduration;
                                    p && u && (r = Math.min(1e3 * Math.max(3 * p, .8 * u), r))
                                }
                                var g = {timeout: r, maxRetry: n, retryDelay: i, maxRetryDelay: a, highWaterMark: 0},
                                    m = {
                                        onSuccess: this.loadsuccess.bind(this),
                                        onError: this.loaderror.bind(this),
                                        onTimeout: this.loadtimeout.bind(this)
                                    };
                                d.load(e, g, m)
                            }, t.loadsuccess = function (e, t, n, r) {
                                void 0 === r && (r = null), this.resetInternalLoader(n.type);
                                var i = e.data;
                                0 === i.indexOf("#EXTM3U") ? (t.parsing.start = performance.now(), i.indexOf("#EXTINF:") > 0 || i.indexOf("#EXT-X-TARGETDURATION:") > 0 ? this.handleTrackOrLevelPlaylist(e, t, n, r) : this.handleMasterPlaylist(e, t, n, r)) : this.handleManifestParsingError(e, n, "no EXTM3U delimiter", r)
                            }, t.loaderror = function (e, t, n) {
                                void 0 === n && (n = null), this.handleNetworkError(t, n, !1, e)
                            }, t.loadtimeout = function (e, t, n) {
                                void 0 === n && (n = null), this.handleNetworkError(t, n, !0)
                            }, t.handleMasterPlaylist = function (e, t, n, r) {
                                var i = this.hls, a = e.data, s = U(e, n), d = P.parseMasterPlaylist(a, s),
                                    c = d.levels, u = d.sessionData, g = d.sessionKeys;
                                if (c.length) {
                                    var m = c.map((function (e) {
                                            return {id: e.attrs.AUDIO, audioCodec: e.audioCodec}
                                        })), f = c.map((function (e) {
                                            return {id: e.attrs.SUBTITLES, textCodec: e.textCodec}
                                        })), h = P.parseMasterPlaylistMedia(a, s, "AUDIO", m),
                                        _ = P.parseMasterPlaylistMedia(a, s, "SUBTITLES", f),
                                        v = P.parseMasterPlaylistMedia(a, s, "CLOSED-CAPTIONS");
                                    h.length && (h.some((function (e) {
                                        return !e.url
                                    })) || !c[0].audioCodec || c[0].attrs.AUDIO || (l.logger.log("[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"), h.unshift({
                                        type: "main",
                                        name: "main",
                                        default: !1,
                                        autoselect: !1,
                                        forced: !1,
                                        id: -1,
                                        attrs: new p({}),
                                        bitrate: 0,
                                        url: ""
                                    }))), i.trigger(o.Events.MANIFEST_LOADED, {
                                        levels: c,
                                        audioTracks: h,
                                        subtitles: _,
                                        captions: v,
                                        url: s,
                                        stats: t,
                                        networkDetails: r,
                                        sessionData: u,
                                        sessionKeys: g
                                    })
                                } else this.handleManifestParsingError(e, n, "no level found in manifest", r)
                            }, t.handleTrackOrLevelPlaylist = function (e, t, n, r) {
                                var i = this.hls, l = n.id, d = n.level, c = n.type, u = U(e, n),
                                    g = (0, a.isFiniteNumber)(l) ? l : 0, m = (0, a.isFiniteNumber)(d) ? d : g,
                                    f = function (e) {
                                        switch (e.type) {
                                            case F.PlaylistContextType.AUDIO_TRACK:
                                                return F.PlaylistLevelType.AUDIO;
                                            case F.PlaylistContextType.SUBTITLE_TRACK:
                                                return F.PlaylistLevelType.SUBTITLE;
                                            default:
                                                return F.PlaylistLevelType.MAIN
                                        }
                                    }(n), h = P.parseLevelPlaylist(e.data, u, m, f, g);
                                if (h.fragments.length) {
                                    if (c === F.PlaylistContextType.MANIFEST) {
                                        var _ = {attrs: new p({}), bitrate: 0, details: h, name: "", url: u};
                                        i.trigger(o.Events.MANIFEST_LOADED, {
                                            levels: [_],
                                            audioTracks: [],
                                            url: u,
                                            stats: t,
                                            networkDetails: r,
                                            sessionData: null,
                                            sessionKeys: null
                                        })
                                    }
                                    t.parsing.end = performance.now(), n.levelDetails = h, this.handlePlaylistLoaded(e, t, n, r)
                                } else i.trigger(o.Events.ERROR, {
                                    type: s.ErrorTypes.NETWORK_ERROR,
                                    details: s.ErrorDetails.LEVEL_EMPTY_ERROR,
                                    fatal: !1,
                                    url: u,
                                    reason: "no fragments found in level",
                                    level: "number" == typeof n.level ? n.level : void 0
                                })
                            }, t.handleManifestParsingError = function (e, t, n, r) {
                                this.hls.trigger(o.Events.ERROR, {
                                    type: s.ErrorTypes.NETWORK_ERROR,
                                    details: s.ErrorDetails.MANIFEST_PARSING_ERROR,
                                    fatal: t.type === F.PlaylistContextType.MANIFEST,
                                    url: e.url,
                                    reason: n,
                                    response: e,
                                    context: t,
                                    networkDetails: r
                                })
                            }, t.handleNetworkError = function (e, t, n, r) {
                                void 0 === n && (n = !1), l.logger.warn("[playlist-loader]: A network " + (n ? "timeout" : "error") + " occurred while loading " + e.type + " level: " + e.level + " id: " + e.id + ' group-id: "' + e.groupId + '"');
                                var i = s.ErrorDetails.UNKNOWN, a = !1, d = this.getInternalLoader(e);
                                switch (e.type) {
                                    case F.PlaylistContextType.MANIFEST:
                                        i = n ? s.ErrorDetails.MANIFEST_LOAD_TIMEOUT : s.ErrorDetails.MANIFEST_LOAD_ERROR, a = !0;
                                        break;
                                    case F.PlaylistContextType.LEVEL:
                                        i = n ? s.ErrorDetails.LEVEL_LOAD_TIMEOUT : s.ErrorDetails.LEVEL_LOAD_ERROR, a = !1;
                                        break;
                                    case F.PlaylistContextType.AUDIO_TRACK:
                                        i = n ? s.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT : s.ErrorDetails.AUDIO_TRACK_LOAD_ERROR, a = !1;
                                        break;
                                    case F.PlaylistContextType.SUBTITLE_TRACK:
                                        i = n ? s.ErrorDetails.SUBTITLE_TRACK_LOAD_TIMEOUT : s.ErrorDetails.SUBTITLE_LOAD_ERROR, a = !1
                                }
                                d && this.resetInternalLoader(e.type);
                                var c = {
                                    type: s.ErrorTypes.NETWORK_ERROR,
                                    details: i,
                                    fatal: a,
                                    url: e.url,
                                    loader: d,
                                    context: e,
                                    networkDetails: t
                                };
                                r && (c.response = r), this.hls.trigger(o.Events.ERROR, c)
                            }, t.handlePlaylistLoaded = function (e, t, n, r) {
                                var i = n.type, a = n.level, s = n.id, l = n.groupId, d = n.loader, c = n.levelDetails,
                                    p = n.deliveryDirectives;
                                if (null != c && c.targetduration) {
                                    if (d) switch (c.live && (d.getCacheAge && (c.ageHeader = d.getCacheAge() || 0), d.getCacheAge && !isNaN(c.ageHeader) || (c.ageHeader = 0)), i) {
                                        case F.PlaylistContextType.MANIFEST:
                                        case F.PlaylistContextType.LEVEL:
                                            this.hls.trigger(o.Events.LEVEL_LOADED, {
                                                details: c,
                                                level: a || 0,
                                                id: s || 0,
                                                stats: t,
                                                networkDetails: r,
                                                deliveryDirectives: p
                                            });
                                            break;
                                        case F.PlaylistContextType.AUDIO_TRACK:
                                            this.hls.trigger(o.Events.AUDIO_TRACK_LOADED, {
                                                details: c,
                                                id: s || 0,
                                                groupId: l || "",
                                                stats: t,
                                                networkDetails: r,
                                                deliveryDirectives: p
                                            });
                                            break;
                                        case F.PlaylistContextType.SUBTITLE_TRACK:
                                            this.hls.trigger(o.Events.SUBTITLE_TRACK_LOADED, {
                                                details: c,
                                                id: s || 0,
                                                groupId: l || "",
                                                stats: t,
                                                networkDetails: r,
                                                deliveryDirectives: p
                                            })
                                    }
                                } else this.handleManifestParsingError(e, n, "invalid target duration", r)
                            }, e
                        }();

                        function Y(e, t) {
                            var n;
                            try {
                                n = new Event("addtrack")
                            } catch (e) {
                                (n = document.createEvent("Event")).initEvent("addtrack", !1, !1)
                            }
                            n.track = e, t.dispatchEvent(n)
                        }

                        var G = n(181), V = n(856);

                        function K() {
                            return self.WebKitDataCue || self.VTTCue || self.TextTrackCue
                        }

                        var z = function () {
                            var e = K();
                            try {
                                new e(0, Number.POSITIVE_INFINITY, "")
                            } catch (e) {
                                return Number.MAX_VALUE
                            }
                            return Number.POSITIVE_INFINITY
                        }();

                        function j(e, t) {
                            return e.getTime() / 1e3 - t
                        }

                        const Q = function () {
                            function e(e) {
                                this.hls = void 0, this.id3Track = null, this.media = null, this.dateRangeCuesAppended = {}, this.hls = e, this._registerListeners()
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                this._unregisterListeners(), this.id3Track = null, this.media = null, this.dateRangeCuesAppended = {}, this.hls = null
                            }, t._registerListeners = function () {
                                var e = this.hls;
                                e.on(o.Events.MEDIA_ATTACHED, this.onMediaAttached, this), e.on(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this), e.on(o.Events.MANIFEST_LOADING, this.onManifestLoading, this), e.on(o.Events.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this), e.on(o.Events.BUFFER_FLUSHING, this.onBufferFlushing, this), e.on(o.Events.LEVEL_UPDATED, this.onLevelUpdated, this)
                            }, t._unregisterListeners = function () {
                                var e = this.hls;
                                e.off(o.Events.MEDIA_ATTACHED, this.onMediaAttached, this), e.off(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this), e.off(o.Events.MANIFEST_LOADING, this.onManifestLoading, this), e.off(o.Events.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this), e.off(o.Events.BUFFER_FLUSHING, this.onBufferFlushing, this), e.off(o.Events.LEVEL_UPDATED, this.onLevelUpdated, this)
                            }, t.onMediaAttached = function (e, t) {
                                this.media = t.media
                            }, t.onMediaDetaching = function () {
                                this.id3Track && (function (e) {
                                    var t = e.mode;
                                    if ("disabled" === t && (e.mode = "hidden"), e.cues) for (var n = e.cues.length; n--;) e.removeCue(e.cues[n]);
                                    "disabled" === t && (e.mode = t)
                                }(this.id3Track), this.id3Track = null, this.media = null, this.dateRangeCuesAppended = {})
                            }, t.onManifestLoading = function () {
                                this.dateRangeCuesAppended = {}
                            }, t.createTrack = function (e) {
                                var t = this.getID3Track(e.textTracks);
                                return t.mode = "hidden", t
                            }, t.getID3Track = function (e) {
                                if (this.media) {
                                    for (var t = 0; t < e.length; t++) {
                                        var n = e[t];
                                        if ("metadata" === n.kind && "id3" === n.label) return Y(n, this.media), n
                                    }
                                    return this.media.addTextTrack("metadata", "id3")
                                }
                            }, t.onFragParsingMetadata = function (e, t) {
                                if (this.media) {
                                    var n = this.hls.config, r = n.enableEmsgMetadataCues, i = n.enableID3MetadataCues;
                                    if (r || i) {
                                        var a = t.samples;
                                        this.id3Track || (this.id3Track = this.createTrack(this.media));
                                        for (var o = K(), s = 0; s < a.length; s++) {
                                            var l = a[s].type;
                                            if ((l !== V.MetadataSchema.emsg || r) && i) {
                                                var d = G.getID3Frames(a[s].data);
                                                if (d) {
                                                    var c = a[s].pts, p = c + a[s].duration;
                                                    p > z && (p = z), p - c <= 0 && (p = c + .25);
                                                    for (var u = 0; u < d.length; u++) {
                                                        var g = d[u];
                                                        if (!G.isTimeStampFrame(g)) {
                                                            this.updateId3CueEnds(c);
                                                            var m = new o(c, p, "");
                                                            m.value = g, l && (m.type = l), this.id3Track.addCue(m)
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }, t.updateId3CueEnds = function (e) {
                                var t, n = null === (t = this.id3Track) || void 0 === t ? void 0 : t.cues;
                                if (n) for (var r = n.length; r--;) {
                                    var i = n[r];
                                    i.startTime < e && i.endTime === z && (i.endTime = e)
                                }
                            }, t.onBufferFlushing = function (e, t) {
                                var n = t.startOffset, r = t.endOffset, i = t.type, a = this.id3Track, o = this.hls;
                                if (o) {
                                    var s = o.config, l = s.enableEmsgMetadataCues, d = s.enableID3MetadataCues;
                                    a && (l || d) && function (e, t, n, r) {
                                        var i = e.mode;
                                        if ("disabled" === i && (e.mode = "hidden"), e.cues && e.cues.length > 0) for (var a = function (e, t, n) {
                                            var r = [], i = function (e, t) {
                                                if (t < e[0].startTime) return 0;
                                                var n = e.length - 1;
                                                if (t > e[n].endTime) return -1;
                                                for (var r = 0, i = n; r <= i;) {
                                                    var a = Math.floor((i + r) / 2);
                                                    if (t < e[a].startTime) i = a - 1; else {
                                                        if (!(t > e[a].startTime && r < n)) return a;
                                                        r = a + 1
                                                    }
                                                }
                                                return e[r].startTime - t < t - e[i].startTime ? r : i
                                            }(e, t);
                                            if (i > -1) for (var a = i, o = e.length; a < o; a++) {
                                                var s = e[a];
                                                if (s.startTime >= t && s.endTime <= n) r.push(s); else if (s.startTime > n) return r
                                            }
                                            return r
                                        }(e.cues, t, n), o = 0; o < a.length; o++) r && !r(a[o]) || e.removeCue(a[o]);
                                        "disabled" === i && (e.mode = i)
                                    }(a, n, r, "audio" === i ? function (e) {
                                        return e.type === V.MetadataSchema.audioId3 && d
                                    } : "video" === i ? function (e) {
                                        return e.type === V.MetadataSchema.emsg && l
                                    } : function (e) {
                                        return e.type === V.MetadataSchema.audioId3 && d || e.type === V.MetadataSchema.emsg && l
                                    })
                                }
                            }, t.onLevelUpdated = function (e, t) {
                                var n = this, i = t.details;
                                if (this.media && i.hasProgramDateTime && this.hls.config.enableDateRangeMetadataCues) {
                                    var o = this.dateRangeCuesAppended, s = this.id3Track, l = i.dateRanges,
                                        d = Object.keys(l);
                                    if (s) for (var c = Object.keys(o).filter((function (e) {
                                        return !d.includes(e)
                                    })), p = function (e) {
                                        var t = c[e];
                                        Object.keys(o[t].cues).forEach((function (e) {
                                            s.removeCue(o[t].cues[e])
                                        })), delete o[t]
                                    }, u = c.length; u--;) p(u);
                                    var g = i.fragments[i.fragments.length - 1];
                                    if (0 !== d.length && (0, a.isFiniteNumber)(null == g ? void 0 : g.programDateTime)) {
                                        this.id3Track || (this.id3Track = this.createTrack(this.media));
                                        for (var m = g.programDateTime / 1e3 - g.start, f = K(), h = function (e) {
                                            var t = d[e], i = l[t], a = o[t], s = (null == a ? void 0 : a.cues) || {},
                                                c = (null == a ? void 0 : a.durationKnown) || !1, p = j(i.startDate, m),
                                                u = z, g = i.endDate;
                                            if (g) u = j(g, m), c = !0; else if (i.endOnNext && !c) {
                                                var h = d.reduce((function (e, t) {
                                                    var n = l[t];
                                                    return n.class === i.class && n.id !== t && n.startDate > i.startDate && e.push(n), e
                                                }), []).sort((function (e, t) {
                                                    return e.startDate.getTime() - t.startDate.getTime()
                                                }))[0];
                                                h && (u = j(h.startDate, m), c = !0)
                                            }
                                            for (var _, v = Object.keys(i.attr), b = 0; b < v.length; b++) {
                                                var y = v[b];
                                                if (y !== r.ID && y !== r.CLASS && y !== r.START_DATE && y !== r.DURATION && y !== r.END_DATE && y !== r.END_ON_NEXT) {
                                                    var A = s[y];
                                                    if (A) c && !a.durationKnown && (A.endTime = u); else {
                                                        var E = i.attr[y];
                                                        A = new f(p, u, ""), y !== r.SCTE35_OUT && y !== r.SCTE35_IN || (_ = E, E = Uint8Array.from(_.replace(/^0x/, "").replace(/([\da-fA-F]{2}) ?/g, "0x$1 ").replace(/ +$/, "").split(" ")).buffer), A.value = {
                                                            key: y,
                                                            data: E
                                                        }, A.type = V.MetadataSchema.dateRange, n.id3Track.addCue(A), s[y] = A
                                                    }
                                                }
                                            }
                                            o[t] = {cues: s, dateRange: i, durationKnown: c}
                                        }, _ = 0; _ < d.length; _++) h(_)
                                    }
                                }
                            }, e
                        }();
                        var W, q = function () {
                            function e(e) {
                                var t = this;
                                this.hls = void 0, this.config = void 0, this.media = null, this.levelDetails = null, this.currentTime = 0, this.stallCount = 0, this._latency = null, this.timeupdateHandler = function () {
                                    return t.timeupdate()
                                }, this.hls = e, this.config = e.config, this.registerListeners()
                            }

                            var t, n, r = e.prototype;
                            return r.destroy = function () {
                                this.unregisterListeners(), this.onMediaDetaching(), this.levelDetails = null, this.hls = this.timeupdateHandler = null
                            }, r.registerListeners = function () {
                                this.hls.on(o.Events.MEDIA_ATTACHED, this.onMediaAttached, this), this.hls.on(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this), this.hls.on(o.Events.MANIFEST_LOADING, this.onManifestLoading, this), this.hls.on(o.Events.LEVEL_UPDATED, this.onLevelUpdated, this), this.hls.on(o.Events.ERROR, this.onError, this)
                            }, r.unregisterListeners = function () {
                                this.hls.off(o.Events.MEDIA_ATTACHED, this.onMediaAttached), this.hls.off(o.Events.MEDIA_DETACHING, this.onMediaDetaching), this.hls.off(o.Events.MANIFEST_LOADING, this.onManifestLoading), this.hls.off(o.Events.LEVEL_UPDATED, this.onLevelUpdated), this.hls.off(o.Events.ERROR, this.onError)
                            }, r.onMediaAttached = function (e, t) {
                                this.media = t.media, this.media.addEventListener("timeupdate", this.timeupdateHandler)
                            }, r.onMediaDetaching = function () {
                                this.media && (this.media.removeEventListener("timeupdate", this.timeupdateHandler), this.media = null)
                            }, r.onManifestLoading = function () {
                                this.levelDetails = null, this._latency = null, this.stallCount = 0
                            }, r.onLevelUpdated = function (e, t) {
                                var n = t.details;
                                this.levelDetails = n, n.advanced && this.timeupdate(), !n.live && this.media && this.media.removeEventListener("timeupdate", this.timeupdateHandler)
                            }, r.onError = function (e, t) {
                                t.details === s.ErrorDetails.BUFFER_STALLED_ERROR && (this.stallCount++, l.logger.warn("[playback-rate-controller]: Stall detected, adjusting target latency"))
                            }, r.timeupdate = function () {
                                var e = this.media, t = this.levelDetails;
                                if (e && t) {
                                    this.currentTime = e.currentTime;
                                    var n = this.computeLatency();
                                    if (null !== n) {
                                        this._latency = n;
                                        var r = this.config, i = r.lowLatencyMode, a = r.maxLiveSyncPlaybackRate;
                                        if (i && 1 !== a) {
                                            var o = this.targetLatency;
                                            if (null !== o) {
                                                var s = n - o, l = s < Math.min(this.maxLatency, o + t.targetduration);
                                                if (t.live && l && s > .05 && this.forwardBufferLength > 1) {
                                                    var d = Math.min(2, Math.max(1, a)),
                                                        c = Math.round(2 / (1 + Math.exp(-.75 * s - this.edgeStalled)) * 20) / 20;
                                                    e.playbackRate = Math.min(d, Math.max(1, c))
                                                } else 1 !== e.playbackRate && 0 !== e.playbackRate && (e.playbackRate = 1)
                                            }
                                        }
                                    }
                                }
                            }, r.estimateLiveEdge = function () {
                                var e = this.levelDetails;
                                return null === e ? null : e.edge + e.age
                            }, r.computeLatency = function () {
                                var e = this.estimateLiveEdge();
                                return null === e ? null : e - this.currentTime
                            }, t = e, (n = [{
                                key: "latency", get: function () {
                                    return this._latency || 0
                                }
                            }, {
                                key: "maxLatency", get: function () {
                                    var e = this.config, t = this.levelDetails;
                                    return void 0 !== e.liveMaxLatencyDuration ? e.liveMaxLatencyDuration : t ? e.liveMaxLatencyDurationCount * t.targetduration : 0
                                }
                            }, {
                                key: "targetLatency", get: function () {
                                    var e = this.levelDetails;
                                    if (null === e) return null;
                                    var t = e.holdBack, n = e.partHoldBack, r = e.targetduration, i = this.config,
                                        a = i.liveSyncDuration, o = i.liveSyncDurationCount, s = i.lowLatencyMode,
                                        l = this.hls.userConfig, d = s && n || t;
                                    (l.liveSyncDuration || l.liveSyncDurationCount || 0 === d) && (d = void 0 !== a ? a : o * r);
                                    var c = r;
                                    return d + Math.min(1 * this.stallCount, c)
                                }
                            }, {
                                key: "liveSyncPosition", get: function () {
                                    var e = this.estimateLiveEdge(), t = this.targetLatency, n = this.levelDetails;
                                    if (null === e || null === t || null === n) return null;
                                    var r = n.edge, i = e - t - this.edgeStalled, a = r - n.totalduration,
                                        o = r - (this.config.lowLatencyMode && n.partTarget || n.targetduration);
                                    return Math.min(Math.max(a, i), o)
                                }
                            }, {
                                key: "drift", get: function () {
                                    var e = this.levelDetails;
                                    return null === e ? 1 : e.drift
                                }
                            }, {
                                key: "edgeStalled", get: function () {
                                    var e = this.levelDetails;
                                    if (null === e) return 0;
                                    var t = 3 * (this.config.lowLatencyMode && e.partTarget || e.targetduration);
                                    return Math.max(e.age - t, 0)
                                }
                            }, {
                                key: "forwardBufferLength", get: function () {
                                    var e = this.media, t = this.levelDetails;
                                    if (!e || !t) return 0;
                                    var n = e.buffered.length;
                                    return (n ? e.buffered.end(n - 1) : t.edge) - this.currentTime
                                }
                            }]) && function (e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                        if ("object" != typeof e || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var r = n.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(e)
                                    }(r.key)) ? i : String(i), r)
                                }
                                var i
                            }(t.prototype, n), Object.defineProperty(t, "prototype", {writable: !1}), e
                        }(), X = ["NONE", "TYPE-0", "TYPE-1", "TYPE-2", null];
                        !function (e) {
                            e.No = "", e.Yes = "YES", e.v2 = "v2"
                        }(W || (W = {}));
                        var J = function () {
                            function e(e, t, n) {
                                this.msn = void 0, this.part = void 0, this.skip = void 0, this.msn = e, this.part = t, this.skip = n
                            }

                            return e.prototype.addDirectives = function (e) {
                                var t = new self.URL(e);
                                return void 0 !== this.msn && t.searchParams.set("_HLS_msn", this.msn.toString()), void 0 !== this.part && t.searchParams.set("_HLS_part", this.part.toString()), this.skip && t.searchParams.set("_HLS_skip", this.skip), t.href
                            }, e
                        }(), $ = function () {
                            function e(e) {
                                this.attrs = void 0, this.audioCodec = void 0, this.bitrate = void 0, this.codecSet = void 0, this.height = void 0, this.id = void 0, this.name = void 0, this.videoCodec = void 0, this.width = void 0, this.unknownCodecs = void 0, this.audioGroupIds = void 0, this.details = void 0, this.fragmentError = 0, this.loadError = 0, this.loaded = void 0, this.realBitrate = 0, this.textGroupIds = void 0, this.url = void 0, this._urlId = 0, this.url = [e.url], this.attrs = e.attrs, this.bitrate = e.bitrate, e.details && (this.details = e.details), this.id = e.id || 0, this.name = e.name, this.width = e.width || 0, this.height = e.height || 0, this.audioCodec = e.audioCodec, this.videoCodec = e.videoCodec, this.unknownCodecs = e.unknownCodecs, this.codecSet = [e.videoCodec, e.audioCodec].filter((function (e) {
                                    return e
                                })).join(",").replace(/\.[^.,]+/g, "")
                            }

                            var t, n;
                            return t = e, (n = [{
                                key: "maxBitrate", get: function () {
                                    return Math.max(this.realBitrate, this.bitrate)
                                }
                            }, {
                                key: "uri", get: function () {
                                    return this.url[this._urlId] || ""
                                }
                            }, {
                                key: "urlId", get: function () {
                                    return this._urlId
                                }, set: function (e) {
                                    var t = e % this.url.length;
                                    this._urlId !== t && (this.details = void 0, this._urlId = t)
                                }
                            }]) && function (e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                        if ("object" != typeof e || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var r = n.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(e)
                                    }(r.key)) ? i : String(i), r)
                                }
                                var i
                            }(t.prototype, n), Object.defineProperty(t, "prototype", {writable: !1}), e
                        }();

                        function Z() {
                            return (Z = Object.assign ? Object.assign.bind() : function (e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                                }
                                return e
                            }).apply(this, arguments)
                        }

                        function ee(e, t, n) {
                            switch (t) {
                                case"audio":
                                    e.audioGroupIds || (e.audioGroupIds = []), e.audioGroupIds.push(n);
                                    break;
                                case"text":
                                    e.textGroupIds || (e.textGroupIds = []), e.textGroupIds.push(n)
                            }
                        }

                        function te(e) {
                            var t = {};
                            e.forEach((function (e) {
                                var n = e.groupId || "";
                                e.id = t[n] = t[n] || 0, t[n]++
                            }))
                        }

                        function ne(e, t) {
                            var n = t.startPTS;
                            if ((0, a.isFiniteNumber)(n)) {
                                var r, i = 0;
                                t.sn > e.sn ? (i = n - e.start, r = e) : (i = e.start - n, r = t), r.duration !== i && (r.duration = i)
                            } else t.sn > e.sn ? e.cc === t.cc && e.minEndPTS ? t.start = e.start + (e.minEndPTS - e.start) : t.start = e.start + e.duration : t.start = Math.max(e.start - t.duration, 0)
                        }

                        function re(e, t, n, r, i, o) {
                            r - n <= 0 && (l.logger.warn("Fragment should have a positive duration", t), r = n + t.duration, o = i + t.duration);
                            var s = n, d = r, c = t.startPTS, p = t.endPTS;
                            if ((0, a.isFiniteNumber)(c)) {
                                var u = Math.abs(c - n);
                                (0, a.isFiniteNumber)(t.deltaPTS) ? t.deltaPTS = Math.max(u, t.deltaPTS) : t.deltaPTS = u, s = Math.max(n, c), n = Math.min(n, c), i = Math.min(i, t.startDTS), d = Math.min(r, p), r = Math.max(r, p), o = Math.max(o, t.endDTS)
                            }
                            t.duration = r - n;
                            var g = n - t.start;
                            t.start = t.startPTS = n, t.maxStartPTS = s, t.startDTS = i, t.endPTS = r, t.minEndPTS = d, t.endDTS = o;
                            var m, f = t.sn;
                            if (!e || f < e.startSN || f > e.endSN) return 0;
                            var h = f - e.startSN, _ = e.fragments;
                            for (_[h] = t, m = h; m > 0; m--) ne(_[m], _[m - 1]);
                            for (m = h; m < _.length - 1; m++) ne(_[m], _[m + 1]);
                            return e.fragmentHint && ne(_[_.length - 1], e.fragmentHint), e.PTSKnown = e.alignedSliding = !0, g
                        }

                        function ie(e, t) {
                            var n = t.startSN + t.skippedSegments - e.startSN, r = e.fragments;
                            n < 0 || n >= r.length || function (e, t) {
                                if (t) {
                                    for (var n = e.fragments, r = e.skippedSegments; r < n.length; r++) n[r].start += t;
                                    e.fragmentHint && (e.fragmentHint.start += t)
                                }
                            }(t, r[n].start)
                        }

                        var ae = function () {
                            function e(e, t) {
                                this.hls = void 0, this.timer = -1, this.requestScheduled = -1, this.canLoad = !1, this.retryCount = 0, this.log = void 0, this.warn = void 0, this.log = l.logger.log.bind(l.logger, t + ":"), this.warn = l.logger.warn.bind(l.logger, t + ":"), this.hls = e
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                this.clearTimer(), this.hls = this.log = this.warn = null
                            }, t.onError = function (e, t) {
                                !t.fatal || t.type !== s.ErrorTypes.NETWORK_ERROR && t.type !== s.ErrorTypes.KEY_SYSTEM_ERROR || this.stopLoad()
                            }, t.clearTimer = function () {
                                clearTimeout(this.timer), this.timer = -1
                            }, t.startLoad = function () {
                                this.canLoad = !0, this.retryCount = 0, this.requestScheduled = -1, this.loadPlaylist()
                            }, t.stopLoad = function () {
                                this.canLoad = !1, this.clearTimer()
                            }, t.switchParams = function (e, t) {
                                var n = null == t ? void 0 : t.renditionReports;
                                if (n) for (var r = 0; r < n.length; r++) {
                                    var i = n[r], a = void 0;
                                    try {
                                        a = new self.URL(i.URI, t.url).href
                                    } catch (e) {
                                        l.logger.warn("Could not construct new URL for Rendition Report: " + e), a = i.URI || ""
                                    }
                                    if (a === e.slice(-a.length)) {
                                        var o = parseInt(i["LAST-MSN"]) || (null == t ? void 0 : t.lastPartSn),
                                            s = parseInt(i["LAST-PART"]) || (null == t ? void 0 : t.lastPartIndex);
                                        if (this.hls.config.lowLatencyMode) {
                                            var d = Math.min(t.age - t.partTarget, t.targetduration);
                                            s >= 0 && d > t.partTarget && (s += 1)
                                        }
                                        return new J(o, s >= 0 ? s : void 0, W.No)
                                    }
                                }
                            }, t.loadPlaylist = function (e) {
                                -1 === this.requestScheduled && (this.requestScheduled = self.performance.now())
                            }, t.shouldLoadTrack = function (e) {
                                return this.canLoad && e && !!e.url && (!e.details || e.details.live)
                            }, t.playlistLoaded = function (e, t, n) {
                                var r = this, i = t.details, o = t.stats, s = self.performance.now(),
                                    d = o.loading.first ? Math.max(0, s - o.loading.first) : 0;
                                if (i.advancedDateTime = Date.now() - d, i.live || null != n && n.live) {
                                    if (i.reloaded(n), n && this.log("live playlist " + e + " " + (i.advanced ? "REFRESHED " + i.lastPartSn + "-" + i.lastPartIndex : "MISSED")), n && i.fragments.length > 0 && function (e, t) {
                                        for (var n = null, r = e.fragments, i = r.length - 1; i >= 0; i--) {
                                            var o = r[i].initSegment;
                                            if (o) {
                                                n = o;
                                                break
                                            }
                                        }
                                        e.fragmentHint && delete e.fragmentHint.endPTS;
                                        var s, d, c, p, u, g = 0;
                                        if (function (e, t, n) {
                                            for (var r = t.skippedSegments, i = Math.max(e.startSN, t.startSN) - t.startSN, a = (e.fragmentHint ? 1 : 0) + (r ? t.endSN : Math.min(e.endSN, t.endSN)) - t.startSN, o = t.startSN - e.startSN, s = t.fragmentHint ? t.fragments.concat(t.fragmentHint) : t.fragments, l = e.fragmentHint ? e.fragments.concat(e.fragmentHint) : e.fragments, d = i; d <= a; d++) {
                                                var c = l[o + d], p = s[d];
                                                r && !p && d < r && (p = t.fragments[d] = c), c && p && n(c, p)
                                            }
                                        }(e, t, (function (e, r) {
                                            e.relurl && (g = e.cc - r.cc), (0, a.isFiniteNumber)(e.startPTS) && (0, a.isFiniteNumber)(e.endPTS) && (r.start = r.startPTS = e.startPTS, r.startDTS = e.startDTS, r.appendedPTS = e.appendedPTS, r.maxStartPTS = e.maxStartPTS, r.endPTS = e.endPTS, r.endDTS = e.endDTS, r.minEndPTS = e.minEndPTS, r.duration = e.endPTS - e.startPTS, r.duration && (s = r), t.PTSKnown = t.alignedSliding = !0), r.elementaryStreams = e.elementaryStreams, r.loader = e.loader, r.stats = e.stats, r.urlId = e.urlId, e.initSegment && (r.initSegment = e.initSegment, n = e.initSegment)
                                        })), n && (t.fragmentHint ? t.fragments.concat(t.fragmentHint) : t.fragments).forEach((function (e) {
                                            var t;
                                            e.initSegment && e.initSegment.relurl !== (null === (t = n) || void 0 === t ? void 0 : t.relurl) || (e.initSegment = n)
                                        })), t.skippedSegments) if (t.deltaUpdateFailed = t.fragments.some((function (e) {
                                            return !e
                                        })), t.deltaUpdateFailed) {
                                            l.logger.warn("[level-helper] Previous playlist missing segments skipped in delta playlist");
                                            for (var m = t.skippedSegments; m--;) t.fragments.shift();
                                            t.startSN = t.fragments[0].sn, t.startCC = t.fragments[0].cc
                                        } else t.canSkipDateRanges && (t.dateRanges = (d = e.dateRanges, c = t.dateRanges, p = t.recentlyRemovedDateranges, u = Z({}, d), p && p.forEach((function (e) {
                                            delete u[e]
                                        })), Object.keys(c).forEach((function (e) {
                                            var t = new h(c[e].attr, u[e]);
                                            t.isValid ? u[e] = t : l.logger.warn('Ignoring invalid Playlist Delta Update DATERANGE tag: "' + JSON.stringify(c[e].attr) + '"')
                                        })), u));
                                        var f = t.fragments;
                                        if (g) {
                                            l.logger.warn("discontinuity sliding from playlist, take drift into account");
                                            for (var _ = 0; _ < f.length; _++) f[_].cc += g
                                        }
                                        t.skippedSegments && (t.startCC = t.fragments[0].cc), function (e, t, n) {
                                            if (e && t) for (var r = 0, i = 0, a = e.length; i <= a; i++) {
                                                var o = e[i], s = t[i + r];
                                                o && s && o.index === s.index && o.fragment.sn === s.fragment.sn ? (l = o, (d = s).elementaryStreams = l.elementaryStreams, d.stats = l.stats) : r--
                                            }
                                            var l, d
                                        }(e.partList, t.partList), s ? re(t, s, s.startPTS, s.endPTS, s.startDTS, s.endDTS) : ie(e, t), f.length && (t.totalduration = t.edge - f[0].start), t.driftStartTime = e.driftStartTime, t.driftStart = e.driftStart;
                                        var v = t.advancedDateTime;
                                        if (t.advanced && v) {
                                            var b = t.edge;
                                            t.driftStart || (t.driftStartTime = v, t.driftStart = b), t.driftEndTime = v, t.driftEnd = b
                                        } else t.driftEndTime = e.driftEndTime, t.driftEnd = e.driftEnd, t.advancedDateTime = e.advancedDateTime
                                    }(n, i), !this.canLoad || !i.live) return;
                                    var c, p = void 0, u = void 0;
                                    if (i.canBlockReload && i.endSN && i.advanced) {
                                        var g = this.hls.config.lowLatencyMode, m = i.lastPartSn, f = i.endSN,
                                            _ = i.lastPartIndex, v = m === f;
                                        -1 !== _ ? (p = v ? f + 1 : m, u = v ? g ? 0 : _ : _ + 1) : p = f + 1;
                                        var b = i.age, y = b + i.ageHeader,
                                            A = Math.min(y - i.partTarget, 1.5 * i.targetduration);
                                        if (A > 0) {
                                            if (n && A > n.tuneInGoal) this.warn("CDN Tune-in goal increased from: " + n.tuneInGoal + " to: " + A + " with playlist age: " + i.age), A = 0; else {
                                                var E = Math.floor(A / i.targetduration);
                                                p += E, void 0 !== u && (u += Math.round(A % i.targetduration / i.partTarget)), this.log("CDN Tune-in age: " + i.ageHeader + "s last advanced " + b.toFixed(2) + "s goal: " + A + " skip sn " + E + " to part " + u)
                                            }
                                            i.tuneInGoal = A
                                        }
                                        if (c = this.getDeliveryDirectives(i, t.deliveryDirectives, p, u), g || !v) return void this.loadPlaylist(c)
                                    } else c = this.getDeliveryDirectives(i, t.deliveryDirectives, p, u);
                                    var T = this.hls.mainForwardBufferInfo, w = T ? T.end - T.len : 0,
                                        S = function (e, t) {
                                            void 0 === t && (t = 1 / 0);
                                            var n = 1e3 * e.targetduration;
                                            if (e.updated) {
                                                var r = e.fragments;
                                                if (r.length && 4 * n > t) {
                                                    var i = 1e3 * r[r.length - 1].duration;
                                                    i < n && (n = i)
                                                }
                                            } else n /= 2;
                                            return Math.round(n)
                                        }(i, 1e3 * (i.edge - w));
                                    i.updated ? s > this.requestScheduled + S && (this.requestScheduled = o.loading.start) : this.requestScheduled = -1, void 0 !== p && i.canBlockReload ? this.requestScheduled = o.loading.first + S - (1e3 * i.partTarget || 1e3) : this.requestScheduled = (-1 === this.requestScheduled ? s : this.requestScheduled) + S;
                                    var x = this.requestScheduled - s;
                                    x = Math.max(0, x), this.log("reload live playlist " + e + " in " + Math.round(x) + " ms"), this.timer = self.setTimeout((function () {
                                        return r.loadPlaylist(c)
                                    }), x)
                                } else this.clearTimer()
                            }, t.getDeliveryDirectives = function (e, t, n, r) {
                                var i = function (e, t) {
                                    var n = e.canSkipUntil, r = e.canSkipDateRanges, i = e.endSN;
                                    return n && (void 0 !== t ? t - i : 0) < n ? r ? W.v2 : W.Yes : W.No
                                }(e, n);
                                return null != t && t.skip && e.deltaUpdateFailed && (n = t.msn, r = t.part, i = W.No), new J(n, r, i)
                            }, t.retryLoadingOrFail = function (e) {
                                var t, n = this, r = this.hls.config, i = this.retryCount < r.levelLoadingMaxRetry;
                                if (i) if (this.requestScheduled = -1, this.retryCount++, e.details.indexOf("LoadTimeOut") > -1 && null !== (t = e.context) && void 0 !== t && t.deliveryDirectives) this.warn("retry playlist loading #" + this.retryCount + ' after "' + e.details + '"'), this.loadPlaylist(); else {
                                    var a = Math.min(Math.pow(2, this.retryCount) * r.levelLoadingRetryDelay, r.levelLoadingMaxRetryTimeout);
                                    this.timer = self.setTimeout((function () {
                                        return n.loadPlaylist()
                                    }), a), this.warn("retry playlist loading #" + this.retryCount + " in " + a + ' ms after "' + e.details + '"')
                                } else this.warn('cannot recover from error "' + e.details + '"'), this.clearTimer(), e.fatal = !0;
                                return i
                            }, e
                        }();

                        function oe() {
                            return (oe = Object.assign ? Object.assign.bind() : function (e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                                }
                                return e
                            }).apply(this, arguments)
                        }

                        function se(e, t) {
                            return (se = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
                                return e.__proto__ = t, e
                            })(e, t)
                        }

                        var le, de = /chrome|firefox/.test(navigator.userAgent.toLowerCase()), ce = function (e) {
                            var t, n;

                            function r(t) {
                                var n;
                                return (n = e.call(this, t, "[level-controller]") || this)._levels = [], n._firstLevel = -1, n._startLevel = void 0, n.currentLevelIndex = -1, n.manualLevelIndex = -1, n.onParsedComplete = void 0, n._registerListeners(), n
                            }

                            n = e, (t = r).prototype = Object.create(n.prototype), t.prototype.constructor = t, se(t, n);
                            var i, a, l = r.prototype;
                            return l._registerListeners = function () {
                                var e = this.hls;
                                e.on(o.Events.MANIFEST_LOADED, this.onManifestLoaded, this), e.on(o.Events.LEVEL_LOADED, this.onLevelLoaded, this), e.on(o.Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), e.on(o.Events.FRAG_LOADED, this.onFragLoaded, this), e.on(o.Events.ERROR, this.onError, this)
                            }, l._unregisterListeners = function () {
                                var e = this.hls;
                                e.off(o.Events.MANIFEST_LOADED, this.onManifestLoaded, this), e.off(o.Events.LEVEL_LOADED, this.onLevelLoaded, this), e.off(o.Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), e.off(o.Events.FRAG_LOADED, this.onFragLoaded, this), e.off(o.Events.ERROR, this.onError, this)
                            }, l.destroy = function () {
                                this._unregisterListeners(), this.manualLevelIndex = -1, this._levels.length = 0, e.prototype.destroy.call(this)
                            }, l.startLoad = function () {
                                this._levels.forEach((function (e) {
                                    e.loadError = 0
                                })), e.prototype.startLoad.call(this)
                            }, l.onManifestLoaded = function (e, t) {
                                var n, r, i = [], a = [], l = [], d = {}, c = !1, p = !1, u = !1;
                                if (t.levels.forEach((function (e) {
                                    var t = e.attrs;
                                    c = c || !(!e.width || !e.height), p = p || !!e.videoCodec, u = u || !!e.audioCodec, de && e.audioCodec && -1 !== e.audioCodec.indexOf("mp4a.40.34") && (e.audioCodec = void 0);
                                    var n = e.bitrate + "-" + e.attrs.RESOLUTION + "-" + e.attrs.CODECS;
                                    (r = d[n]) ? r.url.push(e.url) : (r = new $(e), d[n] = r, i.push(r)), t && (t.AUDIO && ee(r, "audio", t.AUDIO), t.SUBTITLES && ee(r, "text", t.SUBTITLES))
                                })), (c || p) && u && (i = i.filter((function (e) {
                                    var t = e.videoCodec, n = e.width, r = e.height;
                                    return !!t || !(!n || !r)
                                }))), i = i.filter((function (e) {
                                    var t = e.audioCodec, n = e.videoCodec;
                                    return (!t || S(t, "audio")) && (!n || S(n, "video"))
                                })), t.audioTracks && te(a = t.audioTracks.filter((function (e) {
                                    return !e.audioCodec || S(e.audioCodec, "audio")
                                }))), t.subtitles && te(l = t.subtitles), i.length > 0) {
                                    n = i[0].bitrate, i.sort((function (e, t) {
                                        return e.attrs["HDCP-LEVEL"] !== t.attrs["HDCP-LEVEL"] ? (e.attrs["HDCP-LEVEL"] || "") > (t.attrs["HDCP-LEVEL"] || "") ? 1 : -1 : e.bitrate !== t.bitrate ? e.bitrate - t.bitrate : e.attrs.SCORE !== t.attrs.SCORE ? e.attrs.decimalFloatingPoint("SCORE") - t.attrs.decimalFloatingPoint("SCORE") : c && e.height !== t.height ? e.height - t.height : 0
                                    })), this._levels = i;
                                    for (var g = 0; g < i.length; g++) if (i[g].bitrate === n) {
                                        this._firstLevel = g, this.log("manifest loaded, " + i.length + " level(s) found, first bitrate: " + n);
                                        break
                                    }
                                    var m = u && !p, f = {
                                        levels: i,
                                        audioTracks: a,
                                        subtitleTracks: l,
                                        sessionData: t.sessionData,
                                        sessionKeys: t.sessionKeys,
                                        firstLevel: this._firstLevel,
                                        stats: t.stats,
                                        audio: u,
                                        video: p,
                                        altAudio: !m && a.some((function (e) {
                                            return !!e.url
                                        }))
                                    };
                                    this.hls.trigger(o.Events.MANIFEST_PARSED, f), (this.hls.config.autoStartLoad || this.hls.forceStartLoad) && this.hls.startLoad(this.hls.config.startPosition)
                                } else this.hls.trigger(o.Events.ERROR, {
                                    type: s.ErrorTypes.MEDIA_ERROR,
                                    details: s.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                    fatal: !0,
                                    url: t.url,
                                    reason: "no level with compatible codecs found in manifest"
                                })
                            }, l.onError = function (t, n) {
                                var r, i;
                                if (e.prototype.onError.call(this, t, n), !n.fatal) {
                                    var a = n.context, o = this._levels[this.currentLevelIndex];
                                    if (a && (a.type === F.PlaylistContextType.AUDIO_TRACK && o.audioGroupIds && a.groupId === o.audioGroupIds[o.urlId] || a.type === F.PlaylistContextType.SUBTITLE_TRACK && o.textGroupIds && a.groupId === o.textGroupIds[o.urlId])) this.redundantFailover(this.currentLevelIndex); else {
                                        var l, d = !1, c = !0;
                                        switch (n.details) {
                                            case s.ErrorDetails.FRAG_LOAD_ERROR:
                                            case s.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                            case s.ErrorDetails.KEY_LOAD_ERROR:
                                            case s.ErrorDetails.KEY_LOAD_TIMEOUT:
                                                if (n.frag) {
                                                    var p = n.frag.type === F.PlaylistLevelType.MAIN ? n.frag.level : this.currentLevelIndex,
                                                        u = this._levels[p];
                                                    u ? (u.fragmentError++, u.fragmentError > this.hls.config.fragLoadingMaxRetry && (l = p)) : l = p
                                                }
                                                break;
                                            case s.ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:
                                                var g = o.attrs["HDCP-LEVEL"];
                                                g && (this.hls.maxHdcpLevel = X[X.indexOf(g) - 1], this.warn('Restricting playback to HDCP-LEVEL of "' + this.hls.maxHdcpLevel + '" or lower'));
                                            case s.ErrorDetails.FRAG_PARSING_ERROR:
                                            case s.ErrorDetails.KEY_SYSTEM_NO_SESSION:
                                                l = (null === (r = n.frag) || void 0 === r ? void 0 : r.type) === F.PlaylistLevelType.MAIN ? n.frag.level : this.currentLevelIndex, n.levelRetry = !1;
                                                break;
                                            case s.ErrorDetails.LEVEL_LOAD_ERROR:
                                            case s.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                                                a && (a.deliveryDirectives && (c = !1), l = a.level), d = !0;
                                                break;
                                            case s.ErrorDetails.REMUX_ALLOC_ERROR:
                                                l = null != (i = n.level) ? i : this.currentLevelIndex, d = !0
                                        }
                                        void 0 !== l && this.recoverLevel(n, l, d, c)
                                    }
                                }
                            }, l.recoverLevel = function (e, t, n, r) {
                                var i = e.details, a = this._levels[t];
                                if (a.loadError++, n) {
                                    if (!this.retryLoadingOrFail(e)) return void (this.currentLevelIndex = -1);
                                    e.levelRetry = !0
                                }
                                if (r) {
                                    var o = a.url.length;
                                    if (o > 1 && a.loadError < o) e.levelRetry = !0, this.redundantFailover(t); else if (-1 === this.manualLevelIndex) {
                                        for (var s = -1, l = this._levels, d = l.length; d--;) {
                                            var c = (d + this.currentLevelIndex) % l.length;
                                            if (c !== this.currentLevelIndex && 0 === l[c].loadError) {
                                                s = c;
                                                break
                                            }
                                        }
                                        s > -1 && this.currentLevelIndex !== s ? (this.warn(i + ": switch to " + s), e.levelRetry = !0, this.hls.nextAutoLevel = s) : !1 === e.levelRetry && (e.fatal = !0)
                                    }
                                }
                            }, l.redundantFailover = function (e) {
                                var t = this._levels[e], n = t.url.length;
                                if (n > 1) {
                                    var r = (t.urlId + 1) % n;
                                    this.warn("Switching to redundant URL-id " + r), this._levels.forEach((function (e) {
                                        e.urlId = r
                                    })), this.level = e
                                }
                            }, l.onFragLoaded = function (e, t) {
                                var n = t.frag;
                                if (void 0 !== n && n.type === F.PlaylistLevelType.MAIN) {
                                    var r = this._levels[n.level];
                                    void 0 !== r && (r.fragmentError = 0, r.loadError = 0)
                                }
                            }, l.onLevelLoaded = function (e, t) {
                                var n, r, i = t.level, a = t.details, o = this._levels[i];
                                if (!o) return this.warn("Invalid level index " + i), void (null !== (r = t.deliveryDirectives) && void 0 !== r && r.skip && (a.deltaUpdateFailed = !0));
                                i === this.currentLevelIndex ? (0 === o.fragmentError && (o.loadError = 0, this.retryCount = 0), this.playlistLoaded(i, t, o.details)) : null !== (n = t.deliveryDirectives) && void 0 !== n && n.skip && (a.deltaUpdateFailed = !0)
                            }, l.onAudioTrackSwitched = function (e, t) {
                                var n = this.hls.levels[this.currentLevelIndex];
                                if (n && n.audioGroupIds) {
                                    for (var r = -1, i = this.hls.audioTracks[t.id].groupId, a = 0; a < n.audioGroupIds.length; a++) if (n.audioGroupIds[a] === i) {
                                        r = a;
                                        break
                                    }
                                    r !== n.urlId && (n.urlId = r, this.startLoad())
                                }
                            }, l.loadPlaylist = function (t) {
                                e.prototype.loadPlaylist.call(this);
                                var n = this.currentLevelIndex, r = this._levels[n];
                                if (this.canLoad && r && r.url.length > 0) {
                                    var i = r.urlId, a = r.url[i];
                                    if (t) try {
                                        a = t.addDirectives(a)
                                    } catch (e) {
                                        this.warn("Could not construct new URL with HLS Delivery Directives: " + e)
                                    }
                                    this.log("Attempt loading level index " + n + (void 0 !== (null == t ? void 0 : t.msn) ? " at sn " + t.msn + " part " + t.part : "") + " with URL-id " + i + " " + a), this.clearTimer(), this.hls.trigger(o.Events.LEVEL_LOADING, {
                                        url: a,
                                        level: n,
                                        id: i,
                                        deliveryDirectives: t || null
                                    })
                                }
                            }, l.removeLevel = function (e, t) {
                                var n = function (e, n) {
                                    return n !== t
                                }, r = this._levels.filter((function (r, i) {
                                    return i !== e || r.url.length > 1 && void 0 !== t && (r.url = r.url.filter(n), r.audioGroupIds && (r.audioGroupIds = r.audioGroupIds.filter(n)), r.textGroupIds && (r.textGroupIds = r.textGroupIds.filter(n)), r.urlId = 0, !0)
                                })).map((function (e, t) {
                                    var n = e.details;
                                    return null != n && n.fragments && n.fragments.forEach((function (e) {
                                        e.level = t
                                    })), e
                                }));
                                this._levels = r, this.hls.trigger(o.Events.LEVELS_UPDATED, {levels: r})
                            }, i = r, (a = [{
                                key: "levels", get: function () {
                                    return 0 === this._levels.length ? null : this._levels
                                }
                            }, {
                                key: "level", get: function () {
                                    return this.currentLevelIndex
                                }, set: function (e) {
                                    var t, n = this._levels;
                                    if (0 !== n.length && (this.currentLevelIndex !== e || null === (t = n[e]) || void 0 === t || !t.details)) {
                                        if (e < 0 || e >= n.length) {
                                            var r = e < 0;
                                            if (this.hls.trigger(o.Events.ERROR, {
                                                type: s.ErrorTypes.OTHER_ERROR,
                                                details: s.ErrorDetails.LEVEL_SWITCH_ERROR,
                                                level: e,
                                                fatal: r,
                                                reason: "invalid level idx"
                                            }), r) return;
                                            e = Math.min(e, n.length - 1)
                                        }
                                        this.clearTimer();
                                        var i = this.currentLevelIndex, a = n[i], l = n[e];
                                        this.log("switching to level " + e + " from " + i), this.currentLevelIndex = e;
                                        var d = oe({}, l, {
                                            level: e,
                                            maxBitrate: l.maxBitrate,
                                            uri: l.uri,
                                            urlId: l.urlId
                                        });
                                        delete d._urlId, this.hls.trigger(o.Events.LEVEL_SWITCHING, d);
                                        var c = l.details;
                                        if (!c || c.live) {
                                            var p = this.switchParams(l.uri, null == a ? void 0 : a.details);
                                            this.loadPlaylist(p)
                                        }
                                    }
                                }
                            }, {
                                key: "manualLevel", get: function () {
                                    return this.manualLevelIndex
                                }, set: function (e) {
                                    this.manualLevelIndex = e, void 0 === this._startLevel && (this._startLevel = e), -1 !== e && (this.level = e)
                                }
                            }, {
                                key: "firstLevel", get: function () {
                                    return this._firstLevel
                                }, set: function (e) {
                                    this._firstLevel = e
                                }
                            }, {
                                key: "startLevel", get: function () {
                                    if (void 0 === this._startLevel) {
                                        var e = this.hls.config.startLevel;
                                        return void 0 !== e ? e : this._firstLevel
                                    }
                                    return this._startLevel
                                }, set: function (e) {
                                    this._startLevel = e
                                }
                            }, {
                                key: "nextLoadLevel", get: function () {
                                    return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel
                                }, set: function (e) {
                                    this.level = e, -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = e)
                                }
                            }]) && function (e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                        if ("object" != typeof e || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var r = n.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(e)
                                    }(r.key)) ? i : String(i), r)
                                }
                                var i
                            }(i.prototype, a), Object.defineProperty(i, "prototype", {writable: !1}), r
                        }(ae);
                        !function (e) {
                            e.NOT_LOADED = "NOT_LOADED", e.APPENDING = "APPENDING", e.PARTIAL = "PARTIAL", e.OK = "OK"
                        }(le || (le = {}));
                        var pe = function () {
                            function e(e) {
                                this.activeFragment = null, this.activeParts = null, this.endListFragments = Object.create(null), this.fragments = Object.create(null), this.timeRanges = Object.create(null), this.bufferPadding = .2, this.hls = void 0, this.hls = e, this._registerListeners()
                            }

                            var t = e.prototype;
                            return t._registerListeners = function () {
                                var e = this.hls;
                                e.on(o.Events.BUFFER_APPENDED, this.onBufferAppended, this), e.on(o.Events.FRAG_BUFFERED, this.onFragBuffered, this), e.on(o.Events.FRAG_LOADED, this.onFragLoaded, this)
                            }, t._unregisterListeners = function () {
                                var e = this.hls;
                                e.off(o.Events.BUFFER_APPENDED, this.onBufferAppended, this), e.off(o.Events.FRAG_BUFFERED, this.onFragBuffered, this), e.off(o.Events.FRAG_LOADED, this.onFragLoaded, this)
                            }, t.destroy = function () {
                                this._unregisterListeners(), this.fragments = this.endListFragments = this.timeRanges = this.activeFragment = this.activeParts = null
                            }, t.getAppendedFrag = function (e, t) {
                                if (t === F.PlaylistLevelType.MAIN) {
                                    var n = this.activeFragment, r = this.activeParts;
                                    if (!n) return null;
                                    if (r) for (var i = r.length; i--;) {
                                        var a = r[i], o = a ? a.end : n.appendedPTS;
                                        if (a.start <= e && void 0 !== o && e <= o) return i > 9 && (this.activeParts = r.slice(i - 9)), a
                                    } else if (n.start <= e && void 0 !== n.appendedPTS && e <= n.appendedPTS) return n
                                }
                                return this.getBufferedFrag(e, t)
                            }, t.getBufferedFrag = function (e, t) {
                                for (var n = this.fragments, r = Object.keys(n), i = r.length; i--;) {
                                    var a = n[r[i]];
                                    if ((null == a ? void 0 : a.body.type) === t && a.buffered) {
                                        var o = a.body;
                                        if (o.start <= e && e <= o.end) return o
                                    }
                                }
                                return null
                            }, t.detectEvictedFragments = function (e, t, n) {
                                var r = this;
                                this.timeRanges && (this.timeRanges[e] = t), Object.keys(this.fragments).forEach((function (i) {
                                    var a = r.fragments[i];
                                    if (a) if (a.buffered || a.loaded) {
                                        var o = a.range[e];
                                        o && o.time.some((function (e) {
                                            var n = !r.isTimeBuffered(e.startPTS, e.endPTS, t);
                                            return n && r.removeFragment(a.body), n
                                        }))
                                    } else a.body.type === n && r.removeFragment(a.body)
                                }))
                            }, t.detectPartialFragments = function (e) {
                                var t = this, n = this.timeRanges, r = e.frag, i = e.part;
                                if (n && "initSegment" !== r.sn) {
                                    var a = ge(r), o = this.fragments[a];
                                    o && (Object.keys(n).forEach((function (e) {
                                        var a = r.elementaryStreams[e];
                                        if (a) {
                                            var s = n[e], l = null !== i || !0 === a.partial;
                                            o.range[e] = t.getBufferedTimes(r, i, l, s)
                                        }
                                    })), o.loaded = null, Object.keys(o.range).length ? (o.buffered = !0, o.body.endList && (this.endListFragments[o.body.type] = o)) : this.removeFragment(o.body))
                                }
                            }, t.fragBuffered = function (e) {
                                var t = ge(e), n = this.fragments[t];
                                n && (n.loaded = null, n.buffered = !0)
                            }, t.getBufferedTimes = function (e, t, n, r) {
                                for (var i = {
                                    time: [],
                                    partial: n
                                }, a = t ? t.start : e.start, o = t ? t.end : e.end, s = e.minEndPTS || o, l = e.maxStartPTS || a, d = 0; d < r.length; d++) {
                                    var c = r.start(d) - this.bufferPadding, p = r.end(d) + this.bufferPadding;
                                    if (l >= c && s <= p) {
                                        i.time.push({startPTS: Math.max(a, r.start(d)), endPTS: Math.min(o, r.end(d))});
                                        break
                                    }
                                    if (a < p && o > c) i.partial = !0, i.time.push({
                                        startPTS: Math.max(a, r.start(d)),
                                        endPTS: Math.min(o, r.end(d))
                                    }); else if (o <= c) break
                                }
                                return i
                            }, t.getPartialFragment = function (e) {
                                var t, n, r, i = null, a = 0, o = this.bufferPadding, s = this.fragments;
                                return Object.keys(s).forEach((function (l) {
                                    var d = s[l];
                                    d && ue(d) && (n = d.body.start - o, r = d.body.end + o, e >= n && e <= r && (t = Math.min(e - n, r - e), a <= t && (i = d.body, a = t)))
                                })), i
                            }, t.isEndListAppended = function (e) {
                                var t = this.endListFragments[e];
                                return void 0 !== t && (t.buffered || ue(t))
                            }, t.getState = function (e) {
                                var t = ge(e), n = this.fragments[t];
                                return n ? n.buffered ? ue(n) ? le.PARTIAL : le.OK : le.APPENDING : le.NOT_LOADED
                            }, t.isTimeBuffered = function (e, t, n) {
                                for (var r, i, a = 0; a < n.length; a++) {
                                    if (r = n.start(a) - this.bufferPadding, i = n.end(a) + this.bufferPadding, e >= r && t <= i) return !0;
                                    if (t <= r) return !1
                                }
                                return !1
                            }, t.onFragLoaded = function (e, t) {
                                var n = t.frag, r = t.part;
                                if ("initSegment" !== n.sn && !n.bitrateTest && !r) {
                                    var i = ge(n);
                                    this.fragments[i] = {body: n, loaded: t, buffered: !1, range: Object.create(null)}
                                }
                            }, t.onBufferAppended = function (e, t) {
                                var n = this, r = t.frag, i = t.part, a = t.timeRanges;
                                if (r.type === F.PlaylistLevelType.MAIN) if (this.activeFragment !== r && (this.activeFragment = r, r.appendedPTS = void 0), i) {
                                    var o = this.activeParts;
                                    o || (this.activeParts = o = []), o.push(i)
                                } else this.activeParts = null;
                                this.timeRanges = a, Object.keys(a).forEach((function (e) {
                                    var t = a[e];
                                    if (n.detectEvictedFragments(e, t), !i && r.type === F.PlaylistLevelType.MAIN) {
                                        var o = r.elementaryStreams[e];
                                        if (!o) return;
                                        for (var s = 0; s < t.length; s++) {
                                            var l = t.end(s);
                                            l <= o.endPTS && l > o.startPTS ? r.appendedPTS = Math.max(l, r.appendedPTS || 0) : r.appendedPTS = o.endPTS
                                        }
                                    }
                                }))
                            }, t.onFragBuffered = function (e, t) {
                                this.detectPartialFragments(t)
                            }, t.hasFragment = function (e) {
                                var t = ge(e);
                                return !!this.fragments[t]
                            }, t.removeFragmentsInRange = function (e, t, n) {
                                var r = this;
                                Object.keys(this.fragments).forEach((function (i) {
                                    var a = r.fragments[i];
                                    if (a && a.buffered) {
                                        var o = a.body;
                                        o.type === n && o.start < t && o.end > e && r.removeFragment(o)
                                    }
                                }))
                            }, t.removeFragment = function (e) {
                                var t = ge(e);
                                e.stats.loaded = 0, e.clearElementaryStreamInfo(), e.appendedPTS = void 0, delete this.fragments[t], e.endList && delete this.endListFragments[e.type]
                            }, t.removeAllFragments = function () {
                                this.fragments = Object.create(null), this.endListFragments = Object.create(null), this.activeFragment = null, this.activeParts = null
                            }, e
                        }();

                        function ue(e) {
                            var t, n;
                            return e.buffered && ((null === (t = e.range.video) || void 0 === t ? void 0 : t.partial) || (null === (n = e.range.audio) || void 0 === n ? void 0 : n.partial))
                        }

                        function ge(e) {
                            return e.type + "_" + e.level + "_" + e.urlId + "_" + e.sn
                        }

                        function me(e) {
                            var t = "function" == typeof Map ? new Map : void 0;
                            return (me = function (e) {
                                if (null === e || (n = e, -1 === Function.toString.call(n).indexOf("[native code]"))) return e;
                                var n;
                                if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
                                if (void 0 !== t) {
                                    if (t.has(e)) return t.get(e);
                                    t.set(e, r)
                                }

                                function r() {
                                    return fe(e, arguments, ve(this).constructor)
                                }

                                return r.prototype = Object.create(e.prototype, {
                                    constructor: {
                                        value: r,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0
                                    }
                                }), _e(r, e)
                            })(e)
                        }

                        function fe(e, t, n) {
                            return (fe = he() ? Reflect.construct.bind() : function (e, t, n) {
                                var r = [null];
                                r.push.apply(r, t);
                                var i = new (Function.bind.apply(e, r));
                                return n && _e(i, n.prototype), i
                            }).apply(null, arguments)
                        }

                        function he() {
                            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                            if (Reflect.construct.sham) return !1;
                            if ("function" == typeof Proxy) return !0;
                            try {
                                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function () {
                                }))), !0
                            } catch (e) {
                                return !1
                            }
                        }

                        function _e(e, t) {
                            return (_e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
                                return e.__proto__ = t, e
                            })(e, t)
                        }

                        function ve(e) {
                            return (ve = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (e) {
                                return e.__proto__ || Object.getPrototypeOf(e)
                            })(e)
                        }

                        var be = Math.pow(2, 17), ye = function () {
                            function e(e) {
                                this.config = void 0, this.loader = null, this.partLoadTimeout = -1, this.config = e
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                this.loader && (this.loader.destroy(), this.loader = null)
                            }, t.abort = function () {
                                this.loader && this.loader.abort()
                            }, t.load = function (e, t) {
                                var n = this, r = e.url;
                                if (!r) return Promise.reject(new Ee({
                                    type: s.ErrorTypes.NETWORK_ERROR,
                                    details: s.ErrorDetails.FRAG_LOAD_ERROR,
                                    fatal: !1,
                                    frag: e,
                                    networkDetails: null
                                }, "Fragment does not have a " + (r ? "part list" : "url")));
                                this.abort();
                                var i = this.config, a = i.fLoader, o = i.loader;
                                return new Promise((function (r, l) {
                                    n.loader && n.loader.destroy();
                                    var d = n.loader = e.loader = a ? new a(i) : new o(i), c = Ae(e), p = {
                                        timeout: i.fragLoadingTimeOut,
                                        maxRetry: 0,
                                        retryDelay: 0,
                                        maxRetryDelay: i.fragLoadingMaxRetryTimeout,
                                        highWaterMark: "initSegment" === e.sn ? 1 / 0 : be
                                    };
                                    e.stats = d.stats, d.load(c, p, {
                                        onSuccess: function (t, i, a, o) {
                                            n.resetLoader(e, d);
                                            var s = t.data;
                                            a.resetIV && e.decryptdata && (e.decryptdata.iv = new Uint8Array(s.slice(0, 16)), s = s.slice(16)), r({
                                                frag: e,
                                                part: null,
                                                payload: s,
                                                networkDetails: o
                                            })
                                        }, onError: function (t, r, i) {
                                            n.resetLoader(e, d), l(new Ee({
                                                type: s.ErrorTypes.NETWORK_ERROR,
                                                details: s.ErrorDetails.FRAG_LOAD_ERROR,
                                                fatal: !1,
                                                frag: e,
                                                response: t,
                                                networkDetails: i
                                            }))
                                        }, onAbort: function (t, r, i) {
                                            n.resetLoader(e, d), l(new Ee({
                                                type: s.ErrorTypes.NETWORK_ERROR,
                                                details: s.ErrorDetails.INTERNAL_ABORTED,
                                                fatal: !1,
                                                frag: e,
                                                networkDetails: i
                                            }))
                                        }, onTimeout: function (t, r, i) {
                                            n.resetLoader(e, d), l(new Ee({
                                                type: s.ErrorTypes.NETWORK_ERROR,
                                                details: s.ErrorDetails.FRAG_LOAD_TIMEOUT,
                                                fatal: !1,
                                                frag: e,
                                                networkDetails: i
                                            }))
                                        }, onProgress: function (n, r, i, a) {
                                            t && t({frag: e, part: null, payload: i, networkDetails: a})
                                        }
                                    })
                                }))
                            }, t.loadPart = function (e, t, n) {
                                var r = this;
                                this.abort();
                                var i = this.config, a = i.fLoader, o = i.loader;
                                return new Promise((function (l, d) {
                                    r.loader && r.loader.destroy();
                                    var c = r.loader = e.loader = a ? new a(i) : new o(i), p = Ae(e, t), u = {
                                        timeout: i.fragLoadingTimeOut,
                                        maxRetry: 0,
                                        retryDelay: 0,
                                        maxRetryDelay: i.fragLoadingMaxRetryTimeout,
                                        highWaterMark: be
                                    };
                                    t.stats = c.stats, c.load(p, u, {
                                        onSuccess: function (i, a, o, s) {
                                            r.resetLoader(e, c), r.updateStatsFromPart(e, t);
                                            var d = {frag: e, part: t, payload: i.data, networkDetails: s};
                                            n(d), l(d)
                                        }, onError: function (n, i, a) {
                                            r.resetLoader(e, c), d(new Ee({
                                                type: s.ErrorTypes.NETWORK_ERROR,
                                                details: s.ErrorDetails.FRAG_LOAD_ERROR,
                                                fatal: !1,
                                                frag: e,
                                                part: t,
                                                response: n,
                                                networkDetails: a
                                            }))
                                        }, onAbort: function (n, i, a) {
                                            e.stats.aborted = t.stats.aborted, r.resetLoader(e, c), d(new Ee({
                                                type: s.ErrorTypes.NETWORK_ERROR,
                                                details: s.ErrorDetails.INTERNAL_ABORTED,
                                                fatal: !1,
                                                frag: e,
                                                part: t,
                                                networkDetails: a
                                            }))
                                        }, onTimeout: function (n, i, a) {
                                            r.resetLoader(e, c), d(new Ee({
                                                type: s.ErrorTypes.NETWORK_ERROR,
                                                details: s.ErrorDetails.FRAG_LOAD_TIMEOUT,
                                                fatal: !1,
                                                frag: e,
                                                part: t,
                                                networkDetails: a
                                            }))
                                        }
                                    })
                                }))
                            }, t.updateStatsFromPart = function (e, t) {
                                var n = e.stats, r = t.stats, i = r.total;
                                if (n.loaded += r.loaded, i) {
                                    var a = Math.round(e.duration / t.duration),
                                        o = Math.min(Math.round(n.loaded / i), a),
                                        s = (a - o) * Math.round(n.loaded / o);
                                    n.total = n.loaded + s
                                } else n.total = Math.max(n.loaded, n.total);
                                var l = n.loading, d = r.loading;
                                l.start ? l.first += d.first - d.start : (l.start = d.start, l.first = d.first), l.end = d.end
                            }, t.resetLoader = function (e, t) {
                                e.loader = null, this.loader === t && (self.clearTimeout(this.partLoadTimeout), this.loader = null), t.destroy()
                            }, e
                        }();

                        function Ae(e, t) {
                            void 0 === t && (t = null);
                            var n = t || e, r = {
                                frag: e,
                                part: t,
                                responseType: "arraybuffer",
                                url: n.url,
                                headers: {},
                                rangeStart: 0,
                                rangeEnd: 0
                            }, i = n.byteRangeStartOffset, o = n.byteRangeEndOffset;
                            if ((0, a.isFiniteNumber)(i) && (0, a.isFiniteNumber)(o)) {
                                var s, l = i, d = o;
                                if ("initSegment" === e.sn && "AES-128" === (null === (s = e.decryptdata) || void 0 === s ? void 0 : s.method)) {
                                    var c = o - i;
                                    c % 16 && (d = o + (16 - c % 16)), 0 !== i && (r.resetIV = !0, l = i - 16)
                                }
                                r.rangeStart = l, r.rangeEnd = d
                            }
                            return r
                        }

                        var Ee = function (e) {
                            var t, n;

                            function r(t) {
                                for (var n, r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), a = 1; a < r; a++) i[a - 1] = arguments[a];
                                return (n = e.call.apply(e, [this].concat(i)) || this).data = void 0, n.data = t, n
                            }

                            return n = e, (t = r).prototype = Object.create(n.prototype), t.prototype.constructor = t, _e(t, n), r
                        }(me(Error)), Te = function () {
                            function e(e) {
                                this.config = void 0, this.keyUriToKeyInfo = {}, this.emeController = null, this.config = e
                            }

                            var t = e.prototype;
                            return t.abort = function () {
                                for (var e in this.keyUriToKeyInfo) {
                                    var t = this.keyUriToKeyInfo[e].loader;
                                    t && t.abort()
                                }
                            }, t.detach = function () {
                                for (var e in this.keyUriToKeyInfo) {
                                    var t = this.keyUriToKeyInfo[e];
                                    (t.mediaKeySessionContext || t.decryptdata.isCommonEncryption) && delete this.keyUriToKeyInfo[e]
                                }
                            }, t.destroy = function () {
                                for (var e in this.detach(), this.keyUriToKeyInfo) {
                                    var t = this.keyUriToKeyInfo[e].loader;
                                    t && t.destroy()
                                }
                                this.keyUriToKeyInfo = {}
                            }, t.createKeyLoadError = function (e, t, n, r) {
                                return void 0 === t && (t = s.ErrorDetails.KEY_LOAD_ERROR), new Ee({
                                    type: s.ErrorTypes.NETWORK_ERROR,
                                    details: t,
                                    fatal: !1,
                                    frag: e,
                                    networkDetails: n
                                })
                            }, t.loadClear = function (e, t) {
                                var n = this;
                                if (this.emeController && this.config.emeEnabled) for (var r = e.sn, i = e.cc, a = function (e) {
                                    var a = t[e];
                                    if (i <= a.cc && ("initSegment" === r || r < a.sn)) return n.emeController.selectKeySystemFormat(a).then((function (e) {
                                        a.setKeyFormat(e)
                                    })), "break"
                                }, o = 0; o < t.length && "break" !== a(o); o++) ;
                            }, t.load = function (e) {
                                var t = this;
                                return !e.decryptdata && e.encrypted && this.emeController ? this.emeController.selectKeySystemFormat(e).then((function (n) {
                                    return t.loadInternal(e, n)
                                })) : this.loadInternal(e)
                            }, t.loadInternal = function (e, t) {
                                var n, r;
                                t && e.setKeyFormat(t);
                                var i = e.decryptdata;
                                if (!i) {
                                    var a = t ? "Expected frag.decryptdata to be defined after setting format " + t : "Missing decryption data on fragment in onKeyLoading";
                                    return Promise.reject(this.createKeyLoadError(e, s.ErrorDetails.KEY_LOAD_ERROR, null, a))
                                }
                                var o = i.uri;
                                if (!o) return Promise.reject(this.createKeyLoadError(e, s.ErrorDetails.KEY_LOAD_ERROR, null, 'Invalid key URI: "' + o + '"'));
                                var l, d = this.keyUriToKeyInfo[o];
                                if (null !== (n = d) && void 0 !== n && n.decryptdata.key) return i.key = d.decryptdata.key, Promise.resolve({
                                    frag: e,
                                    keyInfo: d
                                });
                                if (null !== (r = d) && void 0 !== r && r.keyLoadPromise) switch (null === (l = d.mediaKeySessionContext) || void 0 === l ? void 0 : l.keyStatus) {
                                    case void 0:
                                    case"status-pending":
                                    case"usable":
                                    case"usable-in-future":
                                        return d.keyLoadPromise
                                }
                                switch (d = this.keyUriToKeyInfo[o] = {
                                    decryptdata: i,
                                    keyLoadPromise: null,
                                    loader: null,
                                    mediaKeySessionContext: null
                                }, i.method) {
                                    case"ISO-23001-7":
                                    case"SAMPLE-AES":
                                    case"SAMPLE-AES-CENC":
                                    case"SAMPLE-AES-CTR":
                                        return "identity" === i.keyFormat ? this.loadKeyHTTP(d, e) : this.loadKeyEME(d, e);
                                    case"AES-128":
                                        return this.loadKeyHTTP(d, e);
                                    default:
                                        return Promise.reject(this.createKeyLoadError(e, s.ErrorDetails.KEY_LOAD_ERROR, null, 'Key supplied with unsupported METHOD: "' + i.method + '"'))
                                }
                            }, t.loadKeyEME = function (e, t) {
                                var n = {frag: t, keyInfo: e};
                                if (this.emeController && this.config.emeEnabled) {
                                    var r = this.emeController.loadKey(n);
                                    if (r) return (e.keyLoadPromise = r.then((function (t) {
                                        return e.mediaKeySessionContext = t, n
                                    }))).catch((function (t) {
                                        throw e.keyLoadPromise = null, t
                                    }))
                                }
                                return Promise.resolve(n)
                            }, t.loadKeyHTTP = function (e, t) {
                                var n = this, r = this.config, i = new (0, r.loader)(r);
                                return t.keyLoader = e.loader = i, e.keyLoadPromise = new Promise((function (a, o) {
                                    var l = {keyInfo: e, frag: t, responseType: "arraybuffer", url: e.decryptdata.uri},
                                        d = {
                                            timeout: r.fragLoadingTimeOut,
                                            maxRetry: 0,
                                            retryDelay: r.fragLoadingRetryDelay,
                                            maxRetryDelay: r.fragLoadingMaxRetryTimeout,
                                            highWaterMark: 0
                                        }, c = {
                                            onSuccess: function (e, t, r, i) {
                                                var l = r.frag, d = r.keyInfo, c = r.url;
                                                if (!l.decryptdata || d !== n.keyUriToKeyInfo[c]) return o(n.createKeyLoadError(l, s.ErrorDetails.KEY_LOAD_ERROR, i, "after key load, decryptdata unset or changed"));
                                                d.decryptdata.key = l.decryptdata.key = new Uint8Array(e.data), l.keyLoader = null, d.loader = null, a({
                                                    frag: l,
                                                    keyInfo: d
                                                })
                                            }, onError: function (e, r, i) {
                                                n.resetLoader(r), o(n.createKeyLoadError(t, s.ErrorDetails.KEY_LOAD_ERROR, i))
                                            }, onTimeout: function (e, r, i) {
                                                n.resetLoader(r), o(n.createKeyLoadError(t, s.ErrorDetails.KEY_LOAD_TIMEOUT, i))
                                            }, onAbort: function (e, r, i) {
                                                n.resetLoader(r), o(n.createKeyLoadError(t, s.ErrorDetails.INTERNAL_ABORTED, i))
                                            }
                                        };
                                    i.load(l, d, c)
                                }))
                            }, t.resetLoader = function (e) {
                                var t = e.frag, n = e.keyInfo, r = e.url, i = n.loader;
                                t.keyLoader === i && (t.keyLoader = null, n.loader = null), delete this.keyUriToKeyInfo[r], i && i.destroy()
                            }, e
                        }(), we = function () {
                            function e() {
                                this._boundTick = void 0, this._tickTimer = null, this._tickInterval = null, this._tickCallCount = 0, this._boundTick = this.tick.bind(this)
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                this.onHandlerDestroying(), this.onHandlerDestroyed()
                            }, t.onHandlerDestroying = function () {
                                this.clearNextTick(), this.clearInterval()
                            }, t.onHandlerDestroyed = function () {
                            }, t.hasInterval = function () {
                                return !!this._tickInterval
                            }, t.hasNextTick = function () {
                                return !!this._tickTimer
                            }, t.setInterval = function (e) {
                                return !this._tickInterval && (this._tickInterval = self.setInterval(this._boundTick, e), !0)
                            }, t.clearInterval = function () {
                                return !!this._tickInterval && (self.clearInterval(this._tickInterval), this._tickInterval = null, !0)
                            }, t.clearNextTick = function () {
                                return !!this._tickTimer && (self.clearTimeout(this._tickTimer), this._tickTimer = null, !0)
                            }, t.tick = function () {
                                this._tickCallCount++, 1 === this._tickCallCount && (this.doTick(), this._tickCallCount > 1 && this.tickImmediate(), this._tickCallCount = 0)
                            }, t.tickImmediate = function () {
                                this.clearNextTick(), this._tickTimer = self.setTimeout(this._boundTick, 0)
                            }, t.doTick = function () {
                            }, e
                        }(), Se = {
                            length: 0, start: function () {
                                return 0
                            }, end: function () {
                                return 0
                            }
                        }, xe = function () {
                            function e() {
                            }

                            return e.isBuffered = function (t, n) {
                                try {
                                    if (t) for (var r = e.getBuffered(t), i = 0; i < r.length; i++) if (n >= r.start(i) && n <= r.end(i)) return !0
                                } catch (e) {
                                }
                                return !1
                            }, e.bufferInfo = function (t, n, r) {
                                try {
                                    if (t) {
                                        var i, a = e.getBuffered(t), o = [];
                                        for (i = 0; i < a.length; i++) o.push({start: a.start(i), end: a.end(i)});
                                        return this.bufferedInfo(o, n, r)
                                    }
                                } catch (e) {
                                }
                                return {len: 0, start: n, end: n, nextStart: void 0}
                            }, e.bufferedInfo = function (e, t, n) {
                                t = Math.max(0, t), e.sort((function (e, t) {
                                    return e.start - t.start || t.end - e.end
                                }));
                                var r = [];
                                if (n) for (var i = 0; i < e.length; i++) {
                                    var a = r.length;
                                    if (a) {
                                        var o = r[a - 1].end;
                                        e[i].start - o < n ? e[i].end > o && (r[a - 1].end = e[i].end) : r.push(e[i])
                                    } else r.push(e[i])
                                } else r = e;
                                for (var s, l = 0, d = t, c = t, p = 0; p < r.length; p++) {
                                    var u = r[p].start, g = r[p].end;
                                    if (t + n >= u && t < g) d = u, l = (c = g) - t; else if (t + n < u) {
                                        s = u;
                                        break
                                    }
                                }
                                return {len: l, start: d || 0, end: c || 0, nextStart: s}
                            }, e.getBuffered = function (e) {
                                try {
                                    return e.buffered
                                } catch (e) {
                                    return l.logger.log("failed to get media.buffered", e), Se
                                }
                            }, e
                        }(), ke = function (e, t, n, r, i, a) {
                            void 0 === r && (r = 0), void 0 === i && (i = -1), void 0 === a && (a = !1), this.level = void 0, this.sn = void 0, this.part = void 0, this.id = void 0, this.size = void 0, this.partial = void 0, this.transmuxing = {
                                start: 0,
                                executeStart: 0,
                                executeEnd: 0,
                                end: 0
                            }, this.buffering = {
                                audio: {start: 0, executeStart: 0, executeEnd: 0, end: 0},
                                video: {start: 0, executeStart: 0, executeEnd: 0, end: 0},
                                audiovideo: {start: 0, executeStart: 0, executeEnd: 0, end: 0}
                            }, this.level = e, this.sn = t, this.id = n, this.size = r, this.part = i, this.partial = a
                        };

                        function Ce(e, t) {
                            if (e) {
                                var n = e.start + t;
                                e.start = e.startPTS = n, e.endPTS = n + e.duration
                            }
                        }

                        function Le(e, t) {
                            for (var n = t.fragments, r = 0, i = n.length; r < i; r++) Ce(n[r], e);
                            t.fragmentHint && Ce(t.fragmentHint, e), t.alignedSliding = !0
                        }

                        const Re = function (e, t) {
                            for (var n = 0, r = e.length - 1, i = null, a = null; n <= r;) {
                                var o = t(a = e[i = (n + r) / 2 | 0]);
                                if (o > 0) n = i + 1; else {
                                    if (!(o < 0)) return a;
                                    r = i - 1
                                }
                            }
                            return null
                        };

                        function Pe(e, t, n) {
                            if (void 0 === e && (e = 0), void 0 === t && (t = 0), n.start <= e && n.start + n.duration > e) return 0;
                            var r = Math.min(t, n.duration + (n.deltaPTS ? n.deltaPTS : 0));
                            return n.start + n.duration - r <= e ? 1 : n.start - r > e && n.start ? -1 : 0
                        }

                        function Ie(e, t, n) {
                            var r = 1e3 * Math.min(t, n.duration + (n.deltaPTS ? n.deltaPTS : 0));
                            return (n.endProgramDateTime || 0) - r > e
                        }

                        var Me = n(21);

                        function De(e, t) {
                            return (De = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
                                return e.__proto__ = t, e
                            })(e, t)
                        }

                        var Oe = "STOPPED", Be = "IDLE", Ne = "KEY_LOADING", Fe = "FRAG_LOADING",
                            Ue = "FRAG_LOADING_WAITING_RETRY", He = "PARSING", Ye = "PARSED", Ge = "ENDED",
                            Ve = "ERROR", Ke = "WAITING_LEVEL", ze = function (e) {
                                var t, n;

                                function r(t, n, r, i) {
                                    var a;
                                    return (a = e.call(this) || this).hls = void 0, a.fragPrevious = null, a.fragCurrent = null, a.fragmentTracker = void 0, a.transmuxer = null, a._state = Oe, a.media = null, a.mediaBuffer = null, a.config = void 0, a.bitrateTest = !1, a.lastCurrentTime = 0, a.nextLoadPosition = 0, a.startPosition = 0, a.loadedmetadata = !1, a.fragLoadError = 0, a.retryDate = 0, a.levels = null, a.fragmentLoader = void 0, a.keyLoader = void 0, a.levelLastLoaded = null, a.startFragRequested = !1, a.decrypter = void 0, a.initPTS = [], a.onvseeking = null, a.onvended = null, a.logPrefix = "", a.log = void 0, a.warn = void 0, a.logPrefix = i, a.log = l.logger.log.bind(l.logger, i + ":"), a.warn = l.logger.warn.bind(l.logger, i + ":"), a.hls = t, a.fragmentLoader = new ye(t.config), a.keyLoader = r, a.fragmentTracker = n, a.config = t.config, a.decrypter = new Me.default(t.config), t.on(o.Events.LEVEL_SWITCHING, a.onLevelSwitching, function (e) {
                                        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                        return e
                                    }(a)), a
                                }

                                n = e, (t = r).prototype = Object.create(n.prototype), t.prototype.constructor = t, De(t, n);
                                var i, d, c = r.prototype;
                                return c.doTick = function () {
                                    this.onTickEnd()
                                }, c.onTickEnd = function () {
                                }, c.startLoad = function (e) {
                                }, c.stopLoad = function () {
                                    this.fragmentLoader.abort(), this.keyLoader.abort();
                                    var e = this.fragCurrent;
                                    e && (e.abortRequests(), this.fragmentTracker.removeFragment(e)), this.resetTransmuxer(), this.fragCurrent = null, this.fragPrevious = null, this.clearInterval(), this.clearNextTick(), this.state = Oe
                                }, c._streamEnded = function (e, t) {
                                    if (t.live || e.nextStart || !e.end || !this.media) return !1;
                                    var n = t.partList;
                                    if (null != n && n.length) {
                                        var r = n[n.length - 1];
                                        return xe.isBuffered(this.media, r.start + r.duration / 2)
                                    }
                                    var i = t.fragments[t.fragments.length - 1].type;
                                    return this.fragmentTracker.isEndListAppended(i)
                                }, c.getLevelDetails = function () {
                                    var e;
                                    if (this.levels && null !== this.levelLastLoaded) return null === (e = this.levels[this.levelLastLoaded]) || void 0 === e ? void 0 : e.details
                                }, c.onMediaAttached = function (e, t) {
                                    var n = this.media = this.mediaBuffer = t.media;
                                    this.onvseeking = this.onMediaSeeking.bind(this), this.onvended = this.onMediaEnded.bind(this), n.addEventListener("seeking", this.onvseeking), n.addEventListener("ended", this.onvended);
                                    var r = this.config;
                                    this.levels && r.autoStartLoad && this.state === Oe && this.startLoad(r.startPosition)
                                }, c.onMediaDetaching = function () {
                                    var e = this.media;
                                    null != e && e.ended && (this.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0), e && this.onvseeking && this.onvended && (e.removeEventListener("seeking", this.onvseeking), e.removeEventListener("ended", this.onvended), this.onvseeking = this.onvended = null), this.keyLoader && this.keyLoader.detach(), this.media = this.mediaBuffer = null, this.loadedmetadata = !1, this.fragmentTracker.removeAllFragments(), this.stopLoad()
                                }, c.onMediaSeeking = function () {
                                    var e = this.config, t = this.fragCurrent, n = this.media, r = this.mediaBuffer,
                                        i = this.state, o = n ? n.currentTime : 0,
                                        s = xe.bufferInfo(r || n, o, e.maxBufferHole);
                                    if (this.log("media seeking to " + ((0, a.isFiniteNumber)(o) ? o.toFixed(3) : o) + ", state: " + i), this.state === Ge) this.resetLoadingState(); else if (t) {
                                        var l = e.maxFragLookUpTolerance, d = t.start - l, c = t.start + t.duration + l;
                                        if (!s.len || c < s.start || d > s.end) {
                                            var p = o > c;
                                            (o < d || p) && (p && t.loader && (this.log("seeking outside of buffer while fragment load in progress, cancel fragment load"), t.abortRequests()), this.resetLoadingState())
                                        }
                                    }
                                    n && (this.lastCurrentTime = o), this.loadedmetadata || s.len || (this.nextLoadPosition = this.startPosition = o), this.tickImmediate()
                                }, c.onMediaEnded = function () {
                                    this.startPosition = this.lastCurrentTime = 0
                                }, c.onLevelSwitching = function (e, t) {
                                    this.fragLoadError = 0
                                }, c.onHandlerDestroying = function () {
                                    this.stopLoad(), e.prototype.onHandlerDestroying.call(this)
                                }, c.onHandlerDestroyed = function () {
                                    this.state = Oe, this.hls.off(o.Events.LEVEL_SWITCHING, this.onLevelSwitching, this), this.fragmentLoader && this.fragmentLoader.destroy(), this.keyLoader && this.keyLoader.destroy(), this.decrypter && this.decrypter.destroy(), this.hls = this.log = this.warn = this.decrypter = this.keyLoader = this.fragmentLoader = this.fragmentTracker = null, e.prototype.onHandlerDestroyed.call(this)
                                }, c.loadFragment = function (e, t, n) {
                                    this._loadFragForPlayback(e, t, n)
                                }, c._loadFragForPlayback = function (e, t, n) {
                                    var r = this;
                                    this._doFragLoad(e, t, n, (function (t) {
                                        if (r.fragContextChanged(e)) return r.warn("Fragment " + e.sn + (t.part ? " p: " + t.part.index : "") + " of level " + e.level + " was dropped during download."), void r.fragmentTracker.removeFragment(e);
                                        e.stats.chunkCount++, r._handleFragmentLoadProgress(t)
                                    })).then((function (t) {
                                        if (t) {
                                            r.fragLoadError = 0;
                                            var n = r.state;
                                            r.fragContextChanged(e) ? (n === Fe || !r.fragCurrent && n === He) && (r.fragmentTracker.removeFragment(e), r.state = Be) : ("payload" in t && (r.log("Loaded fragment " + e.sn + " of level " + e.level), r.hls.trigger(o.Events.FRAG_LOADED, t)), r._handleFragmentLoadComplete(t))
                                        }
                                    })).catch((function (t) {
                                        r.state !== Oe && r.state !== Ve && (r.warn(t), r.resetFragmentLoading(e))
                                    }))
                                }, c.flushMainBuffer = function (e, t, n) {
                                    if (void 0 === n && (n = null), e - t) {
                                        var r = {startOffset: e, endOffset: t, type: n};
                                        this.fragLoadError = 0, this.hls.trigger(o.Events.BUFFER_FLUSHING, r)
                                    }
                                }, c._loadInitSegment = function (e, t) {
                                    var n = this;
                                    this._doFragLoad(e, t).then((function (t) {
                                        if (!t || n.fragContextChanged(e) || !n.levels) throw new Error("init load aborted");
                                        return t
                                    })).then((function (t) {
                                        var r = n.hls, i = t.payload, a = e.decryptdata;
                                        if (i && i.byteLength > 0 && a && a.key && a.iv && "AES-128" === a.method) {
                                            var s = self.performance.now();
                                            return n.decrypter.decrypt(new Uint8Array(i), a.key.buffer, a.iv.buffer).then((function (n) {
                                                var i = self.performance.now();
                                                return r.trigger(o.Events.FRAG_DECRYPTED, {
                                                    frag: e,
                                                    payload: n,
                                                    stats: {tstart: s, tdecrypt: i}
                                                }), t.payload = n, t
                                            }))
                                        }
                                        return t
                                    })).then((function (t) {
                                        var r = n.fragCurrent, i = n.hls, a = n.levels;
                                        if (!a) throw new Error("init load aborted, missing levels");
                                        a[e.level].details;
                                        var s = e.stats;
                                        n.state = Be, n.fragLoadError = 0, e.data = new Uint8Array(t.payload), s.parsing.start = s.buffering.start = self.performance.now(), s.parsing.end = s.buffering.end = self.performance.now(), t.frag === r && i.trigger(o.Events.FRAG_BUFFERED, {
                                            stats: s,
                                            frag: r,
                                            part: null,
                                            id: e.type
                                        }), n.tick()
                                    })).catch((function (t) {
                                        n.state !== Oe && n.state !== Ve && (n.warn(t), n.resetFragmentLoading(e))
                                    }))
                                }, c.fragContextChanged = function (e) {
                                    var t = this.fragCurrent;
                                    return !e || !t || e.level !== t.level || e.sn !== t.sn || e.urlId !== t.urlId
                                }, c.fragBufferedComplete = function (e, t) {
                                    var n, r, i = this.mediaBuffer ? this.mediaBuffer : this.media;
                                    this.log("Buffered " + e.type + " sn: " + e.sn + (t ? " part: " + t.index : "") + " of " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + " " + e.level + " (frag:[" + (e.startPTS || NaN).toFixed(3) + "-" + (e.endPTS || NaN).toFixed(3) + "] > buffer:" + (i ? function (e) {
                                        for (var t = "", n = e.length, r = 0; r < n; r++) t += "[" + e.start(r).toFixed(3) + "-" + e.end(r).toFixed(3) + "]";
                                        return t
                                    }(xe.getBuffered(i)) : "(detached)") + ")"), this.state = Be, i && (!this.loadedmetadata && e.type == F.PlaylistLevelType.MAIN && i.buffered.length && (null === (n = this.fragCurrent) || void 0 === n ? void 0 : n.sn) === (null === (r = this.fragPrevious) || void 0 === r ? void 0 : r.sn) && (this.loadedmetadata = !0, this.seekToStartPos()), this.tick())
                                }, c.seekToStartPos = function () {
                                }, c._handleFragmentLoadComplete = function (e) {
                                    var t = this.transmuxer;
                                    if (t) {
                                        var n = e.frag, r = e.part, i = e.partsLoaded,
                                            a = !i || 0 === i.length || i.some((function (e) {
                                                return !e
                                            })), o = new ke(n.level, n.sn, n.stats.chunkCount + 1, 0, r ? r.index : -1, !a);
                                        t.flush(o)
                                    }
                                }, c._handleFragmentLoadProgress = function (e) {
                                }, c._doFragLoad = function (e, t, n, r) {
                                    var i, s = this;
                                    if (void 0 === n && (n = null), !this.levels) throw new Error("frag load aborted, missing levels");
                                    var l = null;
                                    if (!e.encrypted || null !== (i = e.decryptdata) && void 0 !== i && i.key ? !e.encrypted && t.encryptedFragments.length && this.keyLoader.loadClear(e, t.encryptedFragments) : (this.log("Loading key for " + e.sn + " of [" + t.startSN + "-" + t.endSN + "], " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + " " + e.level), this.state = Ne, this.fragCurrent = e, l = this.keyLoader.load(e).then((function (e) {
                                        if (!s.fragContextChanged(e.frag)) return s.hls.trigger(o.Events.KEY_LOADED, e), s.state === Ne && (s.state = Be), e
                                    })), this.hls.trigger(o.Events.KEY_LOADING, {frag: e}), this.throwIfFragContextChanged("KEY_LOADING")), n = Math.max(e.start, n || 0), this.config.lowLatencyMode && t) {
                                        var d = t.partList;
                                        if (d && r) {
                                            n > e.end && t.fragmentHint && (e = t.fragmentHint);
                                            var c = this.getNextPart(d, e, n);
                                            if (c > -1) {
                                                var p = d[c];
                                                return this.log("Loading part sn: " + e.sn + " p: " + p.index + " cc: " + e.cc + " of playlist [" + t.startSN + "-" + t.endSN + "] parts [0-" + c + "-" + (d.length - 1) + "] " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + ": " + e.level + ", target: " + parseFloat(n.toFixed(3))), this.nextLoadPosition = p.start + p.duration, this.state = Fe, this.hls.trigger(o.Events.FRAG_LOADING, {
                                                    frag: e,
                                                    part: d[c],
                                                    targetBufferTime: n
                                                }), this.throwIfFragContextChanged("FRAG_LOADING parts"), l ? l.then((function (t) {
                                                    return !t || s.fragContextChanged(t.frag) ? null : s.doFragPartsLoad(e, d, c, r)
                                                })).catch((function (e) {
                                                    return s.handleFragLoadError(e)
                                                })) : this.doFragPartsLoad(e, d, c, r).catch((function (e) {
                                                    return s.handleFragLoadError(e)
                                                }))
                                            }
                                            if (!e.url || this.loadedEndOfParts(d, n)) return Promise.resolve(null)
                                        }
                                    }
                                    this.log("Loading fragment " + e.sn + " cc: " + e.cc + " " + (t ? "of [" + t.startSN + "-" + t.endSN + "] " : "") + ("[stream-controller]" === this.logPrefix ? "level" : "track") + ": " + e.level + ", target: " + parseFloat(n.toFixed(3))), (0, a.isFiniteNumber)(e.sn) && !this.bitrateTest && (this.nextLoadPosition = e.start + e.duration), this.state = Fe, this.hls.trigger(o.Events.FRAG_LOADING, {
                                        frag: e,
                                        targetBufferTime: n
                                    }), this.throwIfFragContextChanged("FRAG_LOADING");
                                    var u = this.config.progressive;
                                    return u && l ? l.then((function (t) {
                                        return !t || s.fragContextChanged(null == t ? void 0 : t.frag) ? null : s.fragmentLoader.load(e, r)
                                    })).catch((function (e) {
                                        return s.handleFragLoadError(e)
                                    })) : Promise.all([this.fragmentLoader.load(e, u ? r : void 0), l]).then((function (e) {
                                        var t = e[0];
                                        return !u && t && r && r(t), t
                                    })).catch((function (e) {
                                        return s.handleFragLoadError(e)
                                    }))
                                }, c.throwIfFragContextChanged = function (e) {
                                    if (null === this.fragCurrent) throw new Error("frag load aborted, context changed in " + e)
                                }, c.doFragPartsLoad = function (e, t, n, r) {
                                    var i = this;
                                    return new Promise((function (a, s) {
                                        var l = [];
                                        !function n(d) {
                                            var c = t[d];
                                            i.fragmentLoader.loadPart(e, c, r).then((function (r) {
                                                l[c.index] = r;
                                                var s = r.part;
                                                i.hls.trigger(o.Events.FRAG_LOADED, r);
                                                var p = t[d + 1];
                                                if (!p || p.fragment !== e) return a({frag: e, part: s, partsLoaded: l});
                                                n(d + 1)
                                            })).catch(s)
                                        }(n)
                                    }))
                                }, c.handleFragLoadError = function (e) {
                                    if ("data" in e) {
                                        var t = e.data;
                                        e.data && t.details === s.ErrorDetails.INTERNAL_ABORTED ? this.handleFragLoadAborted(t.frag, t.part) : this.hls.trigger(o.Events.ERROR, t)
                                    } else this.hls.trigger(o.Events.ERROR, {
                                        type: s.ErrorTypes.OTHER_ERROR,
                                        details: s.ErrorDetails.INTERNAL_EXCEPTION,
                                        err: e,
                                        fatal: !0
                                    });
                                    return null
                                }, c._handleTransmuxerFlush = function (e) {
                                    var t = this.getCurrentContext(e);
                                    if (t && this.state === He) {
                                        var n = t.frag, r = t.part, i = t.level, a = self.performance.now();
                                        n.stats.parsing.end = a, r && (r.stats.parsing.end = a), this.updateLevelTiming(n, r, i, e.partial)
                                    } else this.fragCurrent || this.state === Oe || this.state === Ve || (this.state = Be)
                                }, c.getCurrentContext = function (e) {
                                    var t = this.levels, n = e.level, r = e.sn, i = e.part;
                                    if (!t || !t[n]) return this.warn("Levels object was unset while buffering fragment " + r + " of level " + n + ". The current chunk will not be buffered."), null;
                                    var a = t[n], o = i > -1 ? function (e, t, n) {
                                        if (!e || !e.details) return null;
                                        var r = e.details.partList;
                                        if (r) for (var i = r.length; i--;) {
                                            var a = r[i];
                                            if (a.index === n && a.fragment.sn === t) return a
                                        }
                                        return null
                                    }(a, r, i) : null, s = o ? o.fragment : function (e, t, n) {
                                        if (!e || !e.details) return null;
                                        var r = e.details, i = r.fragments[t - r.startSN];
                                        return i || ((i = r.fragmentHint) && i.sn === t ? i : t < r.startSN && n && n.sn === t ? n : null)
                                    }(a, r, this.fragCurrent);
                                    return s ? {frag: s, part: o, level: a} : null
                                }, c.bufferFragmentData = function (e, t, n, r) {
                                    if (e && this.state === He) {
                                        var i = e.data1, a = e.data2, s = i;
                                        if (i && a && (s = (0, A.appendUint8Array)(i, a)), s && s.length) {
                                            var l = {type: e.type, frag: t, part: n, chunkMeta: r, parent: t.type, data: s};
                                            this.hls.trigger(o.Events.BUFFER_APPENDING, l), e.dropped && e.independent && !n && this.flushBufferGap(t)
                                        }
                                    }
                                }, c.flushBufferGap = function (e) {
                                    var t = this.media;
                                    if (t) if (xe.isBuffered(t, t.currentTime)) {
                                        var n = t.currentTime, r = xe.bufferInfo(t, n, 0), i = e.duration,
                                            a = Math.min(2 * this.config.maxFragLookUpTolerance, .25 * i),
                                            o = Math.max(Math.min(e.start - a, r.end - a), n + a);
                                        e.start - o > a && this.flushMainBuffer(o, e.start)
                                    } else this.flushMainBuffer(0, e.start)
                                }, c.getFwdBufferInfo = function (e, t) {
                                    var n = this.config, r = this.getLoadPosition();
                                    if (!(0, a.isFiniteNumber)(r)) return null;
                                    var i = xe.bufferInfo(e, r, n.maxBufferHole);
                                    if (0 === i.len && void 0 !== i.nextStart) {
                                        var o = this.fragmentTracker.getBufferedFrag(r, t);
                                        if (o && i.nextStart < o.end) return xe.bufferInfo(e, r, Math.max(i.nextStart, n.maxBufferHole))
                                    }
                                    return i
                                }, c.getMaxBufferLength = function (e) {
                                    var t, n = this.config;
                                    return t = e ? Math.max(8 * n.maxBufferSize / e, n.maxBufferLength) : n.maxBufferLength, Math.min(t, n.maxMaxBufferLength)
                                }, c.reduceMaxBufferLength = function (e) {
                                    var t = this.config, n = e || t.maxBufferLength;
                                    return t.maxMaxBufferLength >= n && (t.maxMaxBufferLength /= 2, this.warn("Reduce max buffer length to " + t.maxMaxBufferLength + "s"), !0)
                                }, c.getNextFragment = function (e, t) {
                                    var n = t.fragments, r = n.length;
                                    if (!r) return null;
                                    var i, a = this.config, o = n[0].start;
                                    if (t.live) {
                                        var s = a.initialLiveManifestSize;
                                        if (r < s) return this.warn("Not enough fragments to start playback (have: " + r + ", need: " + s + ")"), null;
                                        t.PTSKnown || this.startFragRequested || -1 !== this.startPosition || (i = this.getInitialLiveFragment(t, n), this.startPosition = i ? this.hls.liveSyncPosition || i.start : e)
                                    } else e <= o && (i = n[0]);
                                    if (!i) {
                                        var l = a.lowLatencyMode ? t.partEnd : t.fragmentEnd;
                                        i = this.getFragmentAtPosition(e, l, t)
                                    }
                                    return this.mapToInitFragWhenRequired(i)
                                }, c.mapToInitFragWhenRequired = function (e) {
                                    return null == e || !e.initSegment || null != e && e.initSegment.data || this.bitrateTest ? e : e.initSegment
                                }, c.getNextPart = function (e, t, n) {
                                    for (var r = -1, i = !1, a = !0, o = 0, s = e.length; o < s; o++) {
                                        var l = e[o];
                                        if (a = a && !l.independent, r > -1 && n < l.start) break;
                                        var d = l.loaded;
                                        d ? r = -1 : (i || l.independent || a) && l.fragment === t && (r = o), i = d
                                    }
                                    return r
                                }, c.loadedEndOfParts = function (e, t) {
                                    var n = e[e.length - 1];
                                    return n && t > n.start && n.loaded
                                }, c.getInitialLiveFragment = function (e, t) {
                                    var n = this.fragPrevious, r = null;
                                    if (n) {
                                        if (e.hasProgramDateTime && (this.log("Live playlist, switching playlist, load frag with same PDT: " + n.programDateTime), r = function (e, t, n) {
                                            if (null === t || !Array.isArray(e) || !e.length || !(0, a.isFiniteNumber)(t)) return null;
                                            if (t < (e[0].programDateTime || 0)) return null;
                                            if (t >= (e[e.length - 1].endProgramDateTime || 0)) return null;
                                            n = n || 0;
                                            for (var r = 0; r < e.length; ++r) {
                                                var i = e[r];
                                                if (Ie(t, n, i)) return i
                                            }
                                            return null
                                        }(t, n.endProgramDateTime, this.config.maxFragLookUpTolerance)), !r) {
                                            var i = n.sn + 1;
                                            if (i >= e.startSN && i <= e.endSN) {
                                                var o = t[i - e.startSN];
                                                n.cc === o.cc && (r = o, this.log("Live playlist, switching playlist, load frag with next SN: " + r.sn))
                                            }
                                            r || (r = function (e, t) {
                                                return Re(e, (function (e) {
                                                    return e.cc < t ? 1 : e.cc > t ? -1 : 0
                                                }))
                                            }(t, n.cc)) && this.log("Live playlist, switching playlist, load frag with same CC: " + r.sn)
                                        }
                                    } else {
                                        var s = this.hls.liveSyncPosition;
                                        null !== s && (r = this.getFragmentAtPosition(s, this.bitrateTest ? e.fragmentEnd : e.edge, e))
                                    }
                                    return r
                                }, c.getFragmentAtPosition = function (e, t, n) {
                                    var r, i = this.config, a = this.fragPrevious, o = n.fragments, s = n.endSN,
                                        l = n.fragmentHint, d = i.maxFragLookUpTolerance,
                                        c = !!(i.lowLatencyMode && n.partList && l);
                                    if (c && l && !this.bitrateTest && (o = o.concat(l), s = l.sn), r = e < t ? function (e, t, n, r) {
                                        void 0 === n && (n = 0), void 0 === r && (r = 0);
                                        var i = null;
                                        if (e ? i = t[e.sn - t[0].sn + 1] || null : 0 === n && 0 === t[0].start && (i = t[0]), i && 0 === Pe(n, r, i)) return i;
                                        var a = Re(t, Pe.bind(null, n, r));
                                        return !a || a === e && i ? i : a
                                    }(a, o, e, e > t - d ? 0 : d) : o[o.length - 1]) {
                                        var p = r.sn - n.startSN;
                                        if (this.fragmentTracker.getState(r) === le.OK && (a = r), a && r.sn === a.sn && !c && a && r.level === a.level) {
                                            var u = o[p + 1];
                                            r.sn < s && this.fragmentTracker.getState(u) !== le.OK ? (this.log("SN " + r.sn + " just loaded, load next one: " + u.sn), r = u) : r = null
                                        }
                                    }
                                    return r
                                }, c.synchronizeToLiveEdge = function (e) {
                                    var t = this.config, n = this.media;
                                    if (n) {
                                        var r = this.hls.liveSyncPosition, i = n.currentTime, a = e.fragments[0].start,
                                            o = e.edge, s = i >= a - t.maxFragLookUpTolerance && i <= o;
                                        if (null !== r && n.duration > r && (i < r || !s)) {
                                            var l = void 0 !== t.liveMaxLatencyDuration ? t.liveMaxLatencyDuration : t.liveMaxLatencyDurationCount * e.targetduration;
                                            (!s && n.readyState < 4 || i < o - l) && (this.loadedmetadata || (this.nextLoadPosition = r), n.readyState && (this.warn("Playback: " + i.toFixed(3) + " is located too far from the end of live sliding playlist: " + o + ", reset currentTime to : " + r.toFixed(3)), n.currentTime = r))
                                        }
                                    }
                                }, c.alignPlaylists = function (e, t) {
                                    var n = this.levels, r = this.levelLastLoaded, i = this.fragPrevious,
                                        o = null !== r ? n[r] : null, s = e.fragments.length;
                                    if (!s) return this.warn("No fragments in live playlist"), 0;
                                    var d = e.fragments[0].start, c = !t, p = e.alignedSliding && (0, a.isFiniteNumber)(d);
                                    if (c || !p && !d) {
                                        !function (e, t, n) {
                                            t && (function (e, t, n) {
                                                if (function (e, t, n) {
                                                    return !(!t.details || !(n.endCC > n.startCC || e && e.cc < n.startCC))
                                                }(e, n, t)) {
                                                    var r = function (e, t, n) {
                                                        void 0 === n && (n = 0);
                                                        var r = e.fragments, i = t.fragments;
                                                        if (i.length && r.length) {
                                                            var a = function (e, t) {
                                                                for (var n = null, r = 0, i = e.length; r < i; r++) {
                                                                    var a = e[r];
                                                                    if (a && a.cc === t) {
                                                                        n = a;
                                                                        break
                                                                    }
                                                                }
                                                                return n
                                                            }(r, i[0].cc);
                                                            if (a && (!a || a.startPTS)) return a;
                                                            l.logger.log("No frag in previous level to align on")
                                                        } else l.logger.log("No fragments to align")
                                                    }(n.details, t);
                                                    r && (0, a.isFiniteNumber)(r.start) && (l.logger.log("Adjusting PTS using last level due to CC increase within current level " + t.url), Le(r.start, t))
                                                }
                                            }(e, n, t), !n.alignedSliding && t.details && function (e, t) {
                                                if (t.fragments.length && e.hasProgramDateTime && t.hasProgramDateTime) {
                                                    var n = t.fragments[0].programDateTime,
                                                        r = e.fragments[0].programDateTime,
                                                        i = (r - n) / 1e3 + t.fragments[0].start;
                                                    i && (0, a.isFiniteNumber)(i) && (l.logger.log("Adjusting PTS using programDateTime delta " + (r - n) + "ms, sliding:" + i.toFixed(3) + " " + e.url + " "), Le(i, e))
                                                }
                                            }(n, t.details), n.alignedSliding || !t.details || n.skippedSegments || ie(t.details, n))
                                        }(i, o, e);
                                        var u = e.fragments[0].start;
                                        return this.log("Live playlist sliding: " + u.toFixed(2) + " start-sn: " + (t ? t.startSN : "na") + "->" + e.startSN + " prev-sn: " + (i ? i.sn : "na") + " fragments: " + s), u
                                    }
                                    return d
                                }, c.waitForCdnTuneIn = function (e) {
                                    return e.live && e.canBlockReload && e.partTarget && e.tuneInGoal > Math.max(e.partHoldBack, 3 * e.partTarget)
                                }, c.setStartPosition = function (e, t) {
                                    var n = this.startPosition;
                                    if (n < t && (n = -1), -1 === n || -1 === this.lastCurrentTime) {
                                        var r = e.startTimeOffset;
                                        (0, a.isFiniteNumber)(r) ? (n = t + r, r < 0 && (n += e.totalduration), n = Math.min(Math.max(t, n), t + e.totalduration), this.log("Start time offset " + r + " found in playlist, adjust startPosition to " + n), this.startPosition = n) : e.live ? n = this.hls.liveSyncPosition || t : this.startPosition = n = 0, this.lastCurrentTime = n
                                    }
                                    this.nextLoadPosition = n
                                }, c.getLoadPosition = function () {
                                    var e = this.media, t = 0;
                                    return this.loadedmetadata && e ? t = e.currentTime : this.nextLoadPosition && (t = this.nextLoadPosition), t
                                }, c.handleFragLoadAborted = function (e, t) {
                                    this.transmuxer && "initSegment" !== e.sn && e.stats.aborted && (this.warn("Fragment " + e.sn + (t ? " part" + t.index : "") + " of level " + e.level + " was aborted"), this.resetFragmentLoading(e))
                                }, c.resetFragmentLoading = function (e) {
                                    this.fragCurrent && (this.fragContextChanged(e) || this.state === Ue) || (this.state = Be)
                                }, c.onFragmentOrKeyLoadError = function (e, t) {
                                    if (t.fatal) return this.stopLoad(), void (this.state = Ve);
                                    var n = this.config;
                                    if (t.chunkMeta) {
                                        var r = this.getCurrentContext(t.chunkMeta);
                                        r && (t.frag = r.frag, t.levelRetry = !0, this.fragLoadError = n.fragLoadingMaxRetry)
                                    }
                                    var i = t.frag;
                                    if (i && i.type === e) if (this.fragCurrent, this.fragLoadError + 1 <= n.fragLoadingMaxRetry) {
                                        this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition);
                                        var a = Math.min(Math.pow(2, this.fragLoadError) * n.fragLoadingRetryDelay, n.fragLoadingMaxRetryTimeout);
                                        this.warn("Fragment " + i.sn + " of " + e + " " + i.level + " failed to load, retrying in " + a + "ms"), this.retryDate = self.performance.now() + a, this.fragLoadError++, this.state = Ue
                                    } else t.levelRetry ? (e === F.PlaylistLevelType.AUDIO && (this.fragCurrent = null), this.fragLoadError = 0, this.state = Be) : (l.logger.error(t.details + " reaches max retry, redispatch as fatal ..."), t.fatal = !0, this.hls.stopLoad(), this.state = Ve)
                                }, c.afterBufferFlushed = function (e, t, n) {
                                    if (e) {
                                        var r = xe.getBuffered(e);
                                        this.fragmentTracker.detectEvictedFragments(t, r, n), this.state === Ge && this.resetLoadingState()
                                    }
                                }, c.resetLoadingState = function () {
                                    this.log("Reset loading state"), this.fragCurrent = null, this.fragPrevious = null, this.state = Be
                                }, c.resetStartWhenNotLoaded = function (e) {
                                    if (!this.loadedmetadata) {
                                        this.startFragRequested = !1;
                                        var t = this.levels ? this.levels[e].details : null;
                                        null != t && t.live ? (this.startPosition = -1, this.setStartPosition(t, 0), this.resetLoadingState()) : this.nextLoadPosition = this.startPosition
                                    }
                                }, c.updateLevelTiming = function (e, t, n, r) {
                                    var i = this, a = n.details;
                                    Object.keys(e.elementaryStreams).reduce((function (t, s) {
                                        var l = e.elementaryStreams[s];
                                        if (l) {
                                            var d = l.endPTS - l.startPTS;
                                            if (d <= 0) return i.warn("Could not parse fragment " + e.sn + " " + s + " duration reliably (" + d + ")"), t || !1;
                                            var c = r ? 0 : re(a, e, l.startPTS, l.endPTS, l.startDTS, l.endDTS);
                                            return i.hls.trigger(o.Events.LEVEL_PTS_UPDATED, {
                                                details: a,
                                                level: n,
                                                drift: c,
                                                type: s,
                                                frag: e,
                                                start: l.startPTS,
                                                end: l.endPTS
                                            }), !0
                                        }
                                        return t
                                    }), !1) || (this.warn("Found no media in fragment " + e.sn + " of level " + n.id + " resetting transmuxer to fallback to playlist timing"), this.resetTransmuxer()), this.state = Ye, this.hls.trigger(o.Events.FRAG_PARSED, {
                                        frag: e,
                                        part: t
                                    })
                                }, c.resetTransmuxer = function () {
                                    this.transmuxer && (this.transmuxer.destroy(), this.transmuxer = null)
                                }, i = r, (d = [{
                                    key: "state", get: function () {
                                        return this._state
                                    }, set: function (e) {
                                        var t = this._state;
                                        t !== e && (this._state = e, this.log(t + "->" + e))
                                    }
                                }]) && function (e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                            if ("object" != typeof e || null === e) return e;
                                            var n = e[Symbol.toPrimitive];
                                            if (void 0 !== n) {
                                                var r = n.call(e, "string");
                                                if ("object" != typeof r) return r;
                                                throw new TypeError("@@toPrimitive must return a primitive value.")
                                            }
                                            return String(e)
                                        }(r.key)) ? i : String(i), r)
                                    }
                                    var i
                                }(i.prototype, d), Object.defineProperty(i, "prototype", {writable: !1}), r
                            }(we);

                        function je() {
                            return self.MediaSource || self.WebKitMediaSource
                        }

                        function Qe() {
                            return self.SourceBuffer || self.WebKitSourceBuffer
                        }

                        var We = function () {
                                var e = ENTRY_MODULE, t = {}, n = function n(r) {
                                    var i = t[r];
                                    if (void 0 !== i) return i.exports;
                                    var a = t[r] = {exports: {}};
                                    return e[r].call(a.exports, a, a.exports, n), a.exports
                                };
                                n.m = e, n.n = function (e) {
                                    var t = e && e.__esModule ? function () {
                                        return e.default
                                    } : function () {
                                        return e
                                    };
                                    return n.d(t, {a: t}), t
                                }, n.d = function (e, t) {
                                    for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {
                                        enumerable: !0,
                                        get: t[r]
                                    })
                                }, n.o = function (e, t) {
                                    return Object.prototype.hasOwnProperty.call(e, t)
                                }, n.r = function (e) {
                                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e, "__esModule", {value: !0})
                                };
                                var r = n(ENTRY_MODULE);
                                return r.default || r
                            }.toString().split("ENTRY_MODULE"),
                            qe = "\\(\\s*(/\\*.*?\\*/)?\\s*.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)";

                        function Xe(e) {
                            return (e + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
                        }

                        function Je(e, t, r) {
                            var i = {};
                            i[r] = [];
                            var a = t.toString().replace(/^"[^"]+"/, "function"),
                                o = a.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/) || a.match(/^\(\w+,\s*\w+,\s*(\w+)\)\s?\=\s?\>/);
                            if (!o) return i;
                            for (var s, l = o[1], d = new RegExp("(\\\\n|\\W)" + Xe(l) + qe, "g"); s = d.exec(a);) "dll-reference" !== s[3] && i[r].push(s[3]);
                            for (d = new RegExp("\\(" + Xe(l) + '\\("(dll-reference\\s([\\.|\\-|\\+|\\w|/|@]+))"\\)\\)' + qe, "g"); s = d.exec(a);) e[s[2]] || (i[r].push(s[1]), e[s[2]] = n(s[1]).m), i[s[2]] = i[s[2]] || [], i[s[2]].push(s[4]);
                            for (var c, p = Object.keys(i), u = 0; u < p.length; u++) for (var g = 0; g < i[p[u]].length; g++) c = i[p[u]][g], isNaN(1 * c) || (i[p[u]][g] = 1 * i[p[u]][g]);
                            return i
                        }

                        function $e(e) {
                            return Object.keys(e).reduce((function (t, n) {
                                return t || e[n].length > 0
                            }), !1)
                        }

                        function Ze(e, t, n, r) {
                            var i = e[r].map((function (e) {
                                return '"' + e + '": ' + t[r][e].toString().replace(/^"[^"]+"/, "function")
                            })).join(",");
                            return We[0] + "{" + i + "}" + We[1] + '"' + n + '"' + We[2]
                        }

                        var et = n(764), tt = n(729), nt = je() || {
                            isTypeSupported: function () {
                                return !1
                            }
                        }, rt = function () {
                            function e(e, t, r, i) {
                                var a = this;
                                this.hls = void 0, this.id = void 0, this.observer = void 0, this.frag = null, this.part = null, this.useWorker = void 0, this.worker = void 0, this.onwmsg = void 0, this.transmuxer = null, this.onTransmuxComplete = void 0, this.onFlush = void 0;
                                var d = e.config;
                                this.hls = e, this.id = t, this.useWorker = !!d.enableWorker, this.onTransmuxComplete = r, this.onFlush = i;
                                var c = function (e, t) {
                                    (t = t || {}).frag = a.frag, t.id = a.id, a.hls.trigger(e, t)
                                };
                                this.observer = new tt.EventEmitter, this.observer.on(o.Events.FRAG_DECRYPTED, c), this.observer.on(o.Events.ERROR, c);
                                var p = {
                                    mp4: nt.isTypeSupported("video/mp4"),
                                    mpeg: nt.isTypeSupported("audio/mpeg"),
                                    mp3: nt.isTypeSupported('audio/mp4; codecs="mp3"')
                                }, u = navigator.vendor;
                                if (this.useWorker && "undefined" != typeof Worker) {
                                    var g;
                                    l.logger.log("demuxing in webworker");
                                    try {
                                        g = this.worker = function (e, t) {
                                            t = t || {};
                                            var r = {main: n.m},
                                                i = t.all ? {main: Object.keys(r.main)} : function (e, t) {
                                                    for (var n = {main: [182]}, r = {main: []}, i = {main: {}}; $e(n);) for (var a = Object.keys(n), o = 0; o < a.length; o++) {
                                                        var s = a[o], l = n[s].pop();
                                                        if (i[s] = i[s] || {}, !i[s][l] && e[s][l]) {
                                                            i[s][l] = !0, r[s] = r[s] || [], r[s].push(l);
                                                            for (var d = Je(e, e[s][l], s), c = Object.keys(d), p = 0; p < c.length; p++) n[c[p]] = n[c[p]] || [], n[c[p]] = n[c[p]].concat(d[c[p]])
                                                        }
                                                    }
                                                    return r
                                                }(r), a = "";
                                            Object.keys(i).filter((function (e) {
                                                return "main" !== e
                                            })).forEach((function (e) {
                                                for (var t = 0; i[e][t];) t++;
                                                i[e].push(t), r[e][t] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })", a = a + "var " + e + " = (" + Ze(i, r, t, modules) + ")();\n"
                                            })), a = a + "new ((" + Ze(i, r, 182, "main") + ")())(self);";
                                            var o = new window.Blob([a], {type: "text/javascript"}),
                                                s = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(o),
                                                l = new window.Worker(s);
                                            return l.objectURL = s, l
                                        }(), this.onwmsg = this.onWorkerMessage.bind(this), g.addEventListener("message", this.onwmsg), g.onerror = function (e) {
                                            a.useWorker = !1, l.logger.warn("Exception in webworker, fallback to inline"), a.hls.trigger(o.Events.ERROR, {
                                                type: s.ErrorTypes.OTHER_ERROR,
                                                details: s.ErrorDetails.INTERNAL_EXCEPTION,
                                                fatal: !1,
                                                event: "demuxerWorker",
                                                error: new Error(e.message + "  (" + e.filename + ":" + e.lineno + ")")
                                            })
                                        }, g.postMessage({
                                            cmd: "init",
                                            typeSupported: p,
                                            vendor: u,
                                            id: t,
                                            config: JSON.stringify(d)
                                        })
                                    } catch (e) {
                                        l.logger.warn("Error in worker:", e), l.logger.error("Error while initializing DemuxerWorker, fallback to inline"), g && self.URL.revokeObjectURL(g.objectURL), this.transmuxer = new et.default(this.observer, p, d, u, t), this.worker = null
                                    }
                                } else this.transmuxer = new et.default(this.observer, p, d, u, t)
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                var e = this.worker;
                                if (e) e.removeEventListener("message", this.onwmsg), e.terminate(), this.worker = null, this.onwmsg = void 0; else {
                                    var t = this.transmuxer;
                                    t && (t.destroy(), this.transmuxer = null)
                                }
                                var n = this.observer;
                                n && n.removeAllListeners(), this.frag = null, this.observer = null, this.hls = null
                            }, t.push = function (e, t, n, r, i, a, o, s, d, c) {
                                var p, u, g = this;
                                d.transmuxing.start = self.performance.now();
                                var m = this.transmuxer, f = this.worker, h = a ? a.start : i.start, _ = i.decryptdata,
                                    v = this.frag, b = !(v && i.cc === v.cc), y = !(v && d.level === v.level),
                                    A = v ? d.sn - v.sn : -1, E = this.part ? d.part - this.part.index : -1,
                                    T = 0 === A && d.id > 1 && d.id === (null == v ? void 0 : v.stats.chunkCount),
                                    w = !y && (1 === A || 0 === A && (1 === E || T && E <= 0)),
                                    S = self.performance.now();
                                (y || A || 0 === i.stats.parsing.start) && (i.stats.parsing.start = S), !a || !E && w || (a.stats.parsing.start = S);
                                var x = !(v && (null === (p = i.initSegment) || void 0 === p ? void 0 : p.url) === (null === (u = v.initSegment) || void 0 === u ? void 0 : u.url)),
                                    k = new et.TransmuxState(b, w, s, y, h, x);
                                if (!w || b || x) {
                                    l.logger.log("[transmuxer-interface, " + i.type + "]: Starting new transmux session for sn: " + d.sn + " p: " + d.part + " level: " + d.level + " id: " + d.id + "\n        discontinuity: " + b + "\n        trackSwitch: " + y + "\n        contiguous: " + w + "\n        accurateTimeOffset: " + s + "\n        timeOffset: " + h + "\n        initSegmentChange: " + x);
                                    var C = new et.TransmuxConfig(n, r, t, o, c);
                                    this.configureTransmuxer(C)
                                }
                                if (this.frag = i, this.part = a, f) f.postMessage({
                                    cmd: "demux",
                                    data: e,
                                    decryptdata: _,
                                    chunkMeta: d,
                                    state: k
                                }, e instanceof ArrayBuffer ? [e] : []); else if (m) {
                                    var L = m.push(e, _, d, k);
                                    (0, et.isPromise)(L) ? (m.async = !0, L.then((function (e) {
                                        g.handleTransmuxComplete(e)
                                    })).catch((function (e) {
                                        g.transmuxerError(e, d, "transmuxer-interface push error")
                                    }))) : (m.async = !1, this.handleTransmuxComplete(L))
                                }
                            }, t.flush = function (e) {
                                var t = this;
                                e.transmuxing.start = self.performance.now();
                                var n = this.transmuxer, r = this.worker;
                                if (r) r.postMessage({cmd: "flush", chunkMeta: e}); else if (n) {
                                    var i = n.flush(e);
                                    (0, et.isPromise)(i) || n.async ? ((0, et.isPromise)(i) || (i = Promise.resolve(i)), i.then((function (n) {
                                        t.handleFlushResult(n, e)
                                    })).catch((function (n) {
                                        t.transmuxerError(n, e, "transmuxer-interface flush error")
                                    }))) : this.handleFlushResult(i, e)
                                }
                            }, t.transmuxerError = function (e, t, n) {
                                this.hls && this.hls.trigger(o.Events.ERROR, {
                                    type: s.ErrorTypes.MEDIA_ERROR,
                                    details: s.ErrorDetails.FRAG_PARSING_ERROR,
                                    chunkMeta: t,
                                    fatal: !1,
                                    error: e,
                                    err: e,
                                    reason: n
                                })
                            }, t.handleFlushResult = function (e, t) {
                                var n = this;
                                e.forEach((function (e) {
                                    n.handleTransmuxComplete(e)
                                })), this.onFlush(t)
                            }, t.onWorkerMessage = function (e) {
                                var t = e.data, n = this.hls;
                                switch (t.event) {
                                    case"init":
                                        self.URL.revokeObjectURL(this.worker.objectURL);
                                        break;
                                    case"transmuxComplete":
                                        this.handleTransmuxComplete(t.data);
                                        break;
                                    case"flush":
                                        this.onFlush(t.data);
                                        break;
                                    case"workerLog":
                                        l.logger[t.data.logType] && l.logger[t.data.logType](t.data.message);
                                        break;
                                    default:
                                        t.data = t.data || {}, t.data.frag = this.frag, t.data.id = this.id, n.trigger(t.event, t.data)
                                }
                            }, t.configureTransmuxer = function (e) {
                                var t = this.worker, n = this.transmuxer;
                                t ? t.postMessage({cmd: "configure", config: e}) : n && n.configure(e)
                            }, t.handleTransmuxComplete = function (e) {
                                e.chunkMeta.transmuxing.end = self.performance.now(), this.onTransmuxComplete(e)
                            }, e
                        }(), it = function () {
                            function e(e, t, n, r) {
                                this.config = void 0, this.media = null, this.fragmentTracker = void 0, this.hls = void 0, this.nudgeRetry = 0, this.stallReported = !1, this.stalled = null, this.moved = !1, this.seeking = !1, this.config = e, this.media = t, this.fragmentTracker = n, this.hls = r
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                this.media = null, this.hls = this.fragmentTracker = null
                            }, t.poll = function (e, t) {
                                var n = this.config, r = this.media, i = this.stalled;
                                if (null !== r) {
                                    var a = r.currentTime, o = r.seeking, s = this.seeking && !o,
                                        d = !this.seeking && o;
                                    if (this.seeking = o, a === e) {
                                        if ((d || s) && (this.stalled = null), !(r.paused && !o || r.ended || 0 === r.playbackRate) && xe.getBuffered(r).length) {
                                            var c = xe.bufferInfo(r, a, 0), p = c.len > 0, u = c.nextStart || 0;
                                            if (p || u) {
                                                if (o) {
                                                    var g = c.len > 2,
                                                        m = !u || t && t.start <= a || u - a > 2 && !this.fragmentTracker.getPartialFragment(a);
                                                    if (g || m) return;
                                                    this.moved = !1
                                                }
                                                if (!this.moved && null !== this.stalled) {
                                                    var f, h = Math.max(u, c.start || 0) - a,
                                                        _ = this.hls.levels ? this.hls.levels[this.hls.currentLevel] : null,
                                                        v = (null == _ || null === (f = _.details) || void 0 === f ? void 0 : f.live) ? 2 * _.details.targetduration : 2;
                                                    if (h > 0 && h <= v) return void this._trySkipBufferHole(null)
                                                }
                                                var b = self.performance.now();
                                                if (null !== i) {
                                                    var y = b - i;
                                                    if (o || !(y >= 250) || (this._reportStall(c), this.media)) {
                                                        var A = xe.bufferInfo(r, a, n.maxBufferHole);
                                                        this._tryFixBufferStall(A, y)
                                                    }
                                                } else this.stalled = b
                                            }
                                        }
                                    } else if (this.moved = !0, null !== i) {
                                        if (this.stallReported) {
                                            var E = self.performance.now() - i;
                                            l.logger.warn("playback not stuck anymore @" + a + ", after " + Math.round(E) + "ms"), this.stallReported = !1
                                        }
                                        this.stalled = null, this.nudgeRetry = 0
                                    }
                                }
                            }, t._tryFixBufferStall = function (e, t) {
                                var n = this.config, r = this.fragmentTracker, i = this.media;
                                if (null !== i) {
                                    var a = i.currentTime, o = r.getPartialFragment(a);
                                    if (o && (this._trySkipBufferHole(o) || !this.media)) return;
                                    e.len > n.maxBufferHole && t > 1e3 * n.highBufferWatchdogPeriod && (l.logger.warn("Trying to nudge playhead over buffer-hole"), this.stalled = null, this._tryNudgeBuffer())
                                }
                            }, t._reportStall = function (e) {
                                var t = this.hls, n = this.media;
                                !this.stallReported && n && (this.stallReported = !0, l.logger.warn("Playback stalling at @" + n.currentTime + " due to low buffer (" + JSON.stringify(e) + ")"), t.trigger(o.Events.ERROR, {
                                    type: s.ErrorTypes.MEDIA_ERROR,
                                    details: s.ErrorDetails.BUFFER_STALLED_ERROR,
                                    fatal: !1,
                                    buffer: e.len
                                }))
                            }, t._trySkipBufferHole = function (e) {
                                var t = this.config, n = this.hls, r = this.media;
                                if (null === r) return 0;
                                for (var i = r.currentTime, a = 0, d = xe.getBuffered(r), c = 0; c < d.length; c++) {
                                    var p = d.start(c);
                                    if (i + t.maxBufferHole >= a && i < p) {
                                        var u = Math.max(p + .05, r.currentTime + .1);
                                        return l.logger.warn("skipping hole, adjusting currentTime from " + i + " to " + u), this.moved = !0, this.stalled = null, r.currentTime = u, e && n.trigger(o.Events.ERROR, {
                                            type: s.ErrorTypes.MEDIA_ERROR,
                                            details: s.ErrorDetails.BUFFER_SEEK_OVER_HOLE,
                                            fatal: !1,
                                            reason: "fragment loaded with buffer holes, seeking from " + i + " to " + u,
                                            frag: e
                                        }), u
                                    }
                                    a = d.end(c)
                                }
                                return 0
                            }, t._tryNudgeBuffer = function () {
                                var e = this.config, t = this.hls, n = this.media, r = this.nudgeRetry;
                                if (null !== n) {
                                    var i = n.currentTime;
                                    if (this.nudgeRetry++, r < e.nudgeMaxRetry) {
                                        var a = i + (r + 1) * e.nudgeOffset;
                                        l.logger.warn("Nudging 'currentTime' from " + i + " to " + a), n.currentTime = a, t.trigger(o.Events.ERROR, {
                                            type: s.ErrorTypes.MEDIA_ERROR,
                                            details: s.ErrorDetails.BUFFER_NUDGE_ON_STALL,
                                            fatal: !1
                                        })
                                    } else l.logger.error("Playhead still not moving while enough data buffered @" + i + " after " + e.nudgeMaxRetry + " nudges"), t.trigger(o.Events.ERROR, {
                                        type: s.ErrorTypes.MEDIA_ERROR,
                                        details: s.ErrorDetails.BUFFER_STALLED_ERROR,
                                        fatal: !0
                                    })
                                }
                            }, e
                        }();

                        function at(e, t) {
                            return (at = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
                                return e.__proto__ = t, e
                            })(e, t)
                        }

                        var ot = function (e) {
                            var t, n;

                            function r(t, n, r) {
                                var i;
                                return (i = e.call(this, t, n, r, "[stream-controller]") || this).audioCodecSwap = !1, i.gapController = null, i.level = -1, i._forceStartLoad = !1, i.altAudio = !1, i.audioOnly = !1, i.fragPlaying = null, i.onvplaying = null, i.onvseeked = null, i.fragLastKbps = 0, i.couldBacktrack = !1, i.backtrackFragment = null, i.audioCodecSwitch = !1, i.videoBuffer = null, i._registerListeners(), i
                            }

                            n = e, (t = r).prototype = Object.create(n.prototype), t.prototype.constructor = t, at(t, n);
                            var i, l, d = r.prototype;
                            return d._registerListeners = function () {
                                var e = this.hls;
                                e.on(o.Events.MEDIA_ATTACHED, this.onMediaAttached, this), e.on(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this), e.on(o.Events.MANIFEST_LOADING, this.onManifestLoading, this), e.on(o.Events.MANIFEST_PARSED, this.onManifestParsed, this), e.on(o.Events.LEVEL_LOADING, this.onLevelLoading, this), e.on(o.Events.LEVEL_LOADED, this.onLevelLoaded, this), e.on(o.Events.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this), e.on(o.Events.ERROR, this.onError, this), e.on(o.Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), e.on(o.Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), e.on(o.Events.BUFFER_CREATED, this.onBufferCreated, this), e.on(o.Events.BUFFER_FLUSHED, this.onBufferFlushed, this), e.on(o.Events.LEVELS_UPDATED, this.onLevelsUpdated, this), e.on(o.Events.FRAG_BUFFERED, this.onFragBuffered, this)
                            }, d._unregisterListeners = function () {
                                var e = this.hls;
                                e.off(o.Events.MEDIA_ATTACHED, this.onMediaAttached, this), e.off(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this), e.off(o.Events.MANIFEST_LOADING, this.onManifestLoading, this), e.off(o.Events.MANIFEST_PARSED, this.onManifestParsed, this), e.off(o.Events.LEVEL_LOADED, this.onLevelLoaded, this), e.off(o.Events.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this), e.off(o.Events.ERROR, this.onError, this), e.off(o.Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), e.off(o.Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), e.off(o.Events.BUFFER_CREATED, this.onBufferCreated, this), e.off(o.Events.BUFFER_FLUSHED, this.onBufferFlushed, this), e.off(o.Events.LEVELS_UPDATED, this.onLevelsUpdated, this), e.off(o.Events.FRAG_BUFFERED, this.onFragBuffered, this)
                            }, d.onHandlerDestroying = function () {
                                this._unregisterListeners(), this.onMediaDetaching()
                            }, d.startLoad = function (e) {
                                if (this.levels) {
                                    var t = this.lastCurrentTime, n = this.hls;
                                    if (this.stopLoad(), this.setInterval(100), this.level = -1, this.fragLoadError = 0, !this.startFragRequested) {
                                        var r = n.startLevel;
                                        -1 === r && (n.config.testBandwidth && this.levels.length > 1 ? (r = 0, this.bitrateTest = !0) : r = n.nextAutoLevel), this.level = n.nextLoadLevel = r, this.loadedmetadata = !1
                                    }
                                    t > 0 && -1 === e && (this.log("Override startPosition with lastCurrentTime @" + t.toFixed(3)), e = t), this.state = Be, this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e, this.tick()
                                } else this._forceStartLoad = !0, this.state = Oe
                            }, d.stopLoad = function () {
                                this._forceStartLoad = !1, e.prototype.stopLoad.call(this)
                            }, d.doTick = function () {
                                switch (this.state) {
                                    case Be:
                                        this.doTickIdle();
                                        break;
                                    case Ke:
                                        var e, t = this.levels, n = this.level,
                                            r = null == t || null === (e = t[n]) || void 0 === e ? void 0 : e.details;
                                        if (r && (!r.live || this.levelLastLoaded === this.level)) {
                                            if (this.waitForCdnTuneIn(r)) break;
                                            this.state = Be;
                                            break
                                        }
                                        break;
                                    case Ue:
                                        var i, a = self.performance.now(), o = this.retryDate;
                                        (!o || a >= o || null !== (i = this.media) && void 0 !== i && i.seeking) && (this.log("retryDate reached, switch back to IDLE state"), this.resetStartWhenNotLoaded(this.level), this.state = Be)
                                }
                                this.onTickEnd()
                            }, d.onTickEnd = function () {
                                e.prototype.onTickEnd.call(this), this.checkBuffer(), this.checkFragmentChanged()
                            }, d.doTickIdle = function () {
                                var e = this.hls, t = this.levelLastLoaded, n = this.levels, r = this.media,
                                    i = e.config, a = e.nextLoadLevel;
                                if (null !== t && (r || !this.startFragRequested && i.startFragPrefetch) && (!this.altAudio || !this.audioOnly) && n && n[a]) {
                                    var s = n[a], l = this.getMainFwdBufferInfo();
                                    if (null !== l) {
                                        var d = this.getLevelDetails();
                                        if (d && this._streamEnded(l, d)) {
                                            var c = {};
                                            return this.altAudio && (c.type = "video"), this.hls.trigger(o.Events.BUFFER_EOS, c), void (this.state = Ge)
                                        }
                                        this.level = e.nextLoadLevel = a;
                                        var p = s.details;
                                        if (!p || this.state === Ke || p.live && this.levelLastLoaded !== a) return this.level = a, void (this.state = Ke);
                                        if (!(l.len >= this.getMaxBufferLength(s.maxBitrate))) {
                                            this.backtrackFragment && this.backtrackFragment.start > l.end && (this.backtrackFragment = null);
                                            var u = this.backtrackFragment ? this.backtrackFragment.start : l.end,
                                                g = this.getNextFragment(u, p);
                                            if (this.couldBacktrack && !this.fragPrevious && g && "initSegment" !== g.sn && this.fragmentTracker.getState(g) !== le.OK) {
                                                var m,
                                                    f = (null != (m = this.backtrackFragment) ? m : g).sn - p.startSN,
                                                    h = p.fragments[f - 1];
                                                h && g.cc === h.cc && (g = h, this.fragmentTracker.removeFragment(h))
                                            } else this.backtrackFragment && l.len && (this.backtrackFragment = null);
                                            if (g && this.fragmentTracker.getState(g) === le.OK && this.nextLoadPosition > u) {
                                                var v = this.audioOnly && !this.altAudio ? _.ElementaryStreamTypes.AUDIO : _.ElementaryStreamTypes.VIDEO,
                                                    b = (v === _.ElementaryStreamTypes.VIDEO ? this.videoBuffer : this.mediaBuffer) || this.media;
                                                b && this.afterBufferFlushed(b, v, F.PlaylistLevelType.MAIN), g = this.getNextFragment(this.nextLoadPosition, p)
                                            }
                                            g && (!g.initSegment || g.initSegment.data || this.bitrateTest || (g = g.initSegment), this.loadFragment(g, p, u))
                                        }
                                    }
                                }
                            }, d.loadFragment = function (t, n, r) {
                                var i, a = this.fragmentTracker.getState(t);
                                this.fragCurrent = t, a === le.NOT_LOADED ? "initSegment" === t.sn ? this._loadInitSegment(t, n) : this.bitrateTest ? (this.log("Fragment " + t.sn + " of level " + t.level + " is being downloaded to test bitrate and will not be buffered"), this._loadBitrateTestFrag(t, n)) : (this.startFragRequested = !0, e.prototype.loadFragment.call(this, t, n, r)) : a === le.APPENDING ? this.reduceMaxBufferLength(t.duration) && this.fragmentTracker.removeFragment(t) : 0 === (null === (i = this.media) || void 0 === i ? void 0 : i.buffered.length) && this.fragmentTracker.removeAllFragments()
                            }, d.getAppendedFrag = function (e) {
                                var t = this.fragmentTracker.getAppendedFrag(e, F.PlaylistLevelType.MAIN);
                                return t && "fragment" in t ? t.fragment : t
                            }, d.getBufferedFrag = function (e) {
                                return this.fragmentTracker.getBufferedFrag(e, F.PlaylistLevelType.MAIN)
                            }, d.followingBufferedFrag = function (e) {
                                return e ? this.getBufferedFrag(e.end + .5) : null
                            }, d.immediateLevelSwitch = function () {
                                this.abortCurrentFrag(), this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
                            }, d.nextLevelSwitch = function () {
                                var e = this.levels, t = this.media;
                                if (null != t && t.readyState) {
                                    var n, r = this.getAppendedFrag(t.currentTime);
                                    if (r && r.start > 1 && this.flushMainBuffer(0, r.start - 1), !t.paused && e) {
                                        var i = e[this.hls.nextLoadLevel], a = this.fragLastKbps;
                                        n = a && this.fragCurrent ? this.fragCurrent.duration * i.maxBitrate / (1e3 * a) + 1 : 0
                                    } else n = 0;
                                    var o = this.getBufferedFrag(t.currentTime + n);
                                    if (o) {
                                        var s = this.followingBufferedFrag(o);
                                        if (s) {
                                            this.abortCurrentFrag();
                                            var l = s.maxStartPTS ? s.maxStartPTS : s.start, d = s.duration,
                                                c = Math.max(o.end, l + Math.min(Math.max(d - this.config.maxFragLookUpTolerance, .5 * d), .75 * d));
                                            this.flushMainBuffer(c, Number.POSITIVE_INFINITY)
                                        }
                                    }
                                }
                            }, d.abortCurrentFrag = function () {
                                var e = this.fragCurrent;
                                switch (this.fragCurrent = null, this.backtrackFragment = null, e && e.abortRequests(), this.state) {
                                    case Ne:
                                    case Fe:
                                    case Ue:
                                    case He:
                                    case Ye:
                                        this.state = Be
                                }
                                this.nextLoadPosition = this.getLoadPosition()
                            }, d.flushMainBuffer = function (t, n) {
                                e.prototype.flushMainBuffer.call(this, t, n, this.altAudio ? "video" : null)
                            }, d.onMediaAttached = function (t, n) {
                                e.prototype.onMediaAttached.call(this, t, n);
                                var r = n.media;
                                this.onvplaying = this.onMediaPlaying.bind(this), this.onvseeked = this.onMediaSeeked.bind(this), r.addEventListener("playing", this.onvplaying), r.addEventListener("seeked", this.onvseeked), this.gapController = new it(this.config, r, this.fragmentTracker, this.hls)
                            }, d.onMediaDetaching = function () {
                                var t = this.media;
                                t && this.onvplaying && this.onvseeked && (t.removeEventListener("playing", this.onvplaying), t.removeEventListener("seeked", this.onvseeked), this.onvplaying = this.onvseeked = null, this.videoBuffer = null), this.fragPlaying = null, this.gapController && (this.gapController.destroy(), this.gapController = null), e.prototype.onMediaDetaching.call(this)
                            }, d.onMediaPlaying = function () {
                                this.tick()
                            }, d.onMediaSeeked = function () {
                                var e = this.media, t = e ? e.currentTime : null;
                                (0, a.isFiniteNumber)(t) && this.log("Media seeked to " + t.toFixed(3)), this.tick()
                            }, d.onManifestLoading = function () {
                                this.log("Trigger BUFFER_RESET"), this.hls.trigger(o.Events.BUFFER_RESET, void 0), this.fragmentTracker.removeAllFragments(), this.couldBacktrack = !1, this.startPosition = this.lastCurrentTime = 0, this.fragPlaying = null, this.backtrackFragment = null
                            }, d.onManifestParsed = function (e, t) {
                                var n, r, i, a = !1, o = !1;
                                t.levels.forEach((function (e) {
                                    (n = e.audioCodec) && (-1 !== n.indexOf("mp4a.40.2") && (a = !0), -1 !== n.indexOf("mp4a.40.5") && (o = !0))
                                })), this.audioCodecSwitch = a && o && !("function" == typeof (null == (i = Qe()) || null === (r = i.prototype) || void 0 === r ? void 0 : r.changeType)), this.audioCodecSwitch && this.log("Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"), this.levels = t.levels, this.startFragRequested = !1
                            }, d.onLevelLoading = function (e, t) {
                                var n = this.levels;
                                if (n && this.state === Be) {
                                    var r = n[t.level];
                                    (!r.details || r.details.live && this.levelLastLoaded !== t.level || this.waitForCdnTuneIn(r.details)) && (this.state = Ke)
                                }
                            }, d.onLevelLoaded = function (e, t) {
                                var n, r = this.levels, i = t.level, a = t.details, s = a.totalduration;
                                if (r) {
                                    this.log("Level " + i + " loaded [" + a.startSN + "," + a.endSN + "], cc [" + a.startCC + ", " + a.endCC + "] duration:" + s);
                                    var l = this.fragCurrent;
                                    !l || this.state !== Fe && this.state !== Ue || l.level !== t.level && l.loader && (this.state = Be, this.backtrackFragment = null, l.abortRequests());
                                    var d = r[i], c = 0;
                                    if (a.live || null !== (n = d.details) && void 0 !== n && n.live) {
                                        if (a.fragments[0] || (a.deltaUpdateFailed = !0), a.deltaUpdateFailed) return;
                                        c = this.alignPlaylists(a, d.details)
                                    }
                                    if (d.details = a, this.levelLastLoaded = i, this.hls.trigger(o.Events.LEVEL_UPDATED, {
                                        details: a,
                                        level: i
                                    }), this.state === Ke) {
                                        if (this.waitForCdnTuneIn(a)) return;
                                        this.state = Be
                                    }
                                    this.startFragRequested ? a.live && this.synchronizeToLiveEdge(a) : this.setStartPosition(a, c), this.tick()
                                } else this.warn("Levels were reset while loading level " + i)
                            }, d._handleFragmentLoadProgress = function (e) {
                                var t, n = e.frag, r = e.part, i = e.payload, a = this.levels;
                                if (a) {
                                    var o = a[n.level], s = o.details;
                                    if (s) {
                                        var l = o.videoCodec, d = s.PTSKnown || !s.live,
                                            c = null === (t = n.initSegment) || void 0 === t ? void 0 : t.data,
                                            p = this._getAudioCodec(o),
                                            u = this.transmuxer = this.transmuxer || new rt(this.hls, F.PlaylistLevelType.MAIN, this._handleTransmuxComplete.bind(this), this._handleTransmuxerFlush.bind(this)),
                                            g = r ? r.index : -1, m = -1 !== g,
                                            f = new ke(n.level, n.sn, n.stats.chunkCount, i.byteLength, g, m),
                                            h = this.initPTS[n.cc];
                                        u.push(i, c, p, l, n, r, s.totalduration, d, f, h)
                                    } else this.warn("Dropping fragment " + n.sn + " of level " + n.level + " after level details were reset")
                                } else this.warn("Levels were reset while fragment load was in progress. Fragment " + n.sn + " of level " + n.level + " will not be buffered")
                            }, d.onAudioTrackSwitching = function (e, t) {
                                var n = this.altAudio, r = !!t.url, i = t.id;
                                if (!r) {
                                    if (this.mediaBuffer !== this.media) {
                                        this.log("Switching on main audio, use media.buffered to schedule main fragment loading"), this.mediaBuffer = this.media;
                                        var a = this.fragCurrent;
                                        a && (this.log("Switching to main audio track, cancel main fragment load"), a.abortRequests()), this.resetTransmuxer(), this.resetLoadingState()
                                    } else this.audioOnly && this.resetTransmuxer();
                                    var s = this.hls;
                                    n && s.trigger(o.Events.BUFFER_FLUSHING, {
                                        startOffset: 0,
                                        endOffset: Number.POSITIVE_INFINITY,
                                        type: "audio"
                                    }), s.trigger(o.Events.AUDIO_TRACK_SWITCHED, {id: i})
                                }
                            }, d.onAudioTrackSwitched = function (e, t) {
                                var n = t.id, r = !!this.hls.audioTracks[n].url;
                                if (r) {
                                    var i = this.videoBuffer;
                                    i && this.mediaBuffer !== i && (this.log("Switching on alternate audio, use video.buffered to schedule main fragment loading"), this.mediaBuffer = i)
                                }
                                this.altAudio = r, this.tick()
                            }, d.onBufferCreated = function (e, t) {
                                var n, r, i = t.tracks, a = !1;
                                for (var o in i) {
                                    var s = i[o];
                                    if ("main" === s.id) {
                                        if (r = o, n = s, "video" === o) {
                                            var l = i[o];
                                            l && (this.videoBuffer = l.buffer)
                                        }
                                    } else a = !0
                                }
                                a && n ? (this.log("Alternate track found, use " + r + ".buffered to schedule main fragment loading"), this.mediaBuffer = n.buffer) : this.mediaBuffer = this.media
                            }, d.onFragBuffered = function (e, t) {
                                var n = t.frag, r = t.part;
                                if (!n || n.type === F.PlaylistLevelType.MAIN) {
                                    if (this.fragContextChanged(n)) return this.warn("Fragment " + n.sn + (r ? " p: " + r.index : "") + " of level " + n.level + " finished buffering, but was aborted. state: " + this.state), void (this.state === Ye && (this.state = Be));
                                    var i = r ? r.stats : n.stats;
                                    this.fragLastKbps = Math.round(8 * i.total / (i.buffering.end - i.loading.first)), "initSegment" !== n.sn && (this.fragPrevious = n), this.fragBufferedComplete(n, r)
                                }
                            }, d.onError = function (e, t) {
                                if (t.type !== s.ErrorTypes.KEY_SYSTEM_ERROR) switch (t.details) {
                                    case s.ErrorDetails.FRAG_LOAD_ERROR:
                                    case s.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                    case s.ErrorDetails.FRAG_PARSING_ERROR:
                                    case s.ErrorDetails.KEY_LOAD_ERROR:
                                    case s.ErrorDetails.KEY_LOAD_TIMEOUT:
                                        this.onFragmentOrKeyLoadError(F.PlaylistLevelType.MAIN, t);
                                        break;
                                    case s.ErrorDetails.LEVEL_LOAD_ERROR:
                                    case s.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                                        this.state !== Ve && (t.fatal ? (this.warn("" + t.details), this.state = Ve) : t.levelRetry || this.state !== Ke || (this.state = Be));
                                        break;
                                    case s.ErrorDetails.BUFFER_FULL_ERROR:
                                        if ("main" === t.parent && (this.state === He || this.state === Ye)) {
                                            var n = !0, r = this.getFwdBufferInfo(this.media, F.PlaylistLevelType.MAIN);
                                            r && r.len > .5 && (n = !this.reduceMaxBufferLength(r.len)), n && (this.warn("buffer full error also media.currentTime is not buffered, flush main"), this.immediateLevelSwitch()), this.resetLoadingState()
                                        }
                                } else this.onFragmentOrKeyLoadError(F.PlaylistLevelType.MAIN, t)
                            }, d.checkBuffer = function () {
                                var e = this.media, t = this.gapController;
                                if (e && t && e.readyState) {
                                    if (this.loadedmetadata || !xe.getBuffered(e).length) {
                                        var n = this.state !== Be ? this.fragCurrent : null;
                                        t.poll(this.lastCurrentTime, n)
                                    }
                                    this.lastCurrentTime = e.currentTime
                                }
                            }, d.onFragLoadEmergencyAborted = function () {
                                this.state = Be, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.tickImmediate()
                            }, d.onBufferFlushed = function (e, t) {
                                var n = t.type;
                                if (n !== _.ElementaryStreamTypes.AUDIO || this.audioOnly && !this.altAudio) {
                                    var r = (n === _.ElementaryStreamTypes.VIDEO ? this.videoBuffer : this.mediaBuffer) || this.media;
                                    this.afterBufferFlushed(r, n, F.PlaylistLevelType.MAIN)
                                }
                            }, d.onLevelsUpdated = function (e, t) {
                                this.levels = t.levels
                            }, d.swapAudioCodec = function () {
                                this.audioCodecSwap = !this.audioCodecSwap
                            }, d.seekToStartPos = function () {
                                var e = this.media;
                                if (e) {
                                    var t = e.currentTime, n = this.startPosition;
                                    if (n >= 0 && t < n) {
                                        if (e.seeking) return void this.log("could not seek to " + n + ", already seeking at " + t);
                                        var r = xe.getBuffered(e), i = (r.length ? r.start(0) : 0) - n;
                                        i > 0 && (i < this.config.maxBufferHole || i < this.config.maxFragLookUpTolerance) && (this.log("adjusting start position by " + i + " to match buffer start"), n += i, this.startPosition = n), this.log("seek to target start position " + n + " from current time " + t), e.currentTime = n
                                    }
                                }
                            }, d._getAudioCodec = function (e) {
                                var t = this.config.defaultAudioCodec || e.audioCodec;
                                return this.audioCodecSwap && t && (this.log("Swapping audio codec"), t = -1 !== t.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"), t
                            }, d._loadBitrateTestFrag = function (e, t) {
                                var n = this;
                                e.bitrateTest = !0, this._doFragLoad(e, t).then((function (t) {
                                    var r = n.hls;
                                    if (t && !n.fragContextChanged(e)) {
                                        n.fragLoadError = 0, n.state = Be, n.startFragRequested = !1, n.bitrateTest = !1;
                                        var i = e.stats;
                                        i.parsing.start = i.parsing.end = i.buffering.start = i.buffering.end = self.performance.now(), r.trigger(o.Events.FRAG_LOADED, t), e.bitrateTest = !1
                                    }
                                }))
                            }, d._handleTransmuxComplete = function (e) {
                                var t, n = "main", r = this.hls, i = e.remuxResult, s = e.chunkMeta,
                                    l = this.getCurrentContext(s);
                                if (!l) return this.warn("The loading context changed while buffering fragment " + s.sn + " of level " + s.level + ". This chunk will not be buffered."), void this.resetStartWhenNotLoaded(s.level);
                                var d = l.frag, c = l.part, p = l.level, u = i.video, g = i.text, m = i.id3,
                                    f = i.initSegment, h = p.details, v = this.altAudio ? void 0 : i.audio;
                                if (!this.fragContextChanged(d)) {
                                    if (this.state = He, f) {
                                        f.tracks && (this._bufferInitSegment(p, f.tracks, d, s), r.trigger(o.Events.FRAG_PARSING_INIT_SEGMENT, {
                                            frag: d,
                                            id: n,
                                            tracks: f.tracks
                                        }));
                                        var b = f.initPTS, y = f.timescale;
                                        (0, a.isFiniteNumber)(b) && (this.initPTS[d.cc] = b, r.trigger(o.Events.INIT_PTS_FOUND, {
                                            frag: d,
                                            id: n,
                                            initPTS: b,
                                            timescale: y
                                        }))
                                    }
                                    if (u && !1 !== i.independent) {
                                        if (h) {
                                            var A = u.startPTS, E = u.endPTS, T = u.startDTS, w = u.endDTS;
                                            if (c) c.elementaryStreams[u.type] = {
                                                startPTS: A,
                                                endPTS: E,
                                                startDTS: T,
                                                endDTS: w
                                            }; else if (u.firstKeyFrame && u.independent && 1 === s.id && (this.couldBacktrack = !0), u.dropped && u.independent) {
                                                var S = this.getMainFwdBufferInfo();
                                                if ((S ? S.end : this.getLoadPosition()) + this.config.maxBufferHole < (u.firstKeyFramePTS ? u.firstKeyFramePTS : A) - this.config.maxBufferHole) return void this.backtrack(d);
                                                d.setElementaryStreamInfo(u.type, d.start, E, d.start, w, !0)
                                            }
                                            d.setElementaryStreamInfo(u.type, A, E, T, w), this.backtrackFragment && (this.backtrackFragment = d), this.bufferFragmentData(u, d, c, s)
                                        }
                                    } else if (!1 === i.independent) return void this.backtrack(d);
                                    if (v) {
                                        var x = v.startPTS, k = v.endPTS, C = v.startDTS, L = v.endDTS;
                                        c && (c.elementaryStreams[_.ElementaryStreamTypes.AUDIO] = {
                                            startPTS: x,
                                            endPTS: k,
                                            startDTS: C,
                                            endDTS: L
                                        }), d.setElementaryStreamInfo(_.ElementaryStreamTypes.AUDIO, x, k, C, L), this.bufferFragmentData(v, d, c, s)
                                    }
                                    if (h && null != m && null !== (t = m.samples) && void 0 !== t && t.length) {
                                        var R = {id: n, frag: d, details: h, samples: m.samples};
                                        r.trigger(o.Events.FRAG_PARSING_METADATA, R)
                                    }
                                    if (h && g) {
                                        var P = {id: n, frag: d, details: h, samples: g.samples};
                                        r.trigger(o.Events.FRAG_PARSING_USERDATA, P)
                                    }
                                }
                            }, d._bufferInitSegment = function (e, t, n, r) {
                                var i = this;
                                if (this.state === He) {
                                    this.audioOnly = !!t.audio && !t.video, this.altAudio && !this.audioOnly && delete t.audio;
                                    var a = t.audio, s = t.video, l = t.audiovideo;
                                    if (a) {
                                        var d = e.audioCodec, c = navigator.userAgent.toLowerCase();
                                        this.audioCodecSwitch && (d && (d = -1 !== d.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"), 1 !== a.metadata.channelCount && -1 === c.indexOf("firefox") && (d = "mp4a.40.5")), -1 !== c.indexOf("android") && "audio/mpeg" !== a.container && (d = "mp4a.40.2", this.log("Android: force audio codec to " + d)), e.audioCodec && e.audioCodec !== d && this.log('Swapping manifest audio codec "' + e.audioCodec + '" for "' + d + '"'), a.levelCodec = d, a.id = "main", this.log("Init audio buffer, container:" + a.container + ", codecs[selected/level/parsed]=[" + (d || "") + "/" + (e.audioCodec || "") + "/" + a.codec + "]")
                                    }
                                    s && (s.levelCodec = e.videoCodec, s.id = "main", this.log("Init video buffer, container:" + s.container + ", codecs[level/parsed]=[" + (e.videoCodec || "") + "/" + s.codec + "]")), l && this.log("Init audiovideo buffer, container:" + l.container + ", codecs[level/parsed]=[" + (e.attrs.CODECS || "") + "/" + l.codec + "]"), this.hls.trigger(o.Events.BUFFER_CODECS, t), Object.keys(t).forEach((function (e) {
                                        var a = t[e].initSegment;
                                        null != a && a.byteLength && i.hls.trigger(o.Events.BUFFER_APPENDING, {
                                            type: e,
                                            data: a,
                                            frag: n,
                                            part: null,
                                            chunkMeta: r,
                                            parent: n.type
                                        })
                                    })), this.tick()
                                }
                            }, d.getMainFwdBufferInfo = function () {
                                return this.getFwdBufferInfo(this.mediaBuffer ? this.mediaBuffer : this.media, F.PlaylistLevelType.MAIN)
                            }, d.backtrack = function (e) {
                                this.couldBacktrack = !0, this.backtrackFragment = e, this.resetTransmuxer(), this.flushBufferGap(e), this.fragmentTracker.removeFragment(e), this.fragPrevious = null, this.nextLoadPosition = e.start, this.state = Be
                            }, d.checkFragmentChanged = function () {
                                var e = this.media, t = null;
                                if (e && e.readyState > 1 && !1 === e.seeking) {
                                    var n = e.currentTime;
                                    if (xe.isBuffered(e, n) ? t = this.getAppendedFrag(n) : xe.isBuffered(e, n + .1) && (t = this.getAppendedFrag(n + .1)), t) {
                                        this.backtrackFragment = null;
                                        var r = this.fragPlaying, i = t.level;
                                        r && t.sn === r.sn && r.level === i && t.urlId === r.urlId || (this.fragPlaying = t, this.hls.trigger(o.Events.FRAG_CHANGED, {frag: t}), r && r.level === i || this.hls.trigger(o.Events.LEVEL_SWITCHED, {level: i}))
                                    }
                                }
                            }, i = r, (l = [{
                                key: "nextLevel", get: function () {
                                    var e = this.nextBufferedFrag;
                                    return e ? e.level : -1
                                }
                            }, {
                                key: "currentFrag", get: function () {
                                    var e = this.media;
                                    return e ? this.fragPlaying || this.getAppendedFrag(e.currentTime) : null
                                }
                            }, {
                                key: "currentProgramDateTime", get: function () {
                                    var e = this.media;
                                    if (e) {
                                        var t = e.currentTime, n = this.currentFrag;
                                        if (n && (0, a.isFiniteNumber)(t) && (0, a.isFiniteNumber)(n.programDateTime)) {
                                            var r = n.programDateTime + 1e3 * (t - n.start);
                                            return new Date(r)
                                        }
                                    }
                                    return null
                                }
                            }, {
                                key: "currentLevel", get: function () {
                                    var e = this.currentFrag;
                                    return e ? e.level : -1
                                }
                            }, {
                                key: "nextBufferedFrag", get: function () {
                                    var e = this.currentFrag;
                                    return e ? this.followingBufferedFrag(e) : null
                                }
                            }, {
                                key: "forceStartLoad", get: function () {
                                    return this._forceStartLoad
                                }
                            }]) && function (e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                        if ("object" != typeof e || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var r = n.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(e)
                                    }(r.key)) ? i : String(i), r)
                                }
                                var i
                            }(i.prototype, l), Object.defineProperty(i, "prototype", {writable: !1}), r
                        }(ze);
                        const st = function () {
                            function e(e, t, n) {
                                void 0 === t && (t = 0), void 0 === n && (n = 0), this.halfLife = void 0, this.alpha_ = void 0, this.estimate_ = void 0, this.totalWeight_ = void 0, this.halfLife = e, this.alpha_ = e ? Math.exp(Math.log(.5) / e) : 0, this.estimate_ = t, this.totalWeight_ = n
                            }

                            var t = e.prototype;
                            return t.sample = function (e, t) {
                                var n = Math.pow(this.alpha_, e);
                                this.estimate_ = t * (1 - n) + n * this.estimate_, this.totalWeight_ += e
                            }, t.getTotalWeight = function () {
                                return this.totalWeight_
                            }, t.getEstimate = function () {
                                if (this.alpha_) {
                                    var e = 1 - Math.pow(this.alpha_, this.totalWeight_);
                                    if (e) return this.estimate_ / e
                                }
                                return this.estimate_
                            }, e
                        }(), lt = function () {
                            function e(e, t, n) {
                                this.defaultEstimate_ = void 0, this.minWeight_ = void 0, this.minDelayMs_ = void 0, this.slow_ = void 0, this.fast_ = void 0, this.defaultEstimate_ = n, this.minWeight_ = .001, this.minDelayMs_ = 50, this.slow_ = new st(e), this.fast_ = new st(t)
                            }

                            var t = e.prototype;
                            return t.update = function (e, t) {
                                var n = this.slow_, r = this.fast_;
                                this.slow_.halfLife !== e && (this.slow_ = new st(e, n.getEstimate(), n.getTotalWeight())), this.fast_.halfLife !== t && (this.fast_ = new st(t, r.getEstimate(), r.getTotalWeight()))
                            }, t.sample = function (e, t) {
                                var n = (e = Math.max(e, this.minDelayMs_)) / 1e3, r = 8 * t / n;
                                this.fast_.sample(n, r), this.slow_.sample(n, r)
                            }, t.canEstimate = function () {
                                var e = this.fast_;
                                return e && e.getTotalWeight() >= this.minWeight_
                            }, t.getEstimate = function () {
                                return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                            }, t.destroy = function () {
                            }, e
                        }(), dt = function () {
                            function e(e) {
                                this.hls = void 0, this.lastLoadedFragLevel = 0, this._nextAutoLevel = -1, this.timer = void 0, this.onCheck = this._abandonRulesCheck.bind(this), this.fragCurrent = null, this.partCurrent = null, this.bitrateTestDelay = 0, this.bwEstimator = void 0, this.hls = e;
                                var t = e.config;
                                this.bwEstimator = new lt(t.abrEwmaSlowVoD, t.abrEwmaFastVoD, t.abrEwmaDefaultEstimate), this.registerListeners()
                            }

                            var t, n, r = e.prototype;
                            return r.registerListeners = function () {
                                var e = this.hls;
                                e.on(o.Events.FRAG_LOADING, this.onFragLoading, this), e.on(o.Events.FRAG_LOADED, this.onFragLoaded, this), e.on(o.Events.FRAG_BUFFERED, this.onFragBuffered, this), e.on(o.Events.LEVEL_LOADED, this.onLevelLoaded, this), e.on(o.Events.ERROR, this.onError, this)
                            }, r.unregisterListeners = function () {
                                var e = this.hls;
                                e.off(o.Events.FRAG_LOADING, this.onFragLoading, this), e.off(o.Events.FRAG_LOADED, this.onFragLoaded, this), e.off(o.Events.FRAG_BUFFERED, this.onFragBuffered, this), e.off(o.Events.LEVEL_LOADED, this.onLevelLoaded, this), e.off(o.Events.ERROR, this.onError, this)
                            }, r.destroy = function () {
                                this.unregisterListeners(), this.clearTimer(), this.hls = this.onCheck = null, this.fragCurrent = this.partCurrent = null
                            }, r.onFragLoading = function (e, t) {
                                var n, r = t.frag;
                                r.type === F.PlaylistLevelType.MAIN && (this.timer || (this.fragCurrent = r, this.partCurrent = null != (n = t.part) ? n : null, this.timer = self.setInterval(this.onCheck, 100)))
                            }, r.onLevelLoaded = function (e, t) {
                                var n = this.hls.config;
                                t.details.live ? this.bwEstimator.update(n.abrEwmaSlowLive, n.abrEwmaFastLive) : this.bwEstimator.update(n.abrEwmaSlowVoD, n.abrEwmaFastVoD)
                            }, r._abandonRulesCheck = function () {
                                var e = this.fragCurrent, t = this.partCurrent, n = this.hls, r = n.autoLevelEnabled,
                                    i = n.media;
                                if (e && i) {
                                    var s = t ? t.stats : e.stats, d = t ? t.duration : e.duration;
                                    if (s.aborted || s.loaded && s.loaded === s.total || 0 === e.level) return this.clearTimer(), void (this._nextAutoLevel = -1);
                                    if (r && !i.paused && i.playbackRate && i.readyState) {
                                        var c = n.mainForwardBufferInfo;
                                        if (null !== c) {
                                            var p = performance.now() - s.loading.start, u = Math.abs(i.playbackRate);
                                            if (!(p <= 500 * d / u)) {
                                                var g = s.loaded && s.loading.first, m = this.bwEstimator.getEstimate(),
                                                    f = n.levels, h = n.minAutoLevel, _ = f[e.level],
                                                    v = s.total || Math.max(s.loaded, Math.round(d * _.maxBitrate / 8)),
                                                    b = g ? 1e3 * s.loaded / p : 0,
                                                    y = b ? (v - s.loaded) / b : 8 * v / m, A = c.len / u;
                                                if (!(y <= A)) {
                                                    var E, T = Number.POSITIVE_INFINITY;
                                                    for (E = e.level - 1; E > h; E--) {
                                                        var w = f[E].maxBitrate;
                                                        if ((T = b ? d * w / (6.4 * b) : d * w / m) < A) break
                                                    }
                                                    T >= y || (l.logger.warn("Fragment " + e.sn + (t ? " part " + t.index : "") + " of level " + e.level + " is loading too slowly and will cause an underbuffer; aborting and switching to level " + E + "\n      Current BW estimate: " + ((0, a.isFiniteNumber)(m) ? (m / 1024).toFixed(3) : "Unknown") + " Kb/s\n      Estimated load time for current fragment: " + y.toFixed(3) + " s\n      Estimated load time for the next fragment: " + T.toFixed(3) + " s\n      Time to underbuffer: " + A.toFixed(3) + " s"), n.nextLoadLevel = E, g && this.bwEstimator.sample(p, s.loaded), this.clearTimer(), (e.loader || e.keyLoader) && (this.fragCurrent = this.partCurrent = null, e.abortRequests()), n.trigger(o.Events.FRAG_LOAD_EMERGENCY_ABORTED, {
                                                        frag: e,
                                                        part: t,
                                                        stats: s
                                                    }))
                                                }
                                            }
                                        }
                                    }
                                }
                            }, r.onFragLoaded = function (e, t) {
                                var n = t.frag, r = t.part;
                                if (n.type === F.PlaylistLevelType.MAIN && (0, a.isFiniteNumber)(n.sn)) {
                                    var i = r ? r.stats : n.stats, s = r ? r.duration : n.duration;
                                    if (this.clearTimer(), this.lastLoadedFragLevel = n.level, this._nextAutoLevel = -1, this.hls.config.abrMaxWithRealBitrate) {
                                        var l = this.hls.levels[n.level],
                                            d = (l.loaded ? l.loaded.bytes : 0) + i.loaded,
                                            c = (l.loaded ? l.loaded.duration : 0) + s;
                                        l.loaded = {bytes: d, duration: c}, l.realBitrate = Math.round(8 * d / c)
                                    }
                                    if (n.bitrateTest) {
                                        var p = {stats: i, frag: n, part: r, id: n.type};
                                        this.onFragBuffered(o.Events.FRAG_BUFFERED, p)
                                    }
                                }
                            }, r.onFragBuffered = function (e, t) {
                                var n = t.frag, r = t.part, i = r ? r.stats : n.stats;
                                if (!i.aborted && n.type === F.PlaylistLevelType.MAIN && "initSegment" !== n.sn) {
                                    var a = i.parsing.end - i.loading.start;
                                    this.bwEstimator.sample(a, i.loaded), i.bwEstimate = this.bwEstimator.getEstimate(), n.bitrateTest ? this.bitrateTestDelay = a / 1e3 : this.bitrateTestDelay = 0
                                }
                            }, r.onError = function (e, t) {
                                var n;
                                if ((null === (n = t.frag) || void 0 === n ? void 0 : n.type) === F.PlaylistLevelType.MAIN) {
                                    if (t.type === s.ErrorTypes.KEY_SYSTEM_ERROR) return void this.clearTimer();
                                    switch (t.details) {
                                        case s.ErrorDetails.FRAG_LOAD_ERROR:
                                        case s.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                        case s.ErrorDetails.KEY_LOAD_ERROR:
                                        case s.ErrorDetails.KEY_LOAD_TIMEOUT:
                                            this.clearTimer()
                                    }
                                }
                            }, r.clearTimer = function () {
                                self.clearInterval(this.timer), this.timer = void 0
                            }, r.getNextABRAutoLevel = function () {
                                var e = this.fragCurrent, t = this.partCurrent, n = this.hls, r = n.maxAutoLevel,
                                    i = n.config, a = n.minAutoLevel, o = n.media,
                                    s = t ? t.duration : e ? e.duration : 0,
                                    d = o && 0 !== o.playbackRate ? Math.abs(o.playbackRate) : 1,
                                    c = this.bwEstimator ? this.bwEstimator.getEstimate() : i.abrEwmaDefaultEstimate,
                                    p = n.mainForwardBufferInfo, u = (p ? p.len : 0) / d,
                                    g = this.findBestLevel(c, a, r, u, i.abrBandWidthFactor, i.abrBandWidthUpFactor);
                                if (g >= 0) return g;
                                l.logger.trace((u ? "rebuffering expected" : "buffer is empty") + ", finding optimal quality level");
                                var m = s ? Math.min(s, i.maxStarvationDelay) : i.maxStarvationDelay,
                                    f = i.abrBandWidthFactor, h = i.abrBandWidthUpFactor;
                                if (!u) {
                                    var _ = this.bitrateTestDelay;
                                    _ && (m = (s ? Math.min(s, i.maxLoadingDelay) : i.maxLoadingDelay) - _, l.logger.trace("bitrate test took " + Math.round(1e3 * _) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * m) + " ms"), f = h = 1)
                                }
                                return g = this.findBestLevel(c, a, r, u + m, f, h), Math.max(g, 0)
                            }, r.findBestLevel = function (e, t, n, r, i, o) {
                                for (var s, d = this.fragCurrent, c = this.partCurrent, p = this.lastLoadedFragLevel, u = this.hls.levels, g = u[p], m = !(null == g || null === (s = g.details) || void 0 === s || !s.live), f = null == g ? void 0 : g.codecSet, h = c ? c.duration : d ? d.duration : 0, _ = n; _ >= t; _--) {
                                    var v = u[_];
                                    if (v && (!f || v.codecSet === f)) {
                                        var b, y = v.details,
                                            A = (c ? null == y ? void 0 : y.partTarget : null == y ? void 0 : y.averagetargetduration) || h;
                                        b = _ <= p ? i * e : o * e;
                                        var E = u[_].maxBitrate, T = E * A / b;
                                        if (l.logger.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + _ + "/" + Math.round(b) + "/" + E + "/" + A + "/" + r + "/" + T), b > E && (0 === T || !(0, a.isFiniteNumber)(T) || m && !this.bitrateTestDelay || T < r)) return _
                                    }
                                }
                                return -1
                            }, t = e, (n = [{
                                key: "nextAutoLevel", get: function () {
                                    var e = this._nextAutoLevel, t = this.bwEstimator;
                                    if (-1 !== e && !t.canEstimate()) return e;
                                    var n = this.getNextABRAutoLevel();
                                    return -1 !== e && this.hls.levels[n].loadError ? e : (-1 !== e && (n = Math.min(e, n)), n)
                                }, set: function (e) {
                                    this._nextAutoLevel = e
                                }
                            }]) && function (e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                        if ("object" != typeof e || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var r = n.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(e)
                                    }(r.key)) ? i : String(i), r)
                                }
                                var i
                            }(t.prototype, n), Object.defineProperty(t, "prototype", {writable: !1}), e
                        }();
                        var ct = n(514), pt = n.n(ct), ut = function () {
                            function e(e) {
                                this.buffers = void 0, this.queues = {
                                    video: [],
                                    audio: [],
                                    audiovideo: []
                                }, this.buffers = e
                            }

                            var t = e.prototype;
                            return t.append = function (e, t) {
                                var n = this.queues[t];
                                n.push(e), 1 === n.length && this.buffers[t] && this.executeNext(t)
                            }, t.insertAbort = function (e, t) {
                                this.queues[t].unshift(e), this.executeNext(t)
                            }, t.appendBlocker = function (e) {
                                var t, n = new Promise((function (e) {
                                    t = e
                                })), r = {
                                    execute: t, onStart: function () {
                                    }, onComplete: function () {
                                    }, onError: function () {
                                    }
                                };
                                return this.append(r, e), n
                            }, t.executeNext = function (e) {
                                var t = this.buffers, n = this.queues, r = t[e], i = n[e];
                                if (i.length) {
                                    var a = i[0];
                                    try {
                                        a.execute()
                                    } catch (t) {
                                        l.logger.warn("[buffer-operation-queue]: Unhandled exception executing the current operation"), a.onError(t), r && r.updating || (i.shift(), this.executeNext(e))
                                    }
                                }
                            }, t.shiftAndExecuteNext = function (e) {
                                this.queues[e].shift(), this.executeNext(e)
                            }, t.current = function (e) {
                                return this.queues[e][0]
                            }, e
                        }(), gt = je(), mt = /([ha]vc.)(?:\.[^.,]+)+/, ft = function () {
                            function e(e) {
                                var t = this;
                                this.details = null, this._objectUrl = null, this.operationQueue = void 0, this.listeners = void 0, this.hls = void 0, this.bufferCodecEventsExpected = 0, this._bufferCodecEventsTotal = 0, this.media = null, this.mediaSource = null, this.lastMpegAudioChunk = null, this.appendError = 0, this.tracks = {}, this.pendingTracks = {}, this.sourceBuffer = void 0, this._onMediaSourceOpen = function () {
                                    var e = t.media, n = t.mediaSource;
                                    l.logger.log("[buffer-controller]: Media source opened"), e && (e.removeEventListener("emptied", t._onMediaEmptied), t.updateMediaElementDuration(), t.hls.trigger(o.Events.MEDIA_ATTACHED, {media: e})), n && n.removeEventListener("sourceopen", t._onMediaSourceOpen), t.checkPendingTracks()
                                }, this._onMediaSourceClose = function () {
                                    l.logger.log("[buffer-controller]: Media source closed")
                                }, this._onMediaSourceEnded = function () {
                                    l.logger.log("[buffer-controller]: Media source ended")
                                }, this._onMediaEmptied = function () {
                                    var e = t.media, n = t._objectUrl;
                                    e && e.src !== n && l.logger.error("Media element src was set while attaching MediaSource (" + n + " > " + e.src + ")")
                                }, this.hls = e, this._initSourceBuffer(), this.registerListeners()
                            }

                            var t = e.prototype;
                            return t.hasSourceTypes = function () {
                                return this.getSourceBufferTypes().length > 0 || Object.keys(this.pendingTracks).length > 0
                            }, t.destroy = function () {
                                this.unregisterListeners(), this.details = null, this.lastMpegAudioChunk = null
                            }, t.registerListeners = function () {
                                var e = this.hls;
                                e.on(o.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), e.on(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this), e.on(o.Events.MANIFEST_PARSED, this.onManifestParsed, this), e.on(o.Events.BUFFER_RESET, this.onBufferReset, this), e.on(o.Events.BUFFER_APPENDING, this.onBufferAppending, this), e.on(o.Events.BUFFER_CODECS, this.onBufferCodecs, this), e.on(o.Events.BUFFER_EOS, this.onBufferEos, this), e.on(o.Events.BUFFER_FLUSHING, this.onBufferFlushing, this), e.on(o.Events.LEVEL_UPDATED, this.onLevelUpdated, this), e.on(o.Events.FRAG_PARSED, this.onFragParsed, this), e.on(o.Events.FRAG_CHANGED, this.onFragChanged, this)
                            }, t.unregisterListeners = function () {
                                var e = this.hls;
                                e.off(o.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), e.off(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this), e.off(o.Events.MANIFEST_PARSED, this.onManifestParsed, this), e.off(o.Events.BUFFER_RESET, this.onBufferReset, this), e.off(o.Events.BUFFER_APPENDING, this.onBufferAppending, this), e.off(o.Events.BUFFER_CODECS, this.onBufferCodecs, this), e.off(o.Events.BUFFER_EOS, this.onBufferEos, this), e.off(o.Events.BUFFER_FLUSHING, this.onBufferFlushing, this), e.off(o.Events.LEVEL_UPDATED, this.onLevelUpdated, this), e.off(o.Events.FRAG_PARSED, this.onFragParsed, this), e.off(o.Events.FRAG_CHANGED, this.onFragChanged, this)
                            }, t._initSourceBuffer = function () {
                                this.sourceBuffer = {}, this.operationQueue = new ut(this.sourceBuffer), this.listeners = {
                                    audio: [],
                                    video: [],
                                    audiovideo: []
                                }, this.lastMpegAudioChunk = null
                            }, t.onManifestParsed = function (e, t) {
                                var n = 2;
                                (t.audio && !t.video || !t.altAudio) && (n = 1), this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = n, this.details = null, l.logger.log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected")
                            }, t.onMediaAttaching = function (e, t) {
                                var n = this.media = t.media;
                                if (n && gt) {
                                    var r = this.mediaSource = new gt;
                                    r.addEventListener("sourceopen", this._onMediaSourceOpen), r.addEventListener("sourceended", this._onMediaSourceEnded), r.addEventListener("sourceclose", this._onMediaSourceClose), n.src = self.URL.createObjectURL(r), this._objectUrl = n.src, n.addEventListener("emptied", this._onMediaEmptied)
                                }
                            }, t.onMediaDetaching = function () {
                                var e = this.media, t = this.mediaSource, n = this._objectUrl;
                                if (t) {
                                    if (l.logger.log("[buffer-controller]: media source detaching"), "open" === t.readyState) try {
                                        t.endOfStream()
                                    } catch (e) {
                                        l.logger.warn("[buffer-controller]: onMediaDetaching: " + e.message + " while calling endOfStream")
                                    }
                                    this.onBufferReset(), t.removeEventListener("sourceopen", this._onMediaSourceOpen), t.removeEventListener("sourceended", this._onMediaSourceEnded), t.removeEventListener("sourceclose", this._onMediaSourceClose), e && (e.removeEventListener("emptied", this._onMediaEmptied), n && self.URL.revokeObjectURL(n), e.src === n ? (e.removeAttribute("src"), e.load()) : l.logger.warn("[buffer-controller]: media.src was changed by a third party - skip cleanup")), this.mediaSource = null, this.media = null, this._objectUrl = null, this.bufferCodecEventsExpected = this._bufferCodecEventsTotal, this.pendingTracks = {}, this.tracks = {}
                                }
                                this.hls.trigger(o.Events.MEDIA_DETACHED, void 0)
                            }, t.onBufferReset = function () {
                                var e = this;
                                this.getSourceBufferTypes().forEach((function (t) {
                                    var n = e.sourceBuffer[t];
                                    try {
                                        n && (e.removeBufferListeners(t), e.mediaSource && e.mediaSource.removeSourceBuffer(n), e.sourceBuffer[t] = void 0)
                                    } catch (e) {
                                        l.logger.warn("[buffer-controller]: Failed to reset the " + t + " buffer", e)
                                    }
                                })), this._initSourceBuffer()
                            }, t.onBufferCodecs = function (e, t) {
                                var n = this, r = this.getSourceBufferTypes().length;
                                Object.keys(t).forEach((function (e) {
                                    if (r) {
                                        var i = n.tracks[e];
                                        if (i && "function" == typeof i.buffer.changeType) {
                                            var a = t[e], o = a.id, s = a.codec, d = a.levelCodec, c = a.container,
                                                p = a.metadata, u = (i.levelCodec || i.codec).replace(mt, "$1"),
                                                g = (d || s).replace(mt, "$1");
                                            if (u !== g) {
                                                var m = c + ";codecs=" + (d || s);
                                                n.appendChangeType(e, m), l.logger.log("[buffer-controller]: switching codec " + u + " to " + g), n.tracks[e] = {
                                                    buffer: i.buffer,
                                                    codec: s,
                                                    container: c,
                                                    levelCodec: d,
                                                    metadata: p,
                                                    id: o
                                                }
                                            }
                                        }
                                    } else n.pendingTracks[e] = t[e]
                                })), r || (this.bufferCodecEventsExpected = Math.max(this.bufferCodecEventsExpected - 1, 0), this.mediaSource && "open" === this.mediaSource.readyState && this.checkPendingTracks())
                            }, t.appendChangeType = function (e, t) {
                                var n = this, r = this.operationQueue, i = {
                                    execute: function () {
                                        var i = n.sourceBuffer[e];
                                        i && (l.logger.log("[buffer-controller]: changing " + e + " sourceBuffer type to " + t), i.changeType(t)), r.shiftAndExecuteNext(e)
                                    }, onStart: function () {
                                    }, onComplete: function () {
                                    }, onError: function (t) {
                                        l.logger.warn("[buffer-controller]: Failed to change " + e + " SourceBuffer type", t)
                                    }
                                };
                                r.append(i, e)
                            }, t.onBufferAppending = function (e, t) {
                                var n = this, r = this.hls, i = this.operationQueue, a = this.tracks, d = t.data,
                                    c = t.type, p = t.frag, u = t.part, g = t.chunkMeta, m = g.buffering[c],
                                    f = self.performance.now();
                                m.start = f;
                                var h = p.stats.buffering, _ = u ? u.stats.buffering : null;
                                0 === h.start && (h.start = f), _ && 0 === _.start && (_.start = f);
                                var v = a.audio, b = !1;
                                "audio" === c && "audio/mpeg" === (null == v ? void 0 : v.container) && (b = !this.lastMpegAudioChunk || 1 === g.id || this.lastMpegAudioChunk.sn !== g.sn, this.lastMpegAudioChunk = g);
                                var y = p.start, A = {
                                    execute: function () {
                                        if (m.executeStart = self.performance.now(), b) {
                                            var e = n.sourceBuffer[c];
                                            if (e) {
                                                var t = y - e.timestampOffset;
                                                Math.abs(t) >= .1 && (l.logger.log("[buffer-controller]: Updating audio SourceBuffer timestampOffset to " + y + " (delta: " + t + ") sn: " + p.sn + ")"), e.timestampOffset = y)
                                            }
                                        }
                                        n.appendExecutor(d, c)
                                    }, onStart: function () {
                                    }, onComplete: function () {
                                        var e = self.performance.now();
                                        m.executeEnd = m.end = e, 0 === h.first && (h.first = e), _ && 0 === _.first && (_.first = e);
                                        var t = n.sourceBuffer, r = {};
                                        for (var i in t) r[i] = xe.getBuffered(t[i]);
                                        n.appendError = 0, n.hls.trigger(o.Events.BUFFER_APPENDED, {
                                            type: c,
                                            frag: p,
                                            part: u,
                                            chunkMeta: g,
                                            parent: p.type,
                                            timeRanges: r
                                        })
                                    }, onError: function (e) {
                                        l.logger.error("[buffer-controller]: Error encountered while trying to append to the " + c + " SourceBuffer", e);
                                        var t = {
                                            type: s.ErrorTypes.MEDIA_ERROR,
                                            parent: p.type,
                                            details: s.ErrorDetails.BUFFER_APPEND_ERROR,
                                            err: e,
                                            fatal: !1
                                        };
                                        e.code === DOMException.QUOTA_EXCEEDED_ERR ? t.details = s.ErrorDetails.BUFFER_FULL_ERROR : (n.appendError++, t.details = s.ErrorDetails.BUFFER_APPEND_ERROR, n.appendError > r.config.appendErrorMaxRetry && (l.logger.error("[buffer-controller]: Failed " + r.config.appendErrorMaxRetry + " times to append segment in sourceBuffer"), t.fatal = !0, r.stopLoad())), r.trigger(o.Events.ERROR, t)
                                    }
                                };
                                i.append(A, c)
                            }, t.onBufferFlushing = function (e, t) {
                                var n = this, r = this.operationQueue, i = function (e) {
                                    return {
                                        execute: n.removeExecutor.bind(n, e, t.startOffset, t.endOffset),
                                        onStart: function () {
                                        },
                                        onComplete: function () {
                                            n.hls.trigger(o.Events.BUFFER_FLUSHED, {type: e})
                                        },
                                        onError: function (t) {
                                            l.logger.warn("[buffer-controller]: Failed to remove from " + e + " SourceBuffer", t)
                                        }
                                    }
                                };
                                t.type ? r.append(i(t.type), t.type) : this.getSourceBufferTypes().forEach((function (e) {
                                    r.append(i(e), e)
                                }))
                            }, t.onFragParsed = function (e, t) {
                                var n = this, r = t.frag, i = t.part, a = [],
                                    s = i ? i.elementaryStreams : r.elementaryStreams;
                                s[_.ElementaryStreamTypes.AUDIOVIDEO] ? a.push("audiovideo") : (s[_.ElementaryStreamTypes.AUDIO] && a.push("audio"), s[_.ElementaryStreamTypes.VIDEO] && a.push("video")), 0 === a.length && l.logger.warn("Fragments must have at least one ElementaryStreamType set. type: " + r.type + " level: " + r.level + " sn: " + r.sn), this.blockBuffers((function () {
                                    var e = self.performance.now();
                                    r.stats.buffering.end = e, i && (i.stats.buffering.end = e);
                                    var t = i ? i.stats : r.stats;
                                    n.hls.trigger(o.Events.FRAG_BUFFERED, {frag: r, part: i, stats: t, id: r.type})
                                }), a)
                            }, t.onFragChanged = function (e, t) {
                                this.flushBackBuffer()
                            }, t.onBufferEos = function (e, t) {
                                var n = this;
                                this.getSourceBufferTypes().reduce((function (e, r) {
                                    var i = n.sourceBuffer[r];
                                    return !i || t.type && t.type !== r || (i.ending = !0, i.ended || (i.ended = !0, l.logger.log("[buffer-controller]: " + r + " sourceBuffer now EOS"))), e && !(i && !i.ended)
                                }), !0) && (l.logger.log("[buffer-controller]: Queueing mediaSource.endOfStream()"), this.blockBuffers((function () {
                                    n.getSourceBufferTypes().forEach((function (e) {
                                        var t = n.sourceBuffer[e];
                                        t && (t.ending = !1)
                                    }));
                                    var e = n.mediaSource;
                                    e && "open" === e.readyState ? (l.logger.log("[buffer-controller]: Calling mediaSource.endOfStream()"), e.endOfStream()) : e && l.logger.info("[buffer-controller]: Could not call mediaSource.endOfStream(). mediaSource.readyState: " + e.readyState)
                                })))
                            }, t.onLevelUpdated = function (e, t) {
                                var n = t.details;
                                n.fragments.length && (this.details = n, this.getSourceBufferTypes().length ? this.blockBuffers(this.updateMediaElementDuration.bind(this)) : this.updateMediaElementDuration())
                            }, t.flushBackBuffer = function () {
                                var e = this.hls, t = this.details, n = this.media, r = this.sourceBuffer;
                                if (n && null !== t) {
                                    var i = this.getSourceBufferTypes();
                                    if (i.length) {
                                        var s = t.live && null !== e.config.liveBackBufferLength ? e.config.liveBackBufferLength : e.config.backBufferLength;
                                        if ((0, a.isFiniteNumber)(s) && !(s < 0)) {
                                            var d = n.currentTime, c = t.levelTargetDuration, p = Math.max(s, c),
                                                u = Math.floor(d / c) * c - p;
                                            i.forEach((function (n) {
                                                var i = r[n];
                                                if (i) {
                                                    var a = xe.getBuffered(i);
                                                    if (a.length > 0 && u > a.start(0)) {
                                                        if (e.trigger(o.Events.BACK_BUFFER_REACHED, {bufferEnd: u}), t.live) e.trigger(o.Events.LIVE_BACK_BUFFER_REACHED, {bufferEnd: u}); else if (i.ended && a.end(a.length - 1) - d < 2 * c) return void l.logger.info("[buffer-controller]: Cannot flush " + n + " back buffer while SourceBuffer is in ended state");
                                                        e.trigger(o.Events.BUFFER_FLUSHING, {
                                                            startOffset: 0,
                                                            endOffset: u,
                                                            type: n
                                                        })
                                                    }
                                                }
                                            }))
                                        }
                                    }
                                }
                            }, t.updateMediaElementDuration = function () {
                                if (this.details && this.media && this.mediaSource && "open" === this.mediaSource.readyState) {
                                    var e = this.details, t = this.hls, n = this.media, r = this.mediaSource,
                                        i = e.fragments[0].start + e.totalduration, o = n.duration,
                                        s = (0, a.isFiniteNumber)(r.duration) ? r.duration : 0;
                                    e.live && t.config.liveDurationInfinity ? (l.logger.log("[buffer-controller]: Media Source duration is set to Infinity"), r.duration = 1 / 0, this.updateSeekableRange(e)) : (i > s && i > o || !(0, a.isFiniteNumber)(o)) && (l.logger.log("[buffer-controller]: Updating Media Source duration to " + i.toFixed(3)), r.duration = i)
                                }
                            }, t.updateSeekableRange = function (e) {
                                var t = this.mediaSource, n = e.fragments;
                                if (n.length && e.live && null != t && t.setLiveSeekableRange) {
                                    var r = Math.max(0, n[0].start), i = Math.max(r, r + e.totalduration);
                                    t.setLiveSeekableRange(r, i)
                                }
                            }, t.checkPendingTracks = function () {
                                var e = this.bufferCodecEventsExpected, t = this.operationQueue, n = this.pendingTracks,
                                    r = Object.keys(n).length;
                                if (r && !e || 2 === r) {
                                    this.createSourceBuffers(n), this.pendingTracks = {};
                                    var i = this.getSourceBufferTypes();
                                    if (0 === i.length) return void this.hls.trigger(o.Events.ERROR, {
                                        type: s.ErrorTypes.MEDIA_ERROR,
                                        details: s.ErrorDetails.BUFFER_INCOMPATIBLE_CODECS_ERROR,
                                        fatal: !0,
                                        reason: "could not create source buffer for media codec(s)"
                                    });
                                    i.forEach((function (e) {
                                        t.executeNext(e)
                                    }))
                                }
                            }, t.createSourceBuffers = function (e) {
                                var t = this.sourceBuffer, n = this.mediaSource;
                                if (!n) throw Error("createSourceBuffers called when mediaSource was null");
                                var r = 0;
                                for (var i in e) if (!t[i]) {
                                    var a = e[i];
                                    if (!a) throw Error("source buffer exists for track " + i + ", however track does not");
                                    var d = a.levelCodec || a.codec, c = a.container + ";codecs=" + d;
                                    l.logger.log("[buffer-controller]: creating sourceBuffer(" + c + ")");
                                    try {
                                        var p = t[i] = n.addSourceBuffer(c), u = i;
                                        this.addBufferListener(u, "updatestart", this._onSBUpdateStart), this.addBufferListener(u, "updateend", this._onSBUpdateEnd), this.addBufferListener(u, "error", this._onSBUpdateError), this.tracks[i] = {
                                            buffer: p,
                                            codec: d,
                                            container: a.container,
                                            levelCodec: a.levelCodec,
                                            metadata: a.metadata,
                                            id: a.id
                                        }, r++
                                    } catch (e) {
                                        l.logger.error("[buffer-controller]: error while trying to add sourceBuffer: " + e.message), this.hls.trigger(o.Events.ERROR, {
                                            type: s.ErrorTypes.MEDIA_ERROR,
                                            details: s.ErrorDetails.BUFFER_ADD_CODEC_ERROR,
                                            fatal: !1,
                                            error: e,
                                            mimeType: c
                                        })
                                    }
                                }
                                r && this.hls.trigger(o.Events.BUFFER_CREATED, {tracks: this.tracks})
                            }, t._onSBUpdateStart = function (e) {
                                this.operationQueue.current(e).onStart()
                            }, t._onSBUpdateEnd = function (e) {
                                var t = this.operationQueue;
                                t.current(e).onComplete(), t.shiftAndExecuteNext(e)
                            }, t._onSBUpdateError = function (e, t) {
                                l.logger.error("[buffer-controller]: " + e + " SourceBuffer error", t), this.hls.trigger(o.Events.ERROR, {
                                    type: s.ErrorTypes.MEDIA_ERROR,
                                    details: s.ErrorDetails.BUFFER_APPENDING_ERROR,
                                    fatal: !1
                                });
                                var n = this.operationQueue.current(e);
                                n && n.onError(t)
                            }, t.removeExecutor = function (e, t, n) {
                                var r = this.media, i = this.mediaSource, o = this.operationQueue,
                                    s = this.sourceBuffer[e];
                                if (!r || !i || !s) return l.logger.warn("[buffer-controller]: Attempting to remove from the " + e + " SourceBuffer, but it does not exist"), void o.shiftAndExecuteNext(e);
                                var d = (0, a.isFiniteNumber)(r.duration) ? r.duration : 1 / 0,
                                    c = (0, a.isFiniteNumber)(i.duration) ? i.duration : 1 / 0, p = Math.max(0, t),
                                    u = Math.min(n, d, c);
                                u > p && !s.ending ? (s.ended = !1, l.logger.log("[buffer-controller]: Removing [" + p + "," + u + "] from the " + e + " SourceBuffer"), s.remove(p, u)) : o.shiftAndExecuteNext(e)
                            }, t.appendExecutor = function (e, t) {
                                var n = this.operationQueue, r = this.sourceBuffer[t];
                                if (!r) return l.logger.warn("[buffer-controller]: Attempting to append to the " + t + " SourceBuffer, but it does not exist"), void n.shiftAndExecuteNext(t);
                                r.ended = !1, r.appendBuffer(e)
                            }, t.blockBuffers = function (e, t) {
                                var n = this;
                                if (void 0 === t && (t = this.getSourceBufferTypes()), !t.length) return l.logger.log("[buffer-controller]: Blocking operation requested, but no SourceBuffers exist"), void Promise.resolve().then(e);
                                var r = this.operationQueue, i = t.map((function (e) {
                                    return r.appendBlocker(e)
                                }));
                                Promise.all(i).then((function () {
                                    e(), t.forEach((function (e) {
                                        var t = n.sourceBuffer[e];
                                        t && t.updating || r.shiftAndExecuteNext(e)
                                    }))
                                }))
                            }, t.getSourceBufferTypes = function () {
                                return Object.keys(this.sourceBuffer)
                            }, t.addBufferListener = function (e, t, n) {
                                var r = this.sourceBuffer[e];
                                if (r) {
                                    var i = n.bind(this, e);
                                    this.listeners[e].push({event: t, listener: i}), r.addEventListener(t, i)
                                }
                            }, t.removeBufferListeners = function (e) {
                                var t = this.sourceBuffer[e];
                                t && this.listeners[e].forEach((function (e) {
                                    t.removeEventListener(e.event, e.listener)
                                }))
                            }, e
                        }();
                        const ht = function () {
                            function e(e) {
                                this.autoLevelCapping = void 0, this.firstLevel = void 0, this.media = void 0, this.restrictedLevels = void 0, this.timer = void 0, this.hls = void 0, this.streamController = void 0, this.clientRect = void 0, this.hls = e, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.firstLevel = -1, this.media = null, this.restrictedLevels = [], this.timer = void 0, this.clientRect = null, this.registerListeners()
                            }

                            var t, n, r = e.prototype;
                            return r.setStreamController = function (e) {
                                this.streamController = e
                            }, r.destroy = function () {
                                this.unregisterListener(), this.hls.config.capLevelToPlayerSize && this.stopCapping(), this.media = null, this.clientRect = null, this.hls = this.streamController = null
                            }, r.registerListeners = function () {
                                var e = this.hls;
                                e.on(o.Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this), e.on(o.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), e.on(o.Events.MANIFEST_PARSED, this.onManifestParsed, this), e.on(o.Events.BUFFER_CODECS, this.onBufferCodecs, this), e.on(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this)
                            }, r.unregisterListener = function () {
                                var e = this.hls;
                                e.off(o.Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this), e.off(o.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), e.off(o.Events.MANIFEST_PARSED, this.onManifestParsed, this), e.off(o.Events.BUFFER_CODECS, this.onBufferCodecs, this), e.off(o.Events.MEDIA_DETACHING, this.onMediaDetaching, this)
                            }, r.onFpsDropLevelCapping = function (t, n) {
                                e.isLevelAllowed(n.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(n.droppedLevel)
                            }, r.onMediaAttaching = function (e, t) {
                                this.media = t.media instanceof HTMLVideoElement ? t.media : null, this.clientRect = null
                            }, r.onManifestParsed = function (e, t) {
                                var n = this.hls;
                                this.restrictedLevels = [], this.firstLevel = t.firstLevel, n.config.capLevelToPlayerSize && t.video && this.startCapping()
                            }, r.onBufferCodecs = function (e, t) {
                                this.hls.config.capLevelToPlayerSize && t.video && this.startCapping()
                            }, r.onMediaDetaching = function () {
                                this.stopCapping()
                            }, r.detectPlayerSize = function () {
                                if (this.media && this.mediaHeight > 0 && this.mediaWidth > 0) {
                                    var e = this.hls.levels;
                                    if (e.length) {
                                        var t = this.hls;
                                        t.autoLevelCapping = this.getMaxLevel(e.length - 1), t.autoLevelCapping > this.autoLevelCapping && this.streamController && this.streamController.nextLevelSwitch(), this.autoLevelCapping = t.autoLevelCapping
                                    }
                                }
                            }, r.getMaxLevel = function (t) {
                                var n = this, r = this.hls.levels;
                                if (!r.length) return -1;
                                var i = r.filter((function (r, i) {
                                    return e.isLevelAllowed(i, n.restrictedLevels) && i <= t
                                }));
                                return this.clientRect = null, e.getMaxLevelByMediaSize(i, this.mediaWidth, this.mediaHeight)
                            }, r.startCapping = function () {
                                this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY, this.hls.firstLevel = this.getMaxLevel(this.firstLevel), self.clearInterval(this.timer), this.timer = self.setInterval(this.detectPlayerSize.bind(this), 1e3), this.detectPlayerSize())
                            }, r.stopCapping = function () {
                                this.restrictedLevels = [], this.firstLevel = -1, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.timer && (self.clearInterval(this.timer), this.timer = void 0)
                            }, r.getDimensions = function () {
                                if (this.clientRect) return this.clientRect;
                                var e = this.media, t = {width: 0, height: 0};
                                if (e) {
                                    var n = e.getBoundingClientRect();
                                    t.width = n.width, t.height = n.height, t.width || t.height || (t.width = n.right - n.left || e.width || 0, t.height = n.bottom - n.top || e.height || 0)
                                }
                                return this.clientRect = t, t
                            }, e.isLevelAllowed = function (e, t) {
                                return void 0 === t && (t = []), -1 === t.indexOf(e)
                            }, e.getMaxLevelByMediaSize = function (e, t, n) {
                                if (!e || !e.length) return -1;
                                for (var r, i, a = e.length - 1, o = 0; o < e.length; o += 1) {
                                    var s = e[o];
                                    if ((s.width >= t || s.height >= n) && (r = s, !(i = e[o + 1]) || r.width !== i.width || r.height !== i.height)) {
                                        a = o;
                                        break
                                    }
                                }
                                return a
                            }, t = e, (n = [{
                                key: "mediaWidth", get: function () {
                                    return this.getDimensions().width * this.contentScaleFactor
                                }
                            }, {
                                key: "mediaHeight", get: function () {
                                    return this.getDimensions().height * this.contentScaleFactor
                                }
                            }, {
                                key: "contentScaleFactor", get: function () {
                                    var e = 1;
                                    if (!this.hls.config.ignoreDevicePixelRatio) try {
                                        e = self.devicePixelRatio
                                    } catch (e) {
                                    }
                                    return e
                                }
                            }]) && function (e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                        if ("object" != typeof e || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var r = n.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(e)
                                    }(r.key)) ? i : String(i), r)
                                }
                                var i
                            }(t.prototype, n), Object.defineProperty(t, "prototype", {writable: !1}), e
                        }(), _t = function () {
                            function e(e) {
                                this.hls = void 0, this.isVideoPlaybackQualityAvailable = !1, this.timer = void 0, this.media = null, this.lastTime = void 0, this.lastDroppedFrames = 0, this.lastDecodedFrames = 0, this.streamController = void 0, this.hls = e, this.registerListeners()
                            }

                            var t = e.prototype;
                            return t.setStreamController = function (e) {
                                this.streamController = e
                            }, t.registerListeners = function () {
                                this.hls.on(o.Events.MEDIA_ATTACHING, this.onMediaAttaching, this)
                            }, t.unregisterListeners = function () {
                                this.hls.off(o.Events.MEDIA_ATTACHING, this.onMediaAttaching)
                            }, t.destroy = function () {
                                this.timer && clearInterval(this.timer), this.unregisterListeners(), this.isVideoPlaybackQualityAvailable = !1, this.media = null
                            }, t.onMediaAttaching = function (e, t) {
                                var n = this.hls.config;
                                if (n.capLevelOnFPSDrop) {
                                    var r = t.media instanceof self.HTMLVideoElement ? t.media : null;
                                    this.media = r, r && "function" == typeof r.getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0), self.clearInterval(this.timer), this.timer = self.setInterval(this.checkFPSInterval.bind(this), n.fpsDroppedMonitoringPeriod)
                                }
                            }, t.checkFPS = function (e, t, n) {
                                var r = performance.now();
                                if (t) {
                                    if (this.lastTime) {
                                        var i = r - this.lastTime, a = n - this.lastDroppedFrames,
                                            s = t - this.lastDecodedFrames, d = 1e3 * a / i, c = this.hls;
                                        if (c.trigger(o.Events.FPS_DROP, {
                                            currentDropped: a,
                                            currentDecoded: s,
                                            totalDroppedFrames: n
                                        }), d > 0 && a > c.config.fpsDroppedMonitoringThreshold * s) {
                                            var p = c.currentLevel;
                                            l.logger.warn("drop FPS ratio greater than max allowed value for currentLevel: " + p), p > 0 && (-1 === c.autoLevelCapping || c.autoLevelCapping >= p) && (p -= 1, c.trigger(o.Events.FPS_DROP_LEVEL_CAPPING, {
                                                level: p,
                                                droppedLevel: c.currentLevel
                                            }), c.autoLevelCapping = p, this.streamController.nextLevelSwitch())
                                        }
                                    }
                                    this.lastTime = r, this.lastDroppedFrames = n, this.lastDecodedFrames = t
                                }
                            }, t.checkFPSInterval = function () {
                                var e = this.media;
                                if (e) if (this.isVideoPlaybackQualityAvailable) {
                                    var t = e.getVideoPlaybackQuality();
                                    this.checkFPS(e, t.totalVideoFrames, t.droppedVideoFrames)
                                } else this.checkFPS(e, e.webkitDecodedFrameCount, e.webkitDroppedFrameCount)
                            }, e
                        }();
                        var vt = n(408), bt = /^age:\s*[\d.]+\s*$/m;
                        const yt = function () {
                            function e(e) {
                                this.xhrSetup = void 0, this.requestTimeout = void 0, this.retryTimeout = void 0, this.retryDelay = void 0, this.config = null, this.callbacks = null, this.context = void 0, this.loader = null, this.stats = void 0, this.xhrSetup = e ? e.xhrSetup : null, this.stats = new vt.LoadStats, this.retryDelay = 0
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                this.callbacks = null, this.abortInternal(), this.loader = null, this.config = null
                            }, t.abortInternal = function () {
                                var e = this.loader;
                                self.clearTimeout(this.requestTimeout), self.clearTimeout(this.retryTimeout), e && (e.onreadystatechange = null, e.onprogress = null, 4 !== e.readyState && (this.stats.aborted = !0, e.abort()))
                            }, t.abort = function () {
                                var e;
                                this.abortInternal(), null !== (e = this.callbacks) && void 0 !== e && e.onAbort && this.callbacks.onAbort(this.stats, this.context, this.loader)
                            }, t.load = function (e, t, n) {
                                if (this.stats.loading.start) throw new Error("Loader can only be used once.");
                                this.stats.loading.start = self.performance.now(), this.context = e, this.config = t, this.callbacks = n, this.retryDelay = t.retryDelay, this.loadInternal()
                            }, t.loadInternal = function () {
                                var e = this.config, t = this.context;
                                if (e) {
                                    var n = this.loader = new self.XMLHttpRequest, r = this.stats;
                                    r.loading.first = 0, r.loaded = 0;
                                    var i = this.xhrSetup;
                                    try {
                                        if (i) try {
                                            i(n, t.url)
                                        } catch (e) {
                                            n.open("GET", t.url, !0), i(n, t.url)
                                        }
                                        n.readyState || n.open("GET", t.url, !0);
                                        var a = this.context.headers;
                                        if (a) for (var o in a) n.setRequestHeader(o, a[o])
                                    } catch (e) {
                                        return void this.callbacks.onError({code: n.status, text: e.message}, t, n)
                                    }
                                    t.rangeEnd && n.setRequestHeader("Range", "bytes=" + t.rangeStart + "-" + (t.rangeEnd - 1)), n.onreadystatechange = this.readystatechange.bind(this), n.onprogress = this.loadprogress.bind(this), n.responseType = t.responseType, self.clearTimeout(this.requestTimeout), this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), e.timeout), n.send()
                                }
                            }, t.readystatechange = function () {
                                var e = this.context, t = this.loader, n = this.stats;
                                if (e && t) {
                                    var r = t.readyState, i = this.config;
                                    if (!n.aborted && r >= 2) if (self.clearTimeout(this.requestTimeout), 0 === n.loading.first && (n.loading.first = Math.max(self.performance.now(), n.loading.start)), 4 === r) {
                                        t.onreadystatechange = null, t.onprogress = null;
                                        var a = t.status, o = "arraybuffer" === t.responseType;
                                        if (a >= 200 && a < 300 && (o && t.response || null !== t.responseText)) {
                                            var s, d;
                                            if (n.loading.end = Math.max(self.performance.now(), n.loading.first), d = o ? (s = t.response).byteLength : (s = t.responseText).length, n.loaded = n.total = d, !this.callbacks) return;
                                            var c = this.callbacks.onProgress;
                                            if (c && c(n, e, s, t), !this.callbacks) return;
                                            var p = {url: t.responseURL, data: s};
                                            this.callbacks.onSuccess(p, n, e, t)
                                        } else n.retry >= i.maxRetry || a >= 400 && a < 499 ? (l.logger.error(a + " while loading " + e.url), this.callbacks.onError({
                                            code: a,
                                            text: t.statusText
                                        }, e, t)) : (l.logger.warn(a + " while loading " + e.url + ", retrying in " + this.retryDelay + "..."), this.abortInternal(), this.loader = null, self.clearTimeout(this.retryTimeout), this.retryTimeout = self.setTimeout(this.loadInternal.bind(this), this.retryDelay), this.retryDelay = Math.min(2 * this.retryDelay, i.maxRetryDelay), n.retry++)
                                    } else self.clearTimeout(this.requestTimeout), this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), i.timeout)
                                }
                            }, t.loadtimeout = function () {
                                l.logger.warn("timeout while loading " + this.context.url);
                                var e = this.callbacks;
                                e && (this.abortInternal(), e.onTimeout(this.stats, this.context, this.loader))
                            }, t.loadprogress = function (e) {
                                var t = this.stats;
                                t.loaded = e.loaded, e.lengthComputable && (t.total = e.total)
                            }, t.getCacheAge = function () {
                                var e = null;
                                if (this.loader && bt.test(this.loader.getAllResponseHeaders())) {
                                    var t = this.loader.getResponseHeader("age");
                                    e = t ? parseFloat(t) : null
                                }
                                return e
                            }, e
                        }();
                        var At = function () {
                            function e() {
                                this.chunks = [], this.dataLength = 0
                            }

                            var t = e.prototype;
                            return t.push = function (e) {
                                this.chunks.push(e), this.dataLength += e.length
                            }, t.flush = function () {
                                var e, t = this.chunks, n = this.dataLength;
                                return t.length ? (e = 1 === t.length ? t[0] : function (e, t) {
                                    for (var n = new Uint8Array(t), r = 0, i = 0; i < e.length; i++) {
                                        var a = e[i];
                                        n.set(a, r), r += a.length
                                    }
                                    return n
                                }(t, n), this.reset(), e) : new Uint8Array(0)
                            }, t.reset = function () {
                                this.chunks.length = 0, this.dataLength = 0
                            }, e
                        }();

                        function Et(e) {
                            var t = "function" == typeof Map ? new Map : void 0;
                            return (Et = function (e) {
                                if (null === e || (n = e, -1 === Function.toString.call(n).indexOf("[native code]"))) return e;
                                var n;
                                if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
                                if (void 0 !== t) {
                                    if (t.has(e)) return t.get(e);
                                    t.set(e, r)
                                }

                                function r() {
                                    return Tt(e, arguments, xt(this).constructor)
                                }

                                return r.prototype = Object.create(e.prototype, {
                                    constructor: {
                                        value: r,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0
                                    }
                                }), St(r, e)
                            })(e)
                        }

                        function Tt(e, t, n) {
                            return (Tt = wt() ? Reflect.construct.bind() : function (e, t, n) {
                                var r = [null];
                                r.push.apply(r, t);
                                var i = new (Function.bind.apply(e, r));
                                return n && St(i, n.prototype), i
                            }).apply(null, arguments)
                        }

                        function wt() {
                            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                            if (Reflect.construct.sham) return !1;
                            if ("function" == typeof Proxy) return !0;
                            try {
                                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function () {
                                }))), !0
                            } catch (e) {
                                return !1
                            }
                        }

                        function St(e, t) {
                            return (St = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
                                return e.__proto__ = t, e
                            })(e, t)
                        }

                        function xt(e) {
                            return (xt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (e) {
                                return e.__proto__ || Object.getPrototypeOf(e)
                            })(e)
                        }

                        function kt() {
                            return (kt = Object.assign ? Object.assign.bind() : function (e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                                }
                                return e
                            }).apply(this, arguments)
                        }

                        var Ct = function () {
                            function e(e) {
                                this.fetchSetup = void 0, this.requestTimeout = void 0, this.request = void 0, this.response = void 0, this.controller = void 0, this.context = void 0, this.config = null, this.callbacks = null, this.stats = void 0, this.loader = null, this.fetchSetup = e.fetchSetup || Lt, this.controller = new self.AbortController, this.stats = new vt.LoadStats
                            }

                            var t = e.prototype;
                            return t.destroy = function () {
                                this.loader = this.callbacks = null, this.abortInternal()
                            }, t.abortInternal = function () {
                                var e = this.response;
                                e && e.ok || (this.stats.aborted = !0, this.controller.abort())
                            }, t.abort = function () {
                                var e;
                                this.abortInternal(), null !== (e = this.callbacks) && void 0 !== e && e.onAbort && this.callbacks.onAbort(this.stats, this.context, this.response)
                            }, t.load = function (e, t, n) {
                                var r = this, i = this.stats;
                                if (i.loading.start) throw new Error("Loader can only be used once.");
                                i.loading.start = self.performance.now();
                                var o = function (e, t) {
                                        var n = {
                                            method: "GET",
                                            mode: "cors",
                                            credentials: "same-origin",
                                            signal: t,
                                            headers: new self.Headers(kt({}, e.headers))
                                        };
                                        return e.rangeEnd && n.headers.set("Range", "bytes=" + e.rangeStart + "-" + String(e.rangeEnd - 1)), n
                                    }(e, this.controller.signal), s = n.onProgress, l = "arraybuffer" === e.responseType,
                                    d = l ? "byteLength" : "length";
                                this.context = e, this.config = t, this.callbacks = n, this.request = this.fetchSetup(e, o), self.clearTimeout(this.requestTimeout), this.requestTimeout = self.setTimeout((function () {
                                    r.abortInternal(), n.onTimeout(i, e, r.response)
                                }), t.timeout), self.fetch(this.request).then((function (n) {
                                    if (r.response = r.loader = n, !n.ok) {
                                        var o = n.status, d = n.statusText;
                                        throw new Rt(d || "fetch, bad network response", o, n)
                                    }
                                    return i.loading.first = Math.max(self.performance.now(), i.loading.start), i.total = parseInt(n.headers.get("Content-Length") || "0"), s && (0, a.isFiniteNumber)(t.highWaterMark) ? r.loadProgressively(n, i, e, t.highWaterMark, s) : l ? n.arrayBuffer() : n.text()
                                })).then((function (o) {
                                    var l = r.response;
                                    self.clearTimeout(r.requestTimeout), i.loading.end = Math.max(self.performance.now(), i.loading.first);
                                    var c = o[d];
                                    c && (i.loaded = i.total = c);
                                    var p = {url: l.url, data: o};
                                    s && !(0, a.isFiniteNumber)(t.highWaterMark) && s(i, e, o, l), n.onSuccess(p, i, e, l)
                                })).catch((function (t) {
                                    if (self.clearTimeout(r.requestTimeout), !i.aborted) {
                                        var a = t && t.code || 0, o = t ? t.message : null;
                                        n.onError({code: a, text: o}, e, t ? t.details : null)
                                    }
                                }))
                            }, t.getCacheAge = function () {
                                var e = null;
                                if (this.response) {
                                    var t = this.response.headers.get("age");
                                    e = t ? parseFloat(t) : null
                                }
                                return e
                            }, t.loadProgressively = function (e, t, n, r, i) {
                                void 0 === r && (r = 0);
                                var a = new At, o = e.body.getReader();
                                return function s() {
                                    return o.read().then((function (o) {
                                        if (o.done) return a.dataLength && i(t, n, a.flush(), e), Promise.resolve(new ArrayBuffer(0));
                                        var l = o.value, d = l.length;
                                        return t.loaded += d, d < r || a.dataLength ? (a.push(l), a.dataLength >= r && i(t, n, a.flush(), e)) : i(t, n, l, e), s()
                                    })).catch((function () {
                                        return Promise.reject()
                                    }))
                                }()
                            }, e
                        }();

                        function Lt(e, t) {
                            return new self.Request(e.url, t)
                        }

                        var Rt = function (e) {
                            var t, n;

                            function r(t, n, r) {
                                var i;
                                return (i = e.call(this, t) || this).code = void 0, i.details = void 0, i.code = n, i.details = r, i
                            }

                            return n = e, (t = r).prototype = Object.create(n.prototype), t.prototype.constructor = t, St(t, n), r
                        }(Et(Error));
                        const Pt = Ct;

                        function It() {
                            return (It = Object.assign ? Object.assign.bind() : function (e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                                }
                                return e
                            }).apply(this, arguments)
                        }

                        function Mt(e, t) {
                            var n = Object.keys(e);
                            if (Object.getOwnPropertySymbols) {
                                var r = Object.getOwnPropertySymbols(e);
                                t && (r = r.filter((function (t) {
                                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                                }))), n.push.apply(n, r)
                            }
                            return n
                        }

                        function Dt(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? Mt(Object(n), !0).forEach((function (t) {
                                    Ot(e, t, n[t])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Mt(Object(n)).forEach((function (t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                }))
                            }
                            return e
                        }

                        function Ot(e, t, n) {
                            return (t = function (e) {
                                var t = function (e, t) {
                                    if ("object" != typeof e || null === e) return e;
                                    var n = e[Symbol.toPrimitive];
                                    if (void 0 !== n) {
                                        var r = n.call(e, "string");
                                        if ("object" != typeof r) return r;
                                        throw new TypeError("@@toPrimitive must return a primitive value.")
                                    }
                                    return String(e)
                                }(e);
                                return "symbol" == typeof t ? t : String(t)
                            }(t)) in e ? Object.defineProperty(e, t, {
                                value: n,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : e[t] = n, e
                        }

                        var Bt = Dt(Dt({
                            autoStartLoad: !0,
                            startPosition: -1,
                            defaultAudioCodec: void 0,
                            debug: !1,
                            capLevelOnFPSDrop: !1,
                            capLevelToPlayerSize: !1,
                            ignoreDevicePixelRatio: !1,
                            initialLiveManifestSize: 1,
                            maxBufferLength: 30,
                            backBufferLength: 1 / 0,
                            maxBufferSize: 6e7,
                            maxBufferHole: .1,
                            highBufferWatchdogPeriod: 2,
                            nudgeOffset: .1,
                            nudgeMaxRetry: 3,
                            maxFragLookUpTolerance: .25,
                            liveSyncDurationCount: 3,
                            liveMaxLatencyDurationCount: 1 / 0,
                            liveSyncDuration: void 0,
                            liveMaxLatencyDuration: void 0,
                            maxLiveSyncPlaybackRate: 1,
                            liveDurationInfinity: !1,
                            liveBackBufferLength: null,
                            maxMaxBufferLength: 600,
                            enableWorker: !0,
                            enableSoftwareAES: !0,
                            manifestLoadingTimeOut: 1e4,
                            manifestLoadingMaxRetry: 1,
                            manifestLoadingRetryDelay: 1e3,
                            manifestLoadingMaxRetryTimeout: 64e3,
                            startLevel: void 0,
                            levelLoadingTimeOut: 1e4,
                            levelLoadingMaxRetry: 4,
                            levelLoadingRetryDelay: 1e3,
                            levelLoadingMaxRetryTimeout: 64e3,
                            fragLoadingTimeOut: 2e4,
                            fragLoadingMaxRetry: 6,
                            fragLoadingRetryDelay: 1e3,
                            fragLoadingMaxRetryTimeout: 64e3,
                            startFragPrefetch: !1,
                            fpsDroppedMonitoringPeriod: 5e3,
                            fpsDroppedMonitoringThreshold: .2,
                            appendErrorMaxRetry: 3,
                            loader: yt,
                            fLoader: void 0,
                            pLoader: void 0,
                            xhrSetup: void 0,
                            licenseXhrSetup: void 0,
                            licenseResponseCallback: void 0,
                            abrController: dt,
                            bufferController: ft,
                            capLevelController: ht,
                            fpsController: _t,
                            stretchShortVideoTrack: !1,
                            maxAudioFramesDrift: 1,
                            forceKeyFrameOnDiscontinuity: !0,
                            abrEwmaFastLive: 3,
                            abrEwmaSlowLive: 9,
                            abrEwmaFastVoD: 3,
                            abrEwmaSlowVoD: 9,
                            abrEwmaDefaultEstimate: 5e5,
                            abrBandWidthFactor: .95,
                            abrBandWidthUpFactor: .7,
                            abrMaxWithRealBitrate: !1,
                            maxStarvationDelay: 4,
                            maxLoadingDelay: 4,
                            minAutoBitrate: 0,
                            emeEnabled: !1,
                            widevineLicenseUrl: void 0,
                            drmSystems: {},
                            drmSystemOptions: {},
                            requestMediaKeySystemAccessFunc: y,
                            testBandwidth: !0,
                            progressive: !1,
                            lowLatencyMode: !0,
                            cmcd: void 0,
                            enableDateRangeMetadataCues: !0,
                            enableEmsgMetadataCues: !0,
                            enableID3MetadataCues: !0
                        }, {
                            cueHandler: pt(),
                            enableWebVTT: !1,
                            enableIMSC1: !1,
                            enableCEA708Captions: !1,
                            captionsTextTrack1Label: "English",
                            captionsTextTrack1LanguageCode: "en",
                            captionsTextTrack2Label: "Spanish",
                            captionsTextTrack2LanguageCode: "es",
                            captionsTextTrack3Label: "Unknown CC",
                            captionsTextTrack3LanguageCode: "",
                            captionsTextTrack4Label: "Unknown CC",
                            captionsTextTrack4LanguageCode: "",
                            renderTextTracksNatively: !0
                        }), {}, {
                            subtitleStreamController: void 0,
                            subtitleTrackController: void 0,
                            timelineController: void 0,
                            audioStreamController: void 0,
                            audioTrackController: void 0,
                            emeController: void 0,
                            cmcdController: void 0
                        });

                        function Nt(e, t) {
                            for (var n = 0; n < t.length; n++) {
                                var r = t[n];
                                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                    if ("object" != typeof e || null === e) return e;
                                    var n = e[Symbol.toPrimitive];
                                    if (void 0 !== n) {
                                        var r = n.call(e, "string");
                                        if ("object" != typeof r) return r;
                                        throw new TypeError("@@toPrimitive must return a primitive value.")
                                    }
                                    return String(e)
                                }(r.key)) ? i : String(i), r)
                            }
                            var i
                        }

                        var Ft = function () {
                            function e(t) {
                                void 0 === t && (t = {}), this.config = void 0, this.userConfig = void 0, this.coreComponents = void 0, this.networkControllers = void 0, this._emitter = new tt.EventEmitter, this._autoLevelCapping = void 0, this._maxHdcpLevel = null, this.abrController = void 0, this.bufferController = void 0, this.capLevelController = void 0, this.latencyController = void 0, this.levelController = void 0, this.streamController = void 0, this.audioTrackController = void 0, this.subtitleTrackController = void 0, this.emeController = void 0, this.cmcdController = void 0, this._media = null, this.url = null;
                                var n = this.config = function (e, t) {
                                    if ((t.liveSyncDurationCount || t.liveMaxLatencyDurationCount) && (t.liveSyncDuration || t.liveMaxLatencyDuration)) throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                                    if (void 0 !== t.liveMaxLatencyDurationCount && (void 0 === t.liveSyncDurationCount || t.liveMaxLatencyDurationCount <= t.liveSyncDurationCount)) throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"');
                                    if (void 0 !== t.liveMaxLatencyDuration && (void 0 === t.liveSyncDuration || t.liveMaxLatencyDuration <= t.liveSyncDuration)) throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"');
                                    return It({}, e, t)
                                }(e.DefaultConfig, t);
                                this.userConfig = t, (0, l.enableLogs)(n.debug, "Hls instance"), this._autoLevelCapping = -1, n.progressive && function (e) {
                                    var t = e.loader;
                                    t !== Pt && t !== yt ? (l.logger.log("[config]: Custom loader detected, cannot enable progressive streaming"), e.progressive = !1) : function () {
                                        if (self.fetch && self.AbortController && self.ReadableStream && self.Request) try {
                                            return new self.ReadableStream({}), !0
                                        } catch (e) {
                                        }
                                        return !1
                                    }() && (e.loader = Pt, e.progressive = !0, e.enableSoftwareAES = !0, l.logger.log("[config]: Progressive streaming enabled, using FetchLoader"))
                                }(n);
                                var r = n.abrController, i = n.bufferController, a = n.capLevelController,
                                    o = n.fpsController, s = this.abrController = new r(this),
                                    d = this.bufferController = new i(this), c = this.capLevelController = new a(this),
                                    p = new o(this), u = new H(this), g = new Q(this),
                                    m = this.levelController = new ce(this), f = new pe(this), h = new Te(this.config),
                                    _ = this.streamController = new ot(this, f, h);
                                c.setStreamController(_), p.setStreamController(_);
                                var v = [u, m, _];
                                this.networkControllers = v;
                                var b = [s, d, c, p, g, f];
                                this.audioTrackController = this.createController(n.audioTrackController, v);
                                var y = n.audioStreamController;
                                y && v.push(new y(this, f, h)), this.subtitleTrackController = this.createController(n.subtitleTrackController, v);
                                var A = n.subtitleStreamController;
                                A && v.push(new A(this, f, h)), this.createController(n.timelineController, b), h.emeController = this.emeController = this.createController(n.emeController, b), this.cmcdController = this.createController(n.cmcdController, b), this.latencyController = this.createController(q, b), this.coreComponents = b
                            }

                            e.isSupported = function () {
                                return function () {
                                    var e = je();
                                    if (!e) return !1;
                                    var t = Qe(),
                                        n = e && "function" == typeof e.isTypeSupported && e.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'),
                                        r = !t || t.prototype && "function" == typeof t.prototype.appendBuffer && "function" == typeof t.prototype.remove;
                                    return !!n && !!r
                                }()
                            };
                            var t, n, r, a = e.prototype;
                            return a.createController = function (e, t) {
                                if (e) {
                                    var n = new e(this);
                                    return t && t.push(n), n
                                }
                                return null
                            }, a.on = function (e, t, n) {
                                void 0 === n && (n = this), this._emitter.on(e, t, n)
                            }, a.once = function (e, t, n) {
                                void 0 === n && (n = this), this._emitter.once(e, t, n)
                            }, a.removeAllListeners = function (e) {
                                this._emitter.removeAllListeners(e)
                            }, a.off = function (e, t, n, r) {
                                void 0 === n && (n = this), this._emitter.off(e, t, n, r)
                            }, a.listeners = function (e) {
                                return this._emitter.listeners(e)
                            }, a.emit = function (e, t, n) {
                                return this._emitter.emit(e, t, n)
                            }, a.trigger = function (e, t) {
                                if (this.config.debug) return this.emit(e, e, t);
                                try {
                                    return this.emit(e, e, t)
                                } catch (t) {
                                    l.logger.error("An internal error happened while handling event " + e + '. Error message: "' + t.message + '". Here is a stacktrace:', t), this.trigger(o.Events.ERROR, {
                                        type: s.ErrorTypes.OTHER_ERROR,
                                        details: s.ErrorDetails.INTERNAL_EXCEPTION,
                                        fatal: !1,
                                        event: e,
                                        error: t
                                    })
                                }
                                return !1
                            }, a.listenerCount = function (e) {
                                return this._emitter.listenerCount(e)
                            }, a.destroy = function () {
                                l.logger.log("destroy"), this.trigger(o.Events.DESTROYING, void 0), this.detachMedia(), this.removeAllListeners(), this._autoLevelCapping = -1, this.url = null, this.networkControllers.forEach((function (e) {
                                    return e.destroy()
                                })), this.networkControllers.length = 0, this.coreComponents.forEach((function (e) {
                                    return e.destroy()
                                })), this.coreComponents.length = 0
                            }, a.attachMedia = function (e) {
                                l.logger.log("attachMedia"), this._media = e, this.trigger(o.Events.MEDIA_ATTACHING, {media: e})
                            }, a.detachMedia = function () {
                                l.logger.log("detachMedia"), this.trigger(o.Events.MEDIA_DETACHING, void 0), this._media = null
                            }, a.loadSource = function (e) {
                                this.stopLoad();
                                var t = this.media, n = this.url,
                                    r = this.url = i.buildAbsoluteURL(self.location.href, e, {alwaysNormalize: !0});
                                l.logger.log("loadSource:" + r), t && n && n !== r && this.bufferController.hasSourceTypes() && (this.detachMedia(), this.attachMedia(t)), this.trigger(o.Events.MANIFEST_LOADING, {url: e})
                            }, a.startLoad = function (e) {
                                void 0 === e && (e = -1), l.logger.log("startLoad(" + e + ")"), this.networkControllers.forEach((function (t) {
                                    t.startLoad(e)
                                }))
                            }, a.stopLoad = function () {
                                l.logger.log("stopLoad"), this.networkControllers.forEach((function (e) {
                                    e.stopLoad()
                                }))
                            }, a.swapAudioCodec = function () {
                                l.logger.log("swapAudioCodec"), this.streamController.swapAudioCodec()
                            }, a.recoverMediaError = function () {
                                l.logger.log("recoverMediaError");
                                var e = this._media;
                                this.detachMedia(), e && this.attachMedia(e)
                            }, a.removeLevel = function (e, t) {
                                void 0 === t && (t = 0), this.levelController.removeLevel(e, t)
                            }, t = e, r = [{
                                key: "version", get: function () {
                                    return "1.3.3"
                                }
                            }, {
                                key: "Events", get: function () {
                                    return o.Events
                                }
                            }, {
                                key: "ErrorTypes", get: function () {
                                    return s.ErrorTypes
                                }
                            }, {
                                key: "ErrorDetails", get: function () {
                                    return s.ErrorDetails
                                }
                            }, {
                                key: "DefaultConfig", get: function () {
                                    return e.defaultConfig ? e.defaultConfig : Bt
                                }, set: function (t) {
                                    e.defaultConfig = t
                                }
                            }], (n = [{
                                key: "levels", get: function () {
                                    return this.levelController.levels || []
                                }
                            }, {
                                key: "currentLevel", get: function () {
                                    return this.streamController.currentLevel
                                }, set: function (e) {
                                    l.logger.log("set currentLevel:" + e), this.loadLevel = e, this.abrController.clearTimer(), this.streamController.immediateLevelSwitch()
                                }
                            }, {
                                key: "nextLevel", get: function () {
                                    return this.streamController.nextLevel
                                }, set: function (e) {
                                    l.logger.log("set nextLevel:" + e), this.levelController.manualLevel = e, this.streamController.nextLevelSwitch()
                                }
                            }, {
                                key: "loadLevel", get: function () {
                                    return this.levelController.level
                                }, set: function (e) {
                                    l.logger.log("set loadLevel:" + e), this.levelController.manualLevel = e
                                }
                            }, {
                                key: "nextLoadLevel", get: function () {
                                    return this.levelController.nextLoadLevel
                                }, set: function (e) {
                                    this.levelController.nextLoadLevel = e
                                }
                            }, {
                                key: "firstLevel", get: function () {
                                    return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                                }, set: function (e) {
                                    l.logger.log("set firstLevel:" + e), this.levelController.firstLevel = e
                                }
                            }, {
                                key: "startLevel", get: function () {
                                    return this.levelController.startLevel
                                }, set: function (e) {
                                    l.logger.log("set startLevel:" + e), -1 !== e && (e = Math.max(e, this.minAutoLevel)), this.levelController.startLevel = e
                                }
                            }, {
                                key: "capLevelToPlayerSize", get: function () {
                                    return this.config.capLevelToPlayerSize
                                }, set: function (e) {
                                    var t = !!e;
                                    t !== this.config.capLevelToPlayerSize && (t ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(), this.autoLevelCapping = -1, this.streamController.nextLevelSwitch()), this.config.capLevelToPlayerSize = t)
                                }
                            }, {
                                key: "autoLevelCapping", get: function () {
                                    return this._autoLevelCapping
                                }, set: function (e) {
                                    this._autoLevelCapping !== e && (l.logger.log("set autoLevelCapping:" + e), this._autoLevelCapping = e)
                                }
                            }, {
                                key: "bandwidthEstimate", get: function () {
                                    var e = this.abrController.bwEstimator;
                                    return e ? e.getEstimate() : NaN
                                }
                            }, {
                                key: "maxHdcpLevel", get: function () {
                                    return this._maxHdcpLevel
                                }, set: function (e) {
                                    X.indexOf(e) > -1 && (this._maxHdcpLevel = e)
                                }
                            }, {
                                key: "autoLevelEnabled", get: function () {
                                    return -1 === this.levelController.manualLevel
                                }
                            }, {
                                key: "manualLevel", get: function () {
                                    return this.levelController.manualLevel
                                }
                            }, {
                                key: "minAutoLevel", get: function () {
                                    var e = this.levels, t = this.config.minAutoBitrate;
                                    if (!e) return 0;
                                    for (var n = e.length, r = 0; r < n; r++) if (e[r].maxBitrate >= t) return r;
                                    return 0
                                }
                            }, {
                                key: "maxAutoLevel", get: function () {
                                    var e, t = this.levels, n = this.autoLevelCapping, r = this.maxHdcpLevel;
                                    if (e = -1 === n && t && t.length ? t.length - 1 : n, r) for (var i = e; i--;) {
                                        var a = t[i].attrs["HDCP-LEVEL"];
                                        if (a && a <= r) return i
                                    }
                                    return e
                                }
                            }, {
                                key: "nextAutoLevel", get: function () {
                                    return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel)
                                }, set: function (e) {
                                    this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, e)
                                }
                            }, {
                                key: "playingDate", get: function () {
                                    return this.streamController.currentProgramDateTime
                                }
                            }, {
                                key: "mainForwardBufferInfo", get: function () {
                                    return this.streamController.getMainFwdBufferInfo()
                                }
                            }, {
                                key: "audioTracks", get: function () {
                                    var e = this.audioTrackController;
                                    return e ? e.audioTracks : []
                                }
                            }, {
                                key: "audioTrack", get: function () {
                                    var e = this.audioTrackController;
                                    return e ? e.audioTrack : -1
                                }, set: function (e) {
                                    var t = this.audioTrackController;
                                    t && (t.audioTrack = e)
                                }
                            }, {
                                key: "subtitleTracks", get: function () {
                                    var e = this.subtitleTrackController;
                                    return e ? e.subtitleTracks : []
                                }
                            }, {
                                key: "subtitleTrack", get: function () {
                                    var e = this.subtitleTrackController;
                                    return e ? e.subtitleTrack : -1
                                }, set: function (e) {
                                    var t = this.subtitleTrackController;
                                    t && (t.subtitleTrack = e)
                                }
                            }, {
                                key: "media", get: function () {
                                    return this._media
                                }
                            }, {
                                key: "subtitleDisplay", get: function () {
                                    var e = this.subtitleTrackController;
                                    return !!e && e.subtitleDisplay
                                }, set: function (e) {
                                    var t = this.subtitleTrackController;
                                    t && (t.subtitleDisplay = e)
                                }
                            }, {
                                key: "lowLatencyMode", get: function () {
                                    return this.config.lowLatencyMode
                                }, set: function (e) {
                                    this.config.lowLatencyMode = e
                                }
                            }, {
                                key: "liveSyncPosition", get: function () {
                                    return this.latencyController.liveSyncPosition
                                }
                            }, {
                                key: "latency", get: function () {
                                    return this.latencyController.latency
                                }
                            }, {
                                key: "maxLatency", get: function () {
                                    return this.latencyController.maxLatency
                                }
                            }, {
                                key: "targetLatency", get: function () {
                                    return this.latencyController.targetLatency
                                }
                            }, {
                                key: "drift", get: function () {
                                    return this.latencyController.drift
                                }
                            }, {
                                key: "forceStartLoad", get: function () {
                                    return this.streamController.forceStartLoad
                                }
                            }]) && Nt(t.prototype, n), r && Nt(t, r), Object.defineProperty(t, "prototype", {writable: !1}), e
                        }();
                        Ft.defaultConfig = void 0
                    }, 923: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {
                            BaseSegment: () => p,
                            ElementaryStreamTypes: () => r,
                            Fragment: () => u,
                            Part: () => g
                        });
                        var r, i = n(965), a = n(945), o = n(408);

                        function s(e, t) {
                            e.prototype = Object.create(t.prototype), e.prototype.constructor = e, l(e, t)
                        }

                        function l(e, t) {
                            return (l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
                                return e.__proto__ = t, e
                            })(e, t)
                        }

                        function d(e, t) {
                            for (var n = 0; n < t.length; n++) {
                                var r = t[n];
                                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, "symbol" == typeof (i = function (e, t) {
                                    if ("object" != typeof e || null === e) return e;
                                    var n = e[Symbol.toPrimitive];
                                    if (void 0 !== n) {
                                        var r = n.call(e, "string");
                                        if ("object" != typeof r) return r;
                                        throw new TypeError("@@toPrimitive must return a primitive value.")
                                    }
                                    return String(e)
                                }(r.key)) ? i : String(i), r)
                            }
                            var i
                        }

                        function c(e, t, n) {
                            return t && d(e.prototype, t), n && d(e, n), Object.defineProperty(e, "prototype", {writable: !1}), e
                        }

                        !function (e) {
                            e.AUDIO = "audio", e.VIDEO = "video", e.AUDIOVIDEO = "audiovideo"
                        }(r || (r = {}));
                        var p = function () {
                            function e(e) {
                                var t;
                                this._byteRange = null, this._url = null, this.baseurl = void 0, this.relurl = void 0, this.elementaryStreams = ((t = {})[r.AUDIO] = null, t[r.VIDEO] = null, t[r.AUDIOVIDEO] = null, t), this.baseurl = e
                            }

                            return e.prototype.setByteRange = function (e, t) {
                                var n = e.split("@", 2), r = [];
                                1 === n.length ? r[0] = t ? t.byteRangeEndOffset : 0 : r[0] = parseInt(n[1]), r[1] = parseInt(n[0]) + r[0], this._byteRange = r
                            }, c(e, [{
                                key: "byteRange", get: function () {
                                    return this._byteRange ? this._byteRange : []
                                }
                            }, {
                                key: "byteRangeStartOffset", get: function () {
                                    return this.byteRange[0]
                                }
                            }, {
                                key: "byteRangeEndOffset", get: function () {
                                    return this.byteRange[1]
                                }
                            }, {
                                key: "url", get: function () {
                                    return !this._url && this.baseurl && this.relurl && (this._url = (0, a.buildAbsoluteURL)(this.baseurl, this.relurl, {alwaysNormalize: !0})), this._url || ""
                                }, set: function (e) {
                                    this._url = e
                                }
                            }]), e
                        }(), u = function (e) {
                            function t(t, n) {
                                var r;
                                return (r = e.call(this, n) || this)._decryptdata = null, r.rawProgramDateTime = null, r.programDateTime = null, r.tagList = [], r.duration = 0, r.sn = 0, r.levelkeys = void 0, r.type = void 0, r.loader = null, r.keyLoader = null, r.level = -1, r.cc = 0, r.startPTS = void 0, r.endPTS = void 0, r.appendedPTS = void 0, r.startDTS = void 0, r.endDTS = void 0, r.start = 0, r.deltaPTS = void 0, r.maxStartPTS = void 0, r.minEndPTS = void 0, r.stats = new o.LoadStats, r.urlId = 0, r.data = void 0, r.bitrateTest = !1, r.title = null, r.initSegment = null, r.endList = void 0, r.type = t, r
                            }

                            s(t, e);
                            var n = t.prototype;
                            return n.setKeyFormat = function (e) {
                                if (this.levelkeys) {
                                    var t = this.levelkeys[e];
                                    t && !this._decryptdata && (this._decryptdata = t.getDecryptData(this.sn))
                                }
                            }, n.abortRequests = function () {
                                var e, t;
                                null === (e = this.loader) || void 0 === e || e.abort(), null === (t = this.keyLoader) || void 0 === t || t.abort()
                            }, n.setElementaryStreamInfo = function (e, t, n, r, i, a) {
                                void 0 === a && (a = !1);
                                var o = this.elementaryStreams, s = o[e];
                                s ? (s.startPTS = Math.min(s.startPTS, t), s.endPTS = Math.max(s.endPTS, n), s.startDTS = Math.min(s.startDTS, r), s.endDTS = Math.max(s.endDTS, i)) : o[e] = {
                                    startPTS: t,
                                    endPTS: n,
                                    startDTS: r,
                                    endDTS: i,
                                    partial: a
                                }
                            }, n.clearElementaryStreamInfo = function () {
                                var e = this.elementaryStreams;
                                e[r.AUDIO] = null, e[r.VIDEO] = null, e[r.AUDIOVIDEO] = null
                            }, c(t, [{
                                key: "decryptdata", get: function () {
                                    if (!this.levelkeys && !this._decryptdata) return null;
                                    if (!this._decryptdata && this.levelkeys && !this.levelkeys.NONE) {
                                        var e = this.levelkeys.identity;
                                        if (e) this._decryptdata = e.getDecryptData(this.sn); else {
                                            var t = Object.keys(this.levelkeys);
                                            if (1 === t.length) return this._decryptdata = this.levelkeys[t[0]].getDecryptData(this.sn)
                                        }
                                    }
                                    return this._decryptdata
                                }
                            }, {
                                key: "end", get: function () {
                                    return this.start + this.duration
                                }
                            }, {
                                key: "endProgramDateTime", get: function () {
                                    if (null === this.programDateTime) return null;
                                    if (!(0, i.isFiniteNumber)(this.programDateTime)) return null;
                                    var e = (0, i.isFiniteNumber)(this.duration) ? this.duration : 0;
                                    return this.programDateTime + 1e3 * e
                                }
                            }, {
                                key: "encrypted", get: function () {
                                    var e;
                                    if (null !== (e = this._decryptdata) && void 0 !== e && e.encrypted) return !0;
                                    if (this.levelkeys) {
                                        var t = Object.keys(this.levelkeys), n = t.length;
                                        if (n > 1 || 1 === n && this.levelkeys[t[0]].encrypted) return !0
                                    }
                                    return !1
                                }
                            }]), t
                        }(p), g = function (e) {
                            function t(t, n, r, i, a) {
                                var s;
                                (s = e.call(this, r) || this).fragOffset = 0, s.duration = 0, s.gap = !1, s.independent = !1, s.relurl = void 0, s.fragment = void 0, s.index = void 0, s.stats = new o.LoadStats, s.duration = t.decimalFloatingPoint("DURATION"), s.gap = t.bool("GAP"), s.independent = t.bool("INDEPENDENT"), s.relurl = t.enumeratedString("URI"), s.fragment = n, s.index = i;
                                var l = t.enumeratedString("BYTERANGE");
                                return l && s.setByteRange(l, a), a && (s.fragOffset = a.fragOffset + a.duration), s
                            }

                            return s(t, e), c(t, [{
                                key: "start", get: function () {
                                    return this.fragment.start + this.fragOffset
                                }
                            }, {
                                key: "end", get: function () {
                                    return this.start + this.duration
                                }
                            }, {
                                key: "loaded", get: function () {
                                    var e = this.elementaryStreams;
                                    return !!(e.audio || e.video || e.audiovideo)
                                }
                            }]), t
                        }(p)
                    }, 408: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {LoadStats: () => r});
                        var r = function () {
                            this.aborted = !1, this.loaded = 0, this.retry = 0, this.total = 0, this.chunkCount = 0, this.bwEstimate = 0, this.loading = {
                                start: 0,
                                first: 0,
                                end: 0
                            }, this.parsing = {start: 0, end: 0}, this.buffering = {start: 0, first: 0, end: 0}
                        }
                    }, 965: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {MAX_SAFE_INTEGER: () => i, isFiniteNumber: () => r});
                        var r = Number.isFinite || function (e) {
                            return "number" == typeof e && isFinite(e)
                        }, i = Number.MAX_SAFE_INTEGER || 9007199254740991
                    }, 856: (e, t, n) => {
                        "use strict";
                        var r;
                        n.r(t), n.d(t, {MetadataSchema: () => r}), function (e) {
                            e.audioId3 = "org.id3", e.dateRange = "com.apple.quicktime.HLS", e.emsg = "https://aomedia.org/emsg/ID3"
                        }(r || (r = {}))
                    }, 308: (e, t, n) => {
                        "use strict";
                        var r, i;
                        n.r(t), n.d(t, {PlaylistContextType: () => r, PlaylistLevelType: () => i}), function (e) {
                            e.MANIFEST = "manifest", e.LEVEL = "level", e.AUDIO_TRACK = "audioTrack", e.SUBTITLE_TRACK = "subtitleTrack"
                        }(r || (r = {})), function (e) {
                            e.MAIN = "main", e.AUDIO = "audio", e.SUBTITLE = "subtitle"
                        }(i || (i = {}))
                    }, 93: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {enableLogs: () => s, logger: () => l});
                        var r = function () {
                        }, i = {trace: r, debug: r, log: r, warn: r, info: r, error: r}, a = i;

                        function o(e) {
                            var t = self.console[e];
                            return t ? t.bind(self.console, "[" + e + "] >") : r
                        }

                        function s(e, t) {
                            if (self.console && !0 === e || "object" == typeof e) {
                                !function (e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    n.forEach((function (t) {
                                        a[t] = e[t] ? e[t].bind(e) : o(t)
                                    }))
                                }(e, "debug", "log", "info", "warn", "error");
                                try {
                                    a.log('Debug logs enabled for "' + t + '"')
                                } catch (e) {
                                    a = i
                                }
                            } else a = i
                        }

                        var l = i
                    }, 571: (e, t, n) => {
                        "use strict";
                        n.r(t), n.d(t, {
                            RemuxerTrackIdConfig: () => c,
                            appendUint8Array: () => x,
                            bin2str: () => p,
                            computeRawDurationFromSamples: () => T,
                            discardEPB: () => R,
                            findBox: () => h,
                            getDuration: () => E,
                            getStartDTS: () => A,
                            mp4Box: () => I,
                            mp4pssh: () => M,
                            offsetStartDTS: () => w,
                            parseEmsg: () => P,
                            parseInitSegment: () => v,
                            parsePssh: () => D,
                            parseSEIMessageFromNALu: () => L,
                            parseSamples: () => k,
                            parseSegmentIndex: () => _,
                            parseSinf: () => y,
                            patchEncyptionData: () => b,
                            readSint32: () => m,
                            readUint16: () => u,
                            readUint32: () => g,
                            segmentValidRange: () => S,
                            writeUint32: () => f
                        });
                        var r = n(923), i = n(145), a = n(181), o = n(93);
                        const s = function (e) {
                            for (var t = "", n = 0; n < e.length; n++) {
                                var r = e[n].toString(16);
                                r.length < 2 && (r = "0" + r), t += r
                            }
                            return t
                        };
                        var l = Math.pow(2, 32) - 1, d = [].push, c = {video: 1, audio: 2, id3: 3, text: 4};

                        function p(e) {
                            return String.fromCharCode.apply(null, e)
                        }

                        function u(e, t) {
                            var n = e[t] << 8 | e[t + 1];
                            return n < 0 ? 65536 + n : n
                        }

                        function g(e, t) {
                            var n = m(e, t);
                            return n < 0 ? 4294967296 + n : n
                        }

                        function m(e, t) {
                            return e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]
                        }

                        function f(e, t, n) {
                            e[t] = n >> 24, e[t + 1] = n >> 16 & 255, e[t + 2] = n >> 8 & 255, e[t + 3] = 255 & n
                        }

                        function h(e, t) {
                            var n = [];
                            if (!t.length) return n;
                            for (var r = e.byteLength, i = 0; i < r;) {
                                var a = g(e, i), o = a > 1 ? i + a : r;
                                if (p(e.subarray(i + 4, i + 8)) === t[0]) if (1 === t.length) n.push(e.subarray(i + 8, o)); else {
                                    var s = h(e.subarray(i + 8, o), t.slice(1));
                                    s.length && d.apply(n, s)
                                }
                                i = o
                            }
                            return n
                        }

                        function _(e) {
                            var t = [], n = e[0], r = 8, i = g(e, r);
                            r += 4, r += 0 === n ? 8 : 16, r += 2;
                            var a = e.length + 0, o = u(e, r);
                            r += 2;
                            for (var s = 0; s < o; s++) {
                                var l = r, d = g(e, l);
                                l += 4;
                                var c = 2147483647 & d;
                                if (1 == (2147483648 & d) >>> 31) return console.warn("SIDX has hierarchical references (not supported)"), null;
                                var p = g(e, l);
                                l += 4, t.push({
                                    referenceSize: c,
                                    subsegmentDuration: p,
                                    info: {duration: p / i, start: a, end: a + c - 1}
                                }), a += c, r = l += 4
                            }
                            return {
                                earliestPresentationTime: 0,
                                timescale: i,
                                version: n,
                                referencesCount: o,
                                references: t
                            }
                        }

                        function v(e) {
                            for (var t = [], n = h(e, ["moov", "trak"]), i = 0; i < n.length; i++) {
                                var a = n[i], o = h(a, ["tkhd"])[0];
                                if (o) {
                                    var s = o[0], l = 0 === s ? 12 : 20, d = g(o, l), c = h(a, ["mdia", "mdhd"])[0];
                                    if (c) {
                                        var u = g(c, l = 0 === (s = c[0]) ? 12 : 20), m = h(a, ["mdia", "hdlr"])[0];
                                        if (m) {
                                            var f = p(m.subarray(8, 12)), _ = {
                                                soun: r.ElementaryStreamTypes.AUDIO,
                                                vide: r.ElementaryStreamTypes.VIDEO
                                            }[f];
                                            if (_) {
                                                var v = h(a, ["mdia", "minf", "stbl", "stsd"])[0], b = void 0;
                                                v && (b = p(v.subarray(12, 16))), t[d] = {
                                                    timescale: u,
                                                    type: _
                                                }, t[_] = {timescale: u, id: d, codec: b}
                                            }
                                        }
                                    }
                                }
                            }
                            return h(e, ["moov", "mvex", "trex"]).forEach((function (e) {
                                var n = g(e, 4), r = t[n];
                                r && (r.default = {duration: g(e, 12), flags: g(e, 20)})
                            })), t
                        }

                        function b(e, t) {
                            if (!e || !t) return e;
                            var n = t.keyId;
                            return n && t.isCommonEncryption && h(e, ["moov", "trak"]).forEach((function (e) {
                                var t = h(e, ["mdia", "minf", "stbl", "stsd"])[0].subarray(8), r = h(t, ["enca"]),
                                    i = r.length > 0;
                                i || (r = h(t, ["encv"])), r.forEach((function (e) {
                                    h(i ? e.subarray(28) : e.subarray(78), ["sinf"]).forEach((function (e) {
                                        var t = y(e);
                                        if (t) {
                                            var r = t.subarray(8, 24);
                                            r.some((function (e) {
                                                return 0 !== e
                                            })) || (o.logger.log("[eme] Patching keyId in 'enc" + (i ? "a" : "v") + ">sinf>>tenc' box: " + s(r) + " -> " + s(n)), t.set(n, 8))
                                        }
                                    }))
                                }))
                            })), e
                        }

                        function y(e) {
                            var t = h(e, ["schm"])[0];
                            if (t) {
                                var n = p(t.subarray(4, 8));
                                if ("cbcs" === n || "cenc" === n) return h(e, ["schi", "tenc"])[0]
                            }
                            return o.logger.error("[eme] missing 'schm' box"), null
                        }

                        function A(e, t) {
                            return h(t, ["moof", "traf"]).reduce((function (t, n) {
                                var r = h(n, ["tfdt"])[0], i = r[0], a = h(n, ["tfhd"]).reduce((function (t, n) {
                                    var a = g(n, 4), o = e[a];
                                    if (o) {
                                        var s = g(r, 4);
                                        1 === i && (s *= Math.pow(2, 32), s += g(r, 8));
                                        var l = s / (o.timescale || 9e4);
                                        if (isFinite(l) && (null === t || l < t)) return l
                                    }
                                    return t
                                }), null);
                                return null !== a && isFinite(a) && (null === t || a < t) ? a : t
                            }), null) || 0
                        }

                        function E(e, t) {
                            for (var n = 0, i = 0, a = 0, o = h(e, ["moof", "traf"]), s = 0; s < o.length; s++) {
                                var l = o[s], d = h(l, ["tfhd"])[0], c = t[g(d, 4)];
                                if (c) {
                                    var p = c.default, u = g(d, 0) | (null == p ? void 0 : p.flags),
                                        m = null == p ? void 0 : p.duration;
                                    8 & u && (m = g(d, 2 & u ? 12 : 8));
                                    for (var f = c.timescale || 9e4, v = h(l, ["trun"]), b = 0; b < v.length; b++) !(n = T(v[b])) && m && (n = m * g(v[b], 4)), c.type === r.ElementaryStreamTypes.VIDEO ? i += n / f : c.type === r.ElementaryStreamTypes.AUDIO && (a += n / f)
                                }
                            }
                            if (0 === i && 0 === a) {
                                for (var y = 0, A = h(e, ["sidx"]), E = 0; E < A.length; E++) {
                                    var w = _(A[E]);
                                    null != w && w.references && (y += w.references.reduce((function (e, t) {
                                        return e + t.info.duration || 0
                                    }), 0))
                                }
                                return y
                            }
                            return i || a
                        }

                        function T(e) {
                            var t = g(e, 0), n = 8;
                            1 & t && (n += 4), 4 & t && (n += 4);
                            for (var r = 0, i = g(e, 4), a = 0; a < i; a++) 256 & t && (r += g(e, n), n += 4), 512 & t && (n += 4), 1024 & t && (n += 4), 2048 & t && (n += 4);
                            return r
                        }

                        function w(e, t, n) {
                            h(t, ["moof", "traf"]).forEach((function (t) {
                                h(t, ["tfhd"]).forEach((function (r) {
                                    var i = g(r, 4), a = e[i];
                                    if (a) {
                                        var o = a.timescale || 9e4;
                                        h(t, ["tfdt"]).forEach((function (e) {
                                            var t = e[0], r = g(e, 4);
                                            if (0 === t) r -= n * o, f(e, 4, r = Math.max(r, 0)); else {
                                                r *= Math.pow(2, 32), r += g(e, 8), r -= n * o, r = Math.max(r, 0);
                                                var i = Math.floor(r / (l + 1)), a = Math.floor(r % (l + 1));
                                                f(e, 4, i), f(e, 8, a)
                                            }
                                        }))
                                    }
                                }))
                            }))
                        }

                        function S(e) {
                            var t = {valid: null, remainder: null}, n = h(e, ["moof"]);
                            if (!n) return t;
                            if (n.length < 2) return t.remainder = e, t;
                            var r = n[n.length - 1];
                            return t.valid = (0, i.sliceUint8)(e, 0, r.byteOffset - 8), t.remainder = (0, i.sliceUint8)(e, r.byteOffset - 8), t
                        }

                        function x(e, t) {
                            var n = new Uint8Array(e.length + t.length);
                            return n.set(e), n.set(t, e.length), n
                        }

                        function k(e, t) {
                            var n = [], i = t.samples, a = t.timescale, o = t.id, s = !1;
                            return h(i, ["moof"]).map((function (l) {
                                var d = l.byteOffset - 8;
                                h(l, ["traf"]).map((function (l) {
                                    var c = h(l, ["tfdt"]).map((function (e) {
                                        var t = e[0], n = g(e, 4);
                                        return 1 === t && (n *= Math.pow(2, 32), n += g(e, 8)), n / a
                                    }))[0];
                                    return void 0 !== c && (e = c), h(l, ["tfhd"]).map((function (c) {
                                        var p = g(c, 4), u = 16777215 & g(c, 0), f = 0, _ = 0 != (16 & u), v = 0,
                                            b = 0 != (32 & u), y = 8;
                                        p === o && (0 != (1 & u) && (y += 8), 0 != (2 & u) && (y += 4), 0 != (8 & u) && (f = g(c, y), y += 4), _ && (v = g(c, y), y += 4), b && (y += 4), "video" === t.type && (s = function (e) {
                                            if (!e) return !1;
                                            var t = e.indexOf("."), n = t < 0 ? e : e.substring(0, t);
                                            return "hvc1" === n || "hev1" === n || "dvh1" === n || "dvhe" === n
                                        }(t.codec)), h(l, ["trun"]).map((function (o) {
                                            var l = o[0], c = 16777215 & g(o, 0), p = 0 != (1 & c), u = 0,
                                                h = 0 != (4 & c), _ = 0 != (256 & c), b = 0, y = 0 != (512 & c), A = 0,
                                                E = 0 != (1024 & c), T = 0 != (2048 & c), w = 0, S = g(o, 4), x = 8;
                                            p && (u = g(o, x), x += 4), h && (x += 4);
                                            for (var k = u + d, R = 0; R < S; R++) {
                                                if (_ ? (b = g(o, x), x += 4) : b = f, y ? (A = g(o, x), x += 4) : A = v, E && (x += 4), T && (w = 0 === l ? g(o, x) : m(o, x), x += 4), t.type === r.ElementaryStreamTypes.VIDEO) for (var P = 0; P < A;) {
                                                    var I = g(i, k);
                                                    C(s, i[k += 4]) && L(i.subarray(k, k + I), s ? 2 : 1, e + w / a, n), k += I, P += I + 4
                                                }
                                                e += b / a
                                            }
                                        })))
                                    }))
                                }))
                            })), n
                        }

                        function C(e, t) {
                            if (e) {
                                var n = t >> 1 & 63;
                                return 39 === n || 40 === n
                            }
                            return 6 == (31 & t)
                        }

                        function L(e, t, n, r) {
                            var i = R(e), o = 0;
                            o += t;
                            for (var s = 0, l = 0, d = !1, c = 0; o < i.length;) {
                                s = 0;
                                do {
                                    if (o >= i.length) break;
                                    s += c = i[o++]
                                } while (255 === c);
                                l = 0;
                                do {
                                    if (o >= i.length) break;
                                    l += c = i[o++]
                                } while (255 === c);
                                var p = i.length - o;
                                if (!d && 4 === s && o < i.length) {
                                    if (d = !0, 181 === i[o++]) {
                                        var m = u(i, o);
                                        if (o += 2, 49 === m) {
                                            var f = g(i, o);
                                            if (o += 4, 1195456820 === f) {
                                                var h = i[o++];
                                                if (3 === h) {
                                                    var _ = i[o++], v = 64 & _, b = v ? 2 + 3 * (31 & _) : 0,
                                                        y = new Uint8Array(b);
                                                    if (v) {
                                                        y[0] = _;
                                                        for (var A = 1; A < b; A++) y[A] = i[o++]
                                                    }
                                                    r.push({type: h, payloadType: s, pts: n, bytes: y})
                                                }
                                            }
                                        }
                                    }
                                } else if (5 === s && l < p) {
                                    if (d = !0, l > 16) {
                                        for (var E = [], T = 0; T < 16; T++) {
                                            var w = i[o++].toString(16);
                                            E.push(1 == w.length ? "0" + w : w), 3 !== T && 5 !== T && 7 !== T && 9 !== T || E.push("-")
                                        }
                                        for (var S = l - 16, x = new Uint8Array(S), k = 0; k < S; k++) x[k] = i[o++];
                                        r.push({
                                            payloadType: s,
                                            pts: n,
                                            uuid: E.join(""),
                                            userData: (0, a.utf8ArrayToStr)(x),
                                            userDataBytes: x
                                        })
                                    }
                                } else if (l < p) o += l; else if (l > p) break
                            }
                        }

                        function R(e) {
                            for (var t = e.byteLength, n = [], r = 1; r < t - 2;) 0 === e[r] && 0 === e[r + 1] && 3 === e[r + 2] ? (n.push(r + 2), r += 2) : r++;
                            if (0 === n.length) return e;
                            var i = t - n.length, a = new Uint8Array(i), o = 0;
                            for (r = 0; r < i; o++, r++) o === n[0] && (o++, n.shift()), a[r] = e[o];
                            return a
                        }

                        function P(e) {
                            var t = e[0], n = "", r = "", i = 0, a = 0, o = 0, s = 0, l = 0, d = 0;
                            if (0 === t) {
                                for (; "\0" !== p(e.subarray(d, d + 1));) n += p(e.subarray(d, d + 1)), d += 1;
                                for (n += p(e.subarray(d, d + 1)), d += 1; "\0" !== p(e.subarray(d, d + 1));) r += p(e.subarray(d, d + 1)), d += 1;
                                r += p(e.subarray(d, d + 1)), d += 1, i = g(e, 12), a = g(e, 16), s = g(e, 20), l = g(e, 24), d = 28
                            } else if (1 === t) {
                                i = g(e, d += 4);
                                var c = g(e, d += 4), u = g(e, d += 4);
                                for (d += 4, o = Math.pow(2, 32) * c + u, Number.isSafeInteger(o) || (o = Number.MAX_SAFE_INTEGER, console.warn("Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box")), s = g(e, d), l = g(e, d += 4), d += 4; "\0" !== p(e.subarray(d, d + 1));) n += p(e.subarray(d, d + 1)), d += 1;
                                for (n += p(e.subarray(d, d + 1)), d += 1; "\0" !== p(e.subarray(d, d + 1));) r += p(e.subarray(d, d + 1)), d += 1;
                                r += p(e.subarray(d, d + 1)), d += 1
                            }
                            return {
                                schemeIdUri: n,
                                value: r,
                                timeScale: i,
                                presentationTime: o,
                                presentationTimeDelta: a,
                                eventDuration: s,
                                id: l,
                                payload: e.subarray(d, e.byteLength)
                            }
                        }

                        function I(e) {
                            for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                            for (var i = n.length, a = 8, o = i; o--;) a += n[o].byteLength;
                            var s = new Uint8Array(a);
                            for (s[0] = a >> 24 & 255, s[1] = a >> 16 & 255, s[2] = a >> 8 & 255, s[3] = 255 & a, s.set(e, 4), o = 0, a = 8; o < i; o++) s.set(n[o], a), a += n[o].byteLength;
                            return s
                        }

                        function M(e, t, n) {
                            if (16 !== e.byteLength) throw new RangeError("Invalid system id");
                            var r, i, a;
                            if (t) {
                                r = 1, i = new Uint8Array(16 * t.length);
                                for (var o = 0; o < t.length; o++) {
                                    var s = t[o];
                                    if (16 !== s.byteLength) throw new RangeError("Invalid key");
                                    i.set(s, 16 * o)
                                }
                            } else r = 0, i = new Uint8Array;
                            r > 0 ? (a = new Uint8Array(4), t.length > 0 && new DataView(a.buffer).setUint32(0, t.length, !1)) : a = new Uint8Array;
                            var l = new Uint8Array(4);
                            return n && n.byteLength > 0 && new DataView(l.buffer).setUint32(0, n.byteLength, !1), I([112, 115, 115, 104], new Uint8Array([r, 0, 0, 0]), e, a, i, l, n || new Uint8Array)
                        }

                        function D(e) {
                            if (!(e instanceof ArrayBuffer) || e.byteLength < 32) return null;
                            var t = {version: 0, systemId: "", kids: null, data: null}, n = new DataView(e),
                                r = n.getUint32(0);
                            if (e.byteLength !== r && r > 44) return null;
                            if (1886614376 !== n.getUint32(4)) return null;
                            if (t.version = n.getUint32(8) >>> 24, t.version > 1) return null;
                            t.systemId = s(new Uint8Array(e, 12, 16));
                            var i = n.getUint32(28);
                            if (0 === t.version) {
                                if (r - 32 < i) return null;
                                t.data = new Uint8Array(e, 32, i)
                            } else if (1 === t.version) {
                                t.kids = [];
                                for (var a = 0; a < i; a++) t.kids.push(new Uint8Array(e, 32 + 16 * a, 16))
                            }
                            return t
                        }
                    }, 145: (e, t, n) => {
                        "use strict";

                        function r(e, t, n) {
                            return Uint8Array.prototype.slice ? e.slice(t, n) : new Uint8Array(Array.prototype.slice.call(e, t, n))
                        }

                        n.r(t), n.d(t, {sliceUint8: () => r})
                    }, 729: e => {
                        "use strict";
                        var t = Object.prototype.hasOwnProperty, n = "~";

                        function r() {
                        }

                        function i(e, t, n) {
                            this.fn = e, this.context = t, this.once = n || !1
                        }

                        function a(e, t, r, a, o) {
                            if ("function" != typeof r) throw new TypeError("The listener must be a function");
                            var s = new i(r, a || e, o), l = n ? n + t : t;
                            return e._events[l] ? e._events[l].fn ? e._events[l] = [e._events[l], s] : e._events[l].push(s) : (e._events[l] = s, e._eventsCount++), e
                        }

                        function o(e, t) {
                            0 == --e._eventsCount ? e._events = new r : delete e._events[t]
                        }

                        function s() {
                            this._events = new r, this._eventsCount = 0
                        }

                        Object.create && (r.prototype = Object.create(null), (new r).__proto__ || (n = !1)), s.prototype.eventNames = function () {
                            var e, r, i = [];
                            if (0 === this._eventsCount) return i;
                            for (r in e = this._events) t.call(e, r) && i.push(n ? r.slice(1) : r);
                            return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(e)) : i
                        }, s.prototype.listeners = function (e) {
                            var t = n ? n + e : e, r = this._events[t];
                            if (!r) return [];
                            if (r.fn) return [r.fn];
                            for (var i = 0, a = r.length, o = new Array(a); i < a; i++) o[i] = r[i].fn;
                            return o
                        }, s.prototype.listenerCount = function (e) {
                            var t = n ? n + e : e, r = this._events[t];
                            return r ? r.fn ? 1 : r.length : 0
                        }, s.prototype.emit = function (e, t, r, i, a, o) {
                            var s = n ? n + e : e;
                            if (!this._events[s]) return !1;
                            var l, d, c = this._events[s], p = arguments.length;
                            if (c.fn) {
                                switch (c.once && this.removeListener(e, c.fn, void 0, !0), p) {
                                    case 1:
                                        return c.fn.call(c.context), !0;
                                    case 2:
                                        return c.fn.call(c.context, t), !0;
                                    case 3:
                                        return c.fn.call(c.context, t, r), !0;
                                    case 4:
                                        return c.fn.call(c.context, t, r, i), !0;
                                    case 5:
                                        return c.fn.call(c.context, t, r, i, a), !0;
                                    case 6:
                                        return c.fn.call(c.context, t, r, i, a, o), !0
                                }
                                for (d = 1, l = new Array(p - 1); d < p; d++) l[d - 1] = arguments[d];
                                c.fn.apply(c.context, l)
                            } else {
                                var u, g = c.length;
                                for (d = 0; d < g; d++) switch (c[d].once && this.removeListener(e, c[d].fn, void 0, !0), p) {
                                    case 1:
                                        c[d].fn.call(c[d].context);
                                        break;
                                    case 2:
                                        c[d].fn.call(c[d].context, t);
                                        break;
                                    case 3:
                                        c[d].fn.call(c[d].context, t, r);
                                        break;
                                    case 4:
                                        c[d].fn.call(c[d].context, t, r, i);
                                        break;
                                    default:
                                        if (!l) for (u = 1, l = new Array(p - 1); u < p; u++) l[u - 1] = arguments[u];
                                        c[d].fn.apply(c[d].context, l)
                                }
                            }
                            return !0
                        }, s.prototype.on = function (e, t, n) {
                            return a(this, e, t, n, !1)
                        }, s.prototype.once = function (e, t, n) {
                            return a(this, e, t, n, !0)
                        }, s.prototype.removeListener = function (e, t, r, i) {
                            var a = n ? n + e : e;
                            if (!this._events[a]) return this;
                            if (!t) return o(this, a), this;
                            var s = this._events[a];
                            if (s.fn) s.fn !== t || i && !s.once || r && s.context !== r || o(this, a); else {
                                for (var l = 0, d = [], c = s.length; l < c; l++) (s[l].fn !== t || i && !s[l].once || r && s[l].context !== r) && d.push(s[l]);
                                d.length ? this._events[a] = 1 === d.length ? d[0] : d : o(this, a)
                            }
                            return this
                        }, s.prototype.removeAllListeners = function (e) {
                            var t;
                            return e ? (t = n ? n + e : e, this._events[t] && o(this, t)) : (this._events = new r, this._eventsCount = 0), this
                        }, s.prototype.off = s.prototype.removeListener, s.prototype.addListener = s.prototype.on, s.prefixed = n, s.EventEmitter = s, e.exports = s
                    }, 945: function (e) {
                        var t, n, r, i, a;
                        t = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/, n = /^(?=([^\/?#]*))\1([^]*)$/, r = /(?:\/|^)\.(?=\/)/g, i = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g, a = {
                            buildAbsoluteURL: function (e, t, r) {
                                if (r = r || {}, e = e.trim(), !(t = t.trim())) {
                                    if (!r.alwaysNormalize) return e;
                                    var i = a.parseURL(e);
                                    if (!i) throw new Error("Error trying to parse base URL.");
                                    return i.path = a.normalizePath(i.path), a.buildURLFromParts(i)
                                }
                                var o = a.parseURL(t);
                                if (!o) throw new Error("Error trying to parse relative URL.");
                                if (o.scheme) return r.alwaysNormalize ? (o.path = a.normalizePath(o.path), a.buildURLFromParts(o)) : t;
                                var s = a.parseURL(e);
                                if (!s) throw new Error("Error trying to parse base URL.");
                                if (!s.netLoc && s.path && "/" !== s.path[0]) {
                                    var l = n.exec(s.path);
                                    s.netLoc = l[1], s.path = l[2]
                                }
                                s.netLoc && !s.path && (s.path = "/");
                                var d = {
                                    scheme: s.scheme,
                                    netLoc: o.netLoc,
                                    path: null,
                                    params: o.params,
                                    query: o.query,
                                    fragment: o.fragment
                                };
                                if (!o.netLoc && (d.netLoc = s.netLoc, "/" !== o.path[0])) if (o.path) {
                                    var c = s.path, p = c.substring(0, c.lastIndexOf("/") + 1) + o.path;
                                    d.path = a.normalizePath(p)
                                } else d.path = s.path, o.params || (d.params = s.params, o.query || (d.query = s.query));
                                return null === d.path && (d.path = r.alwaysNormalize ? a.normalizePath(o.path) : o.path), a.buildURLFromParts(d)
                            }, parseURL: function (e) {
                                var n = t.exec(e);
                                return n ? {
                                    scheme: n[1] || "",
                                    netLoc: n[2] || "",
                                    path: n[3] || "",
                                    params: n[4] || "",
                                    query: n[5] || "",
                                    fragment: n[6] || ""
                                } : null
                            }, normalizePath: function (e) {
                                for (e = e.split("").reverse().join("").replace(r, ""); e.length !== (e = e.replace(i, "")).length;) ;
                                return e.split("").reverse().join("")
                            }, buildURLFromParts: function (e) {
                                return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                            }
                        }, e.exports = a
                    }
                }, t = {};

                function n(r) {
                    var i = t[r];
                    if (void 0 !== i) return i.exports;
                    var a = t[r] = {exports: {}};
                    return e[r].call(a.exports, a, a.exports, n), a.exports
                }

                return n.m = e, n.n = e => {
                    var t = e && e.__esModule ? () => e.default : () => e;
                    return n.d(t, {a: t}), t
                }, n.d = (e, t) => {
                    for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {enumerable: !0, get: t[r]})
                }, n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), n.r = e => {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e, "__esModule", {value: !0})
                }, n(53).default
            })(), e.exports = t())
        }, 409: e => {
            var t;
            t = function () {
                var e = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g,
                    t = {
                        ID: /#((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,
                        CLASS: /\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?![^[\]]+])/g,
                        NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,
                        ATTR: /\[\s*((?:[\w\u00c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/g,
                        TAG: /^((?:[\w\u00c0-\uFFFF\*_-]|\\.)+)/,
                        CLONE: /\:(\d+)(?=$|[:[])/,
                        COMBINATOR: /^[>~+]$/
                    }, n = document, r = {}, i = {for: "htmlFor", class: "className", html: "innerHTML"},
                    a = ["ID", "CLASS", "NAME", "ATTR"], o = {
                        ID: function (e, t) {
                            t.id = e[1]
                        }, CLASS: function (e, t) {
                            var n = t.className.replace(/^\s+$/, "");
                            t.className = n ? n + " " + e[1] : e[1]
                        }, NAME: function (e, t) {
                            t.name = e[1]
                        }, ATTR: function (e, t) {
                            var n = e[1], r = e[4] || !0;
                            !0 === r || "innerHTML" === n || i.hasOwnProperty(n) ? t[i[n] || n] = r : t.setAttribute(n, r)
                        }
                    };

                function s(e, r) {
                    for (var i, s, l, d = t.TAG.exec(e), c = n.createElement(d && "*" !== d[1] ? d[1] : "div"), p = n.createDocumentFragment(), u = a.length; u--;) if (s = t[a[u]], l = o[a[u]], s.global) for (; null !== (i = s.exec(e));) l(i, c); else (i = s.exec(e)) && l(i, c);
                    for (; r--;) p.appendChild(c.cloneNode(!0));
                    return p
                }

                function l(e, t) {
                    for (var r, i = (e = e.childNodes).length; i--;) "table" === (r = e[i]).nodeName.toLowerCase() && r.appendChild(r = n.createElement("tbody")), r.appendChild(t.cloneNode(!0))
                }

                function d(i) {
                    if (i in r) return r[i].cloneNode(!0).childNodes;
                    for (var a, o, d, c, p, u = [], g = n.createDocumentFragment(), m = 1, f = 0, h = !1; null !== (p = e.exec(i));) ++f, u.push(p[1]);
                    for (; f--;) d = u[f], t.COMBINATOR.test(d) ? h = "~" === d || "+" === d : (m = (c = d.match(t.CLONE)) ? ~~c[1] : 1, o = a, a = s(d, m), o && (h ? (a.appendChild(o), h = !1) : l(a, o)));
                    return g.appendChild(a), r[i] = g.cloneNode(!0), g.childNodes
                }

                return d.cache = r, d
            }(), e.exports = t, void 0 !== window.jQuery && jQuery.fn && (jQuery.satisfy = function (e) {
                return jQuery(t(e))
            })
        }, 353: (e, t, n) => {
            (function () {
                var t, n = this, r = this.document, i = this.zest, a = r.compareDocumentPosition ? function (e, t) {
                    return e.compareDocumentPosition(t)
                } : function (e, t) {
                    for (var n = e.ownerDocument.getElementsByTagName("*"), r = n.length; r--;) {
                        if (n[r] === e) return 2;
                        if (n[r] === t) return 4
                    }
                    return 1
                }, o = function (e, t) {
                    return 2 & a(e, t) ? 1 : -1
                }, s = function (e) {
                    for (; (e = e.nextSibling) && 1 !== e.nodeType;) ;
                    return e
                }, l = function (e) {
                    for (; (e = e.previousSibling) && 1 !== e.nodeType;) ;
                    return e
                }, d = function (e) {
                    if (e = e.firstChild) for (; 1 !== e.nodeType && (e = e.nextSibling);) ;
                    return e
                }, c = function (e) {
                    if (e = e.lastChild) for (; 1 !== e.nodeType && (e = e.previousSibling);) ;
                    return e
                }, p = function (e) {
                    if (!e) return e;
                    var t = e[0];
                    return '"' === t || "'" === t ? e.slice(1, -1) : e
                }, u = Array.prototype.indexOf ? Array.prototype.indexOf : function (e, t) {
                    for (var n = this.length; n--;) if (this[n] === t) return n;
                    return -1
                }, g = function (e, t) {
                    var n = y.inside.source.replace(/</g, e).replace(/>/g, t);
                    return new RegExp(n)
                }, m = function (e, t, n) {
                    return e = (e = e.source).replace(t, n.source || n), new RegExp(e)
                }, f = function (e, t) {
                    return e.replace(/^(?:\w+:\/\/|\/+)/, "").replace(/(?:\/+|\/*#.*?)$/, "").split("/", t).join("/")
                }, h = function (e, t, n) {
                    var r = (e = function (e, t) {
                        var n;
                        return "even" === (e = e.replace(/\s+/g, "")) ? e = "2n+0" : "odd" === e ? e = "2n+1" : ~e.indexOf("n") || (e = "0n" + e), {
                            group: "-" === (n = /^([+-])?(\d+)?n([+-])?(\d+)?$/.exec(e))[1] ? -(n[2] || 1) : +(n[2] || 1),
                            offset: n[4] ? "-" === n[3] ? -n[4] : +n[4] : 0
                        }
                    }(e)).group, i = e.offset, a = n ? c : d, o = n ? l : s;
                    return function (e) {
                        if (1 === e.parentNode.nodeType) for (var n = a(e.parentNode), s = 0; n;) {
                            if (t(n, e) && s++, n === e) return s -= i, r && s ? !(s % r) && s < 0 == r < 0 : !s;
                            n = o(n)
                        }
                    }
                }, _ = {
                    "*": ((t = r.createElement("div")).appendChild(r.createComment("")), t.getElementsByTagName("*")[0] ? function (e) {
                        if (1 === e.nodeType) return !0
                    } : function () {
                        return !0
                    }), type: function (e) {
                        return e = e.toLowerCase(), function (t) {
                            return t.nodeName.toLowerCase() === e
                        }
                    }, attr: function (e, t, n, r) {
                        return t = v[t], function (i) {
                            var a;
                            switch (e) {
                                case"for":
                                    a = i.htmlFor;
                                    break;
                                case"class":
                                    "" === (a = i.className) && null == i.getAttribute("class") && (a = null);
                                    break;
                                case"href":
                                    a = i.getAttribute("href", 2);
                                    break;
                                case"title":
                                    a = i.getAttribute("title") || null;
                                    break;
                                case"id":
                                    if (i.getAttribute) {
                                        a = i.getAttribute("id");
                                        break
                                    }
                                default:
                                    a = null != i[e] ? i[e] : i.getAttribute && i.getAttribute(e)
                            }
                            if (null != a) return a += "", r && (a = a.toLowerCase(), n = n.toLowerCase()), t(a, n)
                        }
                    }, ":first-child": function (e) {
                        return !l(e) && 1 === e.parentNode.nodeType
                    }, ":last-child": function (e) {
                        return !s(e) && 1 === e.parentNode.nodeType
                    }, ":only-child": function (e) {
                        return !l(e) && !s(e) && 1 === e.parentNode.nodeType
                    }, ":nth-child": function (e, t) {
                        return h(e, (function () {
                            return !0
                        }), t)
                    }, ":nth-last-child": function (e) {
                        return _[":nth-child"](e, !0)
                    }, ":root": function (e) {
                        return e.ownerDocument.documentElement === e
                    }, ":empty": function (e) {
                        return !e.firstChild
                    }, ":not": function (e) {
                        var t = k(e);
                        return function (e) {
                            return !t(e)
                        }
                    }, ":first-of-type": function (e) {
                        if (1 === e.parentNode.nodeType) {
                            for (var t = e.nodeName; e = l(e);) if (e.nodeName === t) return;
                            return !0
                        }
                    }, ":last-of-type": function (e) {
                        if (1 === e.parentNode.nodeType) {
                            for (var t = e.nodeName; e = s(e);) if (e.nodeName === t) return;
                            return !0
                        }
                    }, ":only-of-type": function (e) {
                        return _[":first-of-type"](e) && _[":last-of-type"](e)
                    }, ":nth-of-type": function (e, t) {
                        return h(e, (function (e, t) {
                            return e.nodeName === t.nodeName
                        }), t)
                    }, ":nth-last-of-type": function (e) {
                        return _[":nth-of-type"](e, !0)
                    }, ":checked": function (e) {
                        return !(!e.checked && !e.selected)
                    }, ":indeterminate": function (e) {
                        return !_[":checked"](e)
                    }, ":enabled": function (e) {
                        return !e.disabled && "hidden" !== e.type
                    }, ":disabled": function (e) {
                        return !!e.disabled
                    }, ":target": function (e) {
                        return e.id === n.location.hash.substring(1)
                    }, ":focus": function (e) {
                        return e === e.ownerDocument.activeElement
                    }, ":matches": function (e) {
                        return k(e)
                    }, ":nth-match": function (e, t) {
                        var n = e.split(/\s*,\s*/), r = n.shift(), i = k(n.join(","));
                        return h(r, i, t)
                    }, ":nth-last-match": function (e) {
                        return _[":nth-match"](e, !0)
                    }, ":links-here": function (e) {
                        return e + "" == n.location + ""
                    }, ":lang": function (e) {
                        return function (t) {
                            for (; t;) {
                                if (t.lang) return 0 === t.lang.indexOf(e);
                                t = t.parentNode
                            }
                        }
                    }, ":dir": function (e) {
                        return function (t) {
                            for (; t;) {
                                if (t.dir) return t.dir === e;
                                t = t.parentNode
                            }
                        }
                    }, ":scope": function (e, t) {
                        var n = t || e.ownerDocument;
                        return 9 === n.nodeType ? e === n.documentElement : e === n
                    }, ":any-link": function (e) {
                        return "string" == typeof e.href
                    }, ":local-link": function (e) {
                        if (e.nodeName) return e.href && e.host === n.location.host;
                        var t = +e + 1;
                        return function (e) {
                            if (e.href) {
                                var r = n.location + "", i = e + "";
                                return f(r, t) === f(i, t)
                            }
                        }
                    }, ":default": function (e) {
                        return !!e.defaultSelected
                    }, ":valid": function (e) {
                        return e.willValidate || e.validity && e.validity.valid
                    }, ":invalid": function (e) {
                        return !_[":valid"](e)
                    }, ":in-range": function (e) {
                        return e.value > e.min && e.value <= e.max
                    }, ":out-of-range": function (e) {
                        return !_[":in-range"](e)
                    }, ":required": function (e) {
                        return !!e.required
                    }, ":optional": function (e) {
                        return !e.required
                    }, ":read-only": function (e) {
                        if (e.readOnly) return !0;
                        var t = e.getAttribute("contenteditable"), n = e.contentEditable, r = e.nodeName.toLowerCase();
                        return ((r = "input" !== r && "textarea" !== r) || e.disabled) && null == t && "true" !== n
                    }, ":read-write": function (e) {
                        return !_[":read-only"](e)
                    }, ":hover": function () {
                        throw new Error(":hover is not supported.")
                    }, ":active": function () {
                        throw new Error(":active is not supported.")
                    }, ":link": function () {
                        throw new Error(":link is not supported.")
                    }, ":visited": function () {
                        throw new Error(":visited is not supported.")
                    }, ":column": function () {
                        throw new Error(":column is not supported.")
                    }, ":nth-column": function () {
                        throw new Error(":nth-column is not supported.")
                    }, ":nth-last-column": function () {
                        throw new Error(":nth-last-column is not supported.")
                    }, ":current": function () {
                        throw new Error(":current is not supported.")
                    }, ":past": function () {
                        throw new Error(":past is not supported.")
                    }, ":future": function () {
                        throw new Error(":future is not supported.")
                    }, ":contains": function (e) {
                        return function (t) {
                            return !!~(t.innerText || t.textContent || t.value || "").indexOf(e)
                        }
                    }, ":has": function (e) {
                        return function (t) {
                            return R(e, t).length > 0
                        }
                    }
                }, v = {
                    "-": function () {
                        return !0
                    }, "=": function (e, t) {
                        return e === t
                    }, "*=": function (e, t) {
                        return -1 !== e.indexOf(t)
                    }, "~=": function (e, t) {
                        var n, r, i = e.indexOf(t);
                        if (-1 !== i) return n = e[i - 1], r = e[i + t.length], !(n && " " !== n || r && " " !== r)
                    }, "|=": function (e, t) {
                        var n, r = e.indexOf(t);
                        if (0 === r) return "-" === (n = e[r + t.length]) || !n
                    }, "^=": function (e, t) {
                        return 0 === e.indexOf(t)
                    }, "$=": function (e, t) {
                        return e.indexOf(t) + t.length === e.length
                    }, "!=": function (e, t) {
                        return e !== t
                    }
                }, b = {
                    " ": function (e) {
                        return function (t) {
                            for (; t = t.parentNode;) if (e(t)) return t
                        }
                    }, ">": function (e) {
                        return function (t) {
                            return e(t = t.parentNode) && t
                        }
                    }, "+": function (e) {
                        return function (t) {
                            return e(t = l(t)) && t
                        }
                    }, "~": function (e) {
                        return function (t) {
                            for (; t = l(t);) if (e(t)) return t
                        }
                    }, noop: function (e) {
                        return function (t) {
                            return e(t) && t
                        }
                    }, ref: function (e, t) {
                        var n;

                        function r(e) {
                            for (var t = e.ownerDocument.getElementsByTagName("*"), i = t.length; i--;) if (n = t[i], r.test(e)) return n = null, !0;
                            n = null
                        }

                        return r.combinator = function (r) {
                            if (n && n.getAttribute) {
                                var i = n.getAttribute(t) || "";
                                return "#" === i[0] && (i = i.substring(1)), i === r.id && e(n) ? n : void 0
                            }
                        }, r
                    }
                }, y = {
                    qname: /^ *([\w\-]+|\*)/,
                    simple: /^(?:([.#][\w\-]+)|pseudo|attr)/,
                    ref: /^ *\/([\w\-]+)\/ */,
                    combinator: /^(?: +([^ \w*]) +|( )+|([^ \w*]))(?! *$)/,
                    attr: /^\[([\w\-]+)(?:([^\w]?=)(inside))?\]/,
                    pseudo: /^(:[\w\-]+)(?:\((inside)\))?/,
                    inside: /(?:"(?:\\"|[^"])*"|'(?:\\'|[^'])*'|<[^"'>]*>|\\["'>]|[^"'>])*/
                };
                y.inside = m(y.inside, "[^\"'>]*", y.inside), y.attr = m(y.attr, "inside", g("\\[", "\\]")), y.pseudo = m(y.pseudo, "inside", g("\\(", "\\)")), y.simple = m(y.simple, "pseudo", y.pseudo), y.simple = m(y.simple, "attr", y.attr);
                var A, E = function (e) {
                    e = e.replace(/^\s+|\s+$/g, "");
                    for (var t, n, r, i, a, o, s = [], l = []; e;) {
                        if (i = y.qname.exec(e)) e = e.substring(i[0].length), r = i[1], l.push(T(r, !0)); else {
                            if (!(i = y.simple.exec(e))) throw new Error("Invalid selector.");
                            e = e.substring(i[0].length), r = "*", l.push(T(r, !0)), l.push(T(i))
                        }
                        for (; i = y.simple.exec(e);) e = e.substring(i[0].length), l.push(T(i));
                        if ("!" === e[0] && (e = e.substring(1), (n = x()).qname = r, l.push(n.simple)), i = y.ref.exec(e)) e = e.substring(i[0].length), o = b.ref(w(l), i[1]), s.push(o.combinator), l = []; else {
                            if (i = y.combinator.exec(e)) {
                                if (e = e.substring(i[0].length), "," === (a = i[1] || i[2] || i[3])) {
                                    s.push(b.noop(w(l)));
                                    break
                                }
                            } else a = "noop";
                            s.push(b[a](w(l))), l = []
                        }
                    }
                    return (t = S(s)).qname = r, t.sel = e, n && (n.lname = t.qname, n.test = t, n.qname = n.qname, n.sel = t.sel, t = n), o && (o.test = t, o.qname = t.qname, o.sel = t.sel, t = o), t
                }, T = function (e, t) {
                    if (t) return "*" === e ? _["*"] : _.type(e);
                    if (e[1]) return "." === e[1][0] ? _.attr("class", "~=", e[1].substring(1)) : _.attr("id", "=", e[1].substring(1));
                    if (e[2]) return e[3] ? _[e[2]](p(e[3])) : _[e[2]];
                    var n;
                    if (e[4]) return e[6] && (n = e[6].length, e[6] = e[6].replace(/ +i$/, ""), n = n > e[6].length), _.attr(e[4], e[5] || "-", p(e[6]), n);
                    throw new Error("Unknown Selector.")
                }, w = function (e) {
                    var t, n = e.length;
                    return n < 2 ? e[0] : function (r) {
                        if (r) {
                            for (t = 0; t < n; t++) if (!e[t](r)) return;
                            return !0
                        }
                    }
                }, S = function (e) {
                    return e.length < 2 ? function (t) {
                        return !!e[0](t)
                    } : function (t) {
                        for (var n = e.length; n--;) if (!(t = e[n](t))) return;
                        return !0
                    }
                }, x = function () {
                    var e;

                    function t(n) {
                        for (var r = n.ownerDocument.getElementsByTagName(t.lname), i = r.length; i--;) if (t.test(r[i]) && e === n) return e = null, !0;
                        e = null
                    }

                    return t.simple = function (t) {
                        return e = t, !0
                    }, t
                }, k = function (e) {
                    for (var t = E(e), n = [t]; t.sel;) t = E(t.sel), n.push(t);
                    return n.length < 2 ? t : function (e) {
                        for (var t = n.length, r = 0; r < t; r++) if (n[r](e)) return !0
                    }
                }, C = function (e, t) {
                    for (var n, r = [], i = E(e), a = t.getElementsByTagName(i.qname), s = 0; n = a[s++];) i(n) && r.push(n);
                    if (i.sel) {
                        for (; i.sel;) for (i = E(i.sel), a = t.getElementsByTagName(i.qname), s = 0; n = a[s++];) i(n) && !~u.call(r, n) && r.push(n);
                        r.sort(o)
                    }
                    return r
                }, L = (A = function () {
                    try {
                        return Array.prototype.slice.call(r.getElementsByTagName("zest")), Array.prototype.slice
                    } catch (e) {
                        return e = null, function () {
                            for (var e = [], t = 0, n = this.length; t < n; t++) e.push(this[t]);
                            return e
                        }
                    }
                }(), r.querySelectorAll ? function (e, t) {
                    try {
                        return A.call(t.querySelectorAll(e))
                    } catch (n) {
                        return C(e, t)
                    }
                } : function (e, t) {
                    try {
                        if ("#" === e[0] && /^#[\w\-]+$/.test(e)) return [t.getElementById(e.substring(1))];
                        if ("." === e[0] && /^\.[\w\-]+$/.test(e)) return e = t.getElementsByClassName(e.substring(1)), A.call(e);
                        if (/^[\w\-]+$/.test(e)) return A.call(t.getElementsByTagName(e))
                    } catch (n) {
                    }
                    return C(e, t)
                }), R = function (e, t) {
                    try {
                        e = L(e, t || r)
                    } catch (i) {
                        n.ZEST_DEBUG && console.log(i.stack || i + ""), e = []
                    }
                    return e
                };
                R.selectors = _, R.operators = v, R.combinators = b, R.compile = k, R.matches = function (e, t) {
                    return !!k(t)(e)
                }, R.cache = function () {
                    if (!E.raw) {
                        var e = E, t = {};
                        (E = function (n) {
                            return t[n] || (t[n] = e(n))
                        }).raw = e, R._cache = t
                    }
                }, R.noCache = function () {
                    E.raw && (E = E.raw, delete R._cache)
                }, R.noConflict = function () {
                    return n.zest = i, R
                }, R.noNative = function () {
                    L = C
                }, e.exports = R, n.ZEST_DEBUG ? R.noNative() : R.cache()
            }).call(function () {
                return this || ("undefined" != typeof window ? window : n.g)
            }())
        }, 612: (e, t, n) => {
            var r = n(379), i = n(132);
            "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.id, i, ""]]);
            var a = {insert: "head", singleton: !1};
            r(i, a);
            e.exports = i.locals || {}
        }, 779: (e, t, n) => {
            var r = n(379), i = n(26);
            "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.id, i, ""]]);
            var a = {insert: "head", singleton: !1};
            r(i, a);
            e.exports = i.locals || {}
        }, 379: (e, t, n) => {
            "use strict";
            var r, i = function () {
                return void 0 === r && (r = Boolean(window && document && document.all && !window.atob)), r
            }, a = function () {
                var e = {};
                return function (t) {
                    if (void 0 === e[t]) {
                        var n = document.querySelector(t);
                        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                            n = n.contentDocument.head
                        } catch (r) {
                            n = null
                        }
                        e[t] = n
                    }
                    return e[t]
                }
            }(), o = [];

            function s(e) {
                for (var t = -1, n = 0; n < o.length; n++) if (o[n].identifier === e) {
                    t = n;
                    break
                }
                return t
            }

            function l(e, t) {
                for (var n = {}, r = [], i = 0; i < e.length; i++) {
                    var a = e[i], l = t.base ? a[0] + t.base : a[0], d = n[l] || 0, c = "".concat(l, " ").concat(d);
                    n[l] = d + 1;
                    var p = s(c), u = {css: a[1], media: a[2], sourceMap: a[3]};
                    -1 !== p ? (o[p].references++, o[p].updater(u)) : o.push({
                        identifier: c,
                        updater: h(u, t),
                        references: 1
                    }), r.push(c)
                }
                return r
            }

            function d(e) {
                var t = document.createElement("style"), r = e.attributes || {};
                if (void 0 === r.nonce) {
                    var i = n.nc;
                    i && (r.nonce = i)
                }
                if (Object.keys(r).forEach((function (e) {
                    t.setAttribute(e, r[e])
                })), "function" == typeof e.insert) e.insert(t); else {
                    var o = a(e.insert || "head");
                    if (!o) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                    o.appendChild(t)
                }
                return t
            }

            var c, p = (c = [], function (e, t) {
                return c[e] = t, c.filter(Boolean).join("\n")
            });

            function u(e, t, n, r) {
                var i = n ? "" : r.media ? "@media ".concat(r.media, " {").concat(r.css, "}") : r.css;
                if (e.styleSheet) e.styleSheet.cssText = p(t, i); else {
                    var a = document.createTextNode(i), o = e.childNodes;
                    o[t] && e.removeChild(o[t]), o.length ? e.insertBefore(a, o[t]) : e.appendChild(a)
                }
            }

            function g(e, t, n) {
                var r = n.css, i = n.media, a = n.sourceMap;
                if (i ? e.setAttribute("media", i) : e.removeAttribute("media"), a && "undefined" != typeof btoa && (r += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a)))), " */")), e.styleSheet) e.styleSheet.cssText = r; else {
                    for (; e.firstChild;) e.removeChild(e.firstChild);
                    e.appendChild(document.createTextNode(r))
                }
            }

            var m = null, f = 0;

            function h(e, t) {
                var n, r, i;
                if (t.singleton) {
                    var a = f++;
                    n = m || (m = d(t)), r = u.bind(null, n, a, !1), i = u.bind(null, n, a, !0)
                } else n = d(t), r = g.bind(null, n, t), i = function () {
                    !function (e) {
                        if (null === e.parentNode) return !1;
                        e.parentNode.removeChild(e)
                    }(n)
                };
                return r(e), function (t) {
                    if (t) {
                        if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;
                        r(e = t)
                    } else i()
                }
            }

            e.exports = function (e, t) {
                (t = t || {}).singleton || "boolean" == typeof t.singleton || (t.singleton = i());
                var n = l(e = e || [], t);
                return function (e) {
                    if (e = e || [], "[object Array]" === Object.prototype.toString.call(e)) {
                        for (var r = 0; r < n.length; r++) {
                            var i = s(n[r]);
                            o[i].references--
                        }
                        for (var a = l(e, t), d = 0; d < n.length; d++) {
                            var c = s(n[d]);
                            0 === o[c].references && (o[c].updater(), o.splice(c, 1))
                        }
                        n = a
                    }
                }
            }
        }, 418: (e, t, n) => {
            "use strict";
            n.d(t, {Z: () => r});
            const r = "data:font/ttf;base64,AAEAAAALAIAAAwAwR1NVQiCLJXoAAAE4AAAAVE9TLzI0SUFrAAABjAAAAFZjbWFw6+D/TgAAAkQAAAKkZ2x5ZsctfVwAAAUcAAAI9GhlYWRfuz3FAAAA4AAAADZoaGVhAQIAuAAAALwAAAAkaG10eArL//0AAAHkAAAAYGxvY2EaJBg8AAAE6AAAADJtYXhwASgAaQAAARgAAAAgbmFtZcTQ/zIAAA4QAAACInBvc3T9f5p5AAAQNAAAASkAAQAAAGQAAAAAAKD/////AJ0AAQAAAAAAAAAAAAAAAAAAABgAAQAAAAEAALwyNcpfDzz1AAsAZAAAAAAAAAAAAAAAAAAAAAD/////AJ0AZQAAAAgAAgAAAAAAAAABAAAAGABdAAYAAAAAAAIAAAAKAAoAAAD/AAAAAAAAAAEAAAAKADAAPgACREZMVAAObGF0bgAaAAQAAAAAAAAAAQAAAAQAAAAAAAAAAQAAAAFsaWdhAAgAAAABAAAAAQAEAAQAAAABAAgAAQAGAAAAAQAAAAEAcwGQAAUAAABlAEYAAAAOAGUARgAAADAABAAZAAACAAUDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBmRWQAQOoB6hcAZAAAAAkAZQABAAAAAQAAAAAAAAAAAAAAZAAAAHH//wBkAAAAjwAAAI8AAABkAAAAXAAAAGQAAABkAAAAZAAAAHf//wBVAAAAZAAAAJ0AAACdAAAAhgAAAIYAAACGAAAAoAAAAKAAAACCAAAAZAAAAGT//wAAAAUAAAADAAAALAAAAAQAAAGAAAEAAAAAAHoAAwABAAAALAADAAoAAAGAAAQATgAAAAQABAABAADqF///AADqAf//AAAAAQAEAAAAAQACAAMABAAFAAYABwAIAAkACgALAAwADQAOAA8AEAARABIAEwAUABUAFgAXAAABBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAEkAAAAAAAAABcAAOoBAADqAQAAAAEAAOoCAADqAgAAAAIAAOoDAADqAwAAAAMAAOoEAADqBAAAAAQAAOoFAADqBQAAAAUAAOoGAADqBgAAAAYAAOoHAADqBwAAAAcAAOoIAADqCAAAAAgAAOoJAADqCQAAAAkAAOoKAADqCgAAAAoAAOoLAADqCwAAAAsAAOoMAADqDAAAAAwAAOoNAADqDQAAAA0AAOoOAADqDgAAAA4AAOoPAADqDwAAAA8AAOoQAADqEAAAABAAAOoRAADqEQAAABEAAOoSAADqEgAAABIAAOoTAADqEwAAABMAAOoUAADqFAAAABQAAOoVAADqFQAAABUAAOoWAADqFgAAABYAAOoXAADqFwAAABcAAAAAAFAAegCUALgA3AEoAToBTAFYAcwB/gIwAnACgAKSAtQC+gMeA2QD5gP6BEIEegAAAAMAAP//AFsAZAAPAB8AOwAANyMiBh0BFBY7ATI2PQE0JgcUBisBIiY9ATQ2OwEyFhU3IyIGFBYyNjQ2OwEyFh0BFAYiBhQWMjY9ATQmQC4DBQUDLgQEBAECAS4BAgIBLgECDy4EBAEDAQIBLgECAgICAgQFBVMFA0MDBQUDQwMFSwEBAQFDAQEBARkFBAICAgEBAUMBAQICAgUDQwMFAAAD/////wBxAGUAEQAVABkAADcnLgEiBg8BBhQeATsBMj4BNCcjNTM1IzUzbzEBAwQDATEBAgMCYgIDAjEODg4OC1UCAgICVQIEAwICAwQFDwccAAABAAD//wBPAGQADQAANycmIgYdARQWMj8BNjRMKwIFBAQFAisCNiwCBAJYAgQCLAEGAAAABAAAAAAAjwBkAAUACwARABcAADczFSM1MyczFTMVIzcVMxUzNSMzFSMVI3wTJRJ8ExIlahITjyUSEyYmExMTE2QTEiUTEgAABAAAAAAAjwBkAAUACwARABcAADMjNTMVIwcjNSM1Mzc1IzUjFSsBNTM1M3wSJRNXEhMlahMSRSUTEiYTExMTGRITJRITAAAAAwAAAAAAZABkAAwAJQAuAAA3Ig4BFB4BMj4BNC4BBwYmNj8BNiYPASc2NzYeAQ8BFBY/ARcHBjcGIiY+ATIWBjIOFw0NFxwWDg0XDwYHAgYCAQICBAIGBgMHAwIHAQIFAQUFDAIHBAEFBgQBZA0XHBYODhYcFw1PAgQKDwUCAQEDAgYBAQIGBRECAgEEAgYDLwIEBgQEBgACAAAAAABcAGQAAgAGAAA3BzUXIxUzS0tcEREyMmQEXAAAAAACAAAAAABbAGQAAwAHAAA3FSM1MxUjNSIZUhlkZGRkZAAAAAABAAAAAABfAGQAAgAANwc1XlgyMmQAAAACAAD//wBkAGQACABMAAA3IiY0NjIWFAY3NScuAjY/AScHDgEnMS4BLwEjBw4CJi8BBxceAQ4BDwEVFx4CBg8BFzc+ARcxHgEfATM3PgIWHwE3Jy4BPgE3MgcKCg4KCisDBQQDAgIBCQMFBQMDAwEBDgEBAwYFBQMJAQICAwQFAwMFBAMCAgEJAwUFAwMDAQEOAQEDBgUFAwkBAgIDBAUhCg4KCg4KCg4BAQMGBQUDCQECAgIBBAUDAwUEAwICAQkDBQUGAwEBDgEBAwYFBQMJAQICAgEEBQMDBQQDAgIBCQMFBQYDAQAAAf//AAAAdwBlAB8AADczByczJicmIg4BFB4BMzI/ARcHBiMiLgE0PgEzMh4BZxAcGhADBgcWEAkJEAoHBwMKBQoMDhkODhkOChQPPx4eCAUHCQ8SDwkCAg4CBQ0XHBcNCxEAAAEAAAAAAFUAZAAfAAA3IgcnNyc3FjI2NCYiBh0BByYiBhQWMjcXFRQWMjY0JkUFBB4BAR4EDAkJDQkeBAsJCQsEHgkNCQkfBBQDAxQECQ0JCQYDFAMJDQkEFAMGCQkNCQAAAAACAAAAAABkAGQAHAApAAA3NjIWFAYiJjUnBiImNDYyFzc1NDYyFhQGIicHFTciDgEUHgEyPgE0LgE5AwkGBgkGFAMIBgYJAxMGCQYGCQIUDA4XDQ0XHBcNDRcnAwYJBgYFCgIGCAcECgIEBgYJBgMKAzQNFxwXDQ0XHBcNAAAAAAIAAAAAAJ0AZAADAAcAADE1MxUnIxUznBJ3d2RkUT4AAgAAAAAAigBSAAMABwAANzUzFScjFTMTdw1eXhM+PjImAAAAAwAA//8AhQBkABUAGwAtAAA3OwEfAxUPAjU/BC8DNQczNxUnIzcxHwQPAzU/Ai8BNVEBBBMOCAUFFBwGEA4EAggJCw1QHCEhHE8ICQUDAQEECQ0DCwIFC2QGCwsPDhAVBwsBBQwJEhIIBgILHBZYFiwBBQQGBgUJBgMLAQUGCAMLAAAAAgAAAAAAagBfAAUAFwAANTM3FScjNzEfBA8DNT8CLwE1HCEhHE8ICQUDAQEECQ0DCwIFC0gWWBYsAQUEBgYFCQYDCwEFBggDCwAAAAQAAAAAAHUAXwAFAAkADQASAAA1MzcVJyM3Byc3MxcHJzcHJzcXHCEhHHMJIAkYCiMKLSMKIwpIFlgWCQkiCgkjChkjCiIKAAMAAAAAAJIAXgAdACYALwAANyMiBh0BFBY7ATI2PwE+ATIWHwEeATsBMjY9ATQmByImNDYyFhQGMyImNDYyFhQGinUDBQUDIAMEAQkBBQcFAQkBBAMgAwUFWwcICA0ICDYGCQkMCAhdBQNGAwUDAhcDBAQDFwIDBQNGAwU6CQwJCQwJCQwJCQwJAAAABgAAAAAAlwBhABsAOABBAEoAUwBcAAA3IyIGHQEUFjsBMjY/ATYyHwEeATsBMjY9AS4BFxQGKwEiLwEuASIGDwEUBisBIiY9ATQ2OwEyFhUHIgYUFjI2NCYHIiY0NjIWFAY3IgYUFjI2NCYHIiY0NjIWFAaJdAQHBwQgBAYBCQMIAwkBBgQgBQcBCAEDAyADAQkBCAgHAQkDAiACAgICdAIEXgcLCw8KCggEBwcJBwc4CAoLDwoLBwUGBgoGBmEHBUYFBwQEFwUFFwQEBwVGBQdSAgMDGAQEBAQYAQIDAkYCAwMCEAsQCwsQCx8HCgcHCgcfCxALCw8MHwcKBwcKBwAAAAACAAAAAACCAGQABQAIAAA3FRcHFTcjBzU5KChIOUhkFhwcFjIyZAAAAgAAAAAAZQBkACsALwAANzQmJz4BNCYnMSYHNzY3Nj0BNCcmBg8BFAYPARUfARY3PgE0JzE+ATQnPgEnMxUjZAIDAwIEAwkSAQMCAgoCAgECDwgJDh0MBwIDAQMEAgICZBMTJQIEAQIDBgUBAgIDBQQGBQIMAQEDBAcDEQgILAECAQIBBAQCAQQGAwEEFTYAA///AAAAZABVAAoAGAAjAAA3IgYHHgEyNjcuAQciLgE0PgEyHgEUDgInIgYUFjI2NTE0JjIRGwYGGyIbBgYbEQYLBgYLDAsGBAYIBQYICAwICFQSEA8TEw8QEjgGCgwLBgYLCgkGAyQICwkJBQYIAAAAEADGAAEAAAAAAAEACQAAAAEAAAAAAAIABwAJAAEAAAAAAAMACQAQAAEAAAAAAAQACQAZAAEAAAAAAAUACwAiAAEAAAAAAAYACQAtAAEAAAAAAAoAKwA2AAEAAAAAAAsAEwBhAAMAAQQJAAEAEgB0AAMAAQQJAAIADgCGAAMAAQQJAAMAEgCUAAMAAQQJAAQAEgCmAAMAAQQJAAUAFgC4AAMAAQQJAAYAEgDOAAMAAQQJAAoAVgDgAAMAAQQJAAsAJgE2aWNvbi1mb250UmVndWxhcmljb24tZm9udGljb24tZm9udFZlcnNpb24gMS4waWNvbi1mb250R2VuZXJhdGVkIGJ5IHN2ZzJ0dGYgZnJvbSBGb250ZWxsbyBwcm9qZWN0Lmh0dHA6Ly9mb250ZWxsby5jb20AaQBjAG8AbgAtAGYAbwBuAHQAUgBlAGcAdQBsAGEAcgBpAGMAbwBuAC0AZgBvAG4AdABpAGMAbwBuAC0AZgBvAG4AdABWAGUAcgBzAGkAbwBuACAAMQAuADAAaQBjAG8AbgAtAGYAbwBuAHQARwBlAG4AZQByAGEAdABlAGQAIABiAHkAIABzAHYAZwAyAHQAdABmACAAZgByAG8AbQAgAEYAbwBuAHQAZQBsAGwAbwAgAHAAcgBvAGoAZQBjAHQALgBoAHQAdABwADoALwAvAGYAbwBuAHQAZQBsAGwAbwAuAGMAbwBtAAAAAgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4BDwEQAREBEgETARQBFQEWARcBGAEZAARjb3B5BWVycm9yDGZhc3QtZm9yd2FyZApmdWxsc2NyZWVuD2Z1bGxzY3JlZW4tZXhpdARpbmZvBG5leHQFcGF1c2UEcGxheQdxdWFsaXR5BnJlcGxheQVzaGFyZQtzaGFyZS1yb3VuZApzaXplLWxhcmdlC3NpemUtbWVkaXVtC3ZvbHVtZS1mdWxsCnZvbHVtZS1sb3cLdm9sdW1lLW11dGUCdnIIdnItY2xlYXILYWN0aW9uLXRhZ3MNZ3JpZC10aHVtYi11cApncmlkLXZpZXdzAAAAAAA="
        }, 21: (e, t, n) => {
            "use strict";
            n.d(t, {Z: () => r});
            const r = "data:font/woff;base64,d09GRgABAAAAAApYAAsAAAAAEWAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAPgAAAFY0SUFrY21hcAAAAYQAAACvAAACpOvg/05nbHlmAAACNAAABVYAAAj0xy19XGhlYWQAAAeMAAAAKwAAADZfuz3FaGhlYQAAB7gAAAAcAAAAJAECALhobXR4AAAH1AAAAC4AAABgCsv//WxvY2EAAAgEAAAAMgAAADIaJBg8bWF4cAAACDgAAAAfAAAAIAEoAGluYW1lAAAIWAAAAS0AAAIixND/MnBvc3QAAAmIAAAAzwAAASn9f5p5eJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGQoZpzAwMrAwJDK4AYk+aC0AQMLgyQDAxMDKzMDVhCQ5prC4PCK8ZU4QwqQywnUxwikQZgBACiiByUAAHic7dFbDsIgFEXRjaX1Va2tDybgp2NxQH45Xiah93AchiSLnRLaNAD0QBceIUN6k9B4xWpq6x27tp55tj1Z67V8PjEnzfGc27yKvTm+OLBmwzbe2zNy4MjEiZmFMxeu3CixfeA/Rk3p/nsqOlFrZ7wy1M50VzWbTr32pnusg6GuDXVjqFtD3Znut+4NdTT9XT0Y6tFQJ0M9GepsqIuhng31YqhXQ70ZajHKF/OTNuYAeJyFVt2P00YQ39lPfyR2YsfxpYTkiHs21R2J8mkoaq4VAiFAokBPRYJeRRVUiZeqKuheeKrUh/KC1Je+tH8r/a2d48pH1Y093tnZmZ3Z+QoTjL15wx6xDQvZkF1lrMxG+jx1uldptvqCFrnp6H0a5ZiusNRNLL3Tna1qFDt1jdu9X46FUmIspSROY+IVCIGT2C5gSKUeKHHN7gS4TRjXLOgpCWqNYVJRGRNvMNjP7Clrs4T1oF8xppEOSXcGBA3WtCiy5XyJ96cpCSloSlzwH/BOAwz/yJ55xKXgXEgVmj5jVNl8FzY3rby8Nnh2SKvFnX2upFR8n68OuOQP8R6QZoxJZsdr8CjmQ5cUnPMEpxbzBN8SAEpglmQv473oZRztPYvi13tRnOcxxgYLcfRROXNISTKTWRtKgCzZJ1g0fwmOb6N471kcXQdvJaYHPIohQVRyNvg12B4bQ5tRQLgSeyFjMjpfwZw8pGJVrgYUwr5DSo0u9Shfw296FqTNZtrvBs001IZrjjuXXGthBDfEFSnV4EaS0pI21cag20+bd7n0QgUvCa7hJq3acBn4xIRLLaVmvNLrMfTiDPdWmmWaJfPbtx+327PZRj621HqPjTnBDPYk1QUsR737vY0dlkrVnu8rOVbK8UOw17zwnbXbYXes1fliNet2dLksxhw2FyagYjqmCWUm4PmETDqgABeQpAOOsEnLNaXTAQ1pXq55d0g2ntZUzoznBZ63L5SNFHJteApBYCWhMXepih/xP/QLVoh9/rWMC3qHT7/H9hE67IeVjJ0g7oc20kwxzxGolYvns8qV2WhMizWwAf3Y6n/SEtp0W67b8owRnvIaQS/A43XCw8HAUcYNo9DlPOAK3kybfvv0jo9wl/aMkSnKorSZXSWEyau8LtOkyvb8upIDooFsuG7THUjfdX05wNQdyo4QHWmnWnQEvljQdteZr62/+uwznFI5a5QvC115Li2Xtf9GhUneCeErwtXa1R3h4CNibTHeadRha0Eh7JryuHaM9BB+QIUnFlsywNn5f5/G2hSRViAg/4pOTjabe+st/RW7v43FLT0+aR4fx+v1LK9zDd74DTISdo5dwq6rNBRJyJeHciKWZl6Cp5wOZSiWh3xCy3sk48BRqtPXrUByx/WbX/cvXOjfdVwF5+OuhM+Vv9G+HwatxPikGm4UOZr7/e7D7gEpWKNgDgjaEf5bO54hI5StGcsPzvyI/Jv/IauuQS8qWS5qYPRWHkJgngLgSa3AX9xdd8fLvEsZgBXnuiPPzbxe5o28bQ36gx2z8yxnk3d7xyHZOjOkqkrXneQ0V+enk1cvbBrtCkkuKaMAJTClHhnHaTrOClHUcJzvlLghlOCpkFKkXFTo5y4C8fSBFrrS5U/2BB66zL5it9gDVKH3NFrNzvQZU1p1tgnV/eS9Nme2Xe5M6/KDld+fS2PkrtRIWweprOWuMuSQgBGwxXEMCHzXNqDnXB4beNvzHPC4xlx2PGC+UVp7Wj8x6oYyUqZKpVJWyH0uxA46qdyx/ewGMN7yWz6eoUGKe2ZosbCxxc5i/deqtzi2rqbIqcwsr1y8ePPKzU233+9WRbTe9xT79iuvLfICKZcX09yUaBe4gyKvbgRVc0jd0vbYqQVrQrfLNlYXKdwITYB7KFo8dNzgfMNwgQYMYzdxvMfxFwAVzlZFBKDiDRQ8aUTbcQ7wVwAlT+JFpZPJyvb4qkYcMY/tsMzWIm1QB1YlOlld5VDkOgEvahcsp4t81j6n9bmRBW3ta+03fC21gxB3EDLfRK0wjsNWdFl7DUv1kACfOiha2PAPiz3OMwAAeJxjYGRgYADiPUamp+L5bb4ycDOkMKCB/0DAMJchFcjkYGACiQAA9HsJBgB4nGNgZGBgSGEAgQX/gYBhLgMjAyqQAACBeQW4eJxjYACCFCAu/P8fTPdDMYgdA6VhuByoJhTKngvFbUh4ARQ3wfT8/w8A+GgQxAAAAAAAAABQAHoAlAC4ANwBKAE6AUwBWAHMAf4CMAJwAoACkgLUAvoDHgNkA+YD+gRCBHoAAHicY2BkYGCQYIhlYGMAASYg5gJCBob/YD4DABRxAZIAeJxtj01uwjAQhV8gUBWkCrVSpe6sLrqpCD8LFhwA9izYh+AEUBJHjkHiAj1Bz9Az9ARd9gw9Sl/CKIsWWx5/8+aNfwAM8AUP1fBwW8dqtHDD7MJt0kDYJz8Jd9DHs3CX+lC4h1fMhPt4QMgTPL867R5OuIU7vAm3qb8L++QP4Q4e8Sncpf4t3MMaP8J9vHizfWTyYWxyt9LJMQ1tkzew1rbcm1xNgnGjLXWubej0Vm3OqjwlU+diFVuTqQWrOk2NKqw56MgFO+eK+WgUix5EJsMeEQxy/jqud4cVNBIckfLH9kr9v7Jmh0XJSpUrTBBgfMW3pC+vvSEzjS29G5wZS5x455Sqo1txWfZkpIX0ar4nJSsUde1AJaIeYFd3FZhjxBn/8Qf1K7Jfbg5gcgAAAHicbY3dUoMwFISzGNoaWqvWn/oQeagIB5qZkNCTBIpPr1Qdb9yLne/bmxWF+A7E/zmiwA0kSqywxga3UKiwxQ532OMeD3jEAU94xgteccSbkHUY5pKYA29bE5NuA0+GG9Vm52LNRH7/h5ouNknr2yA9XVI5mBxJDs7M63M2zqZ5xbRoGU+Gqbq25pB9o6L9IO0Md1/zgj01NvfVGFzuSS8f6oddmH7nPicqRt6MrGtHhitTJxu8TqaLu45to9Mp9+86D+pqo6UpCvEJVgZPVgA="
        }
    }, t = {};

    function n(r) {
        if (t[r]) return t[r].exports;
        var i = t[r] = {id: r, exports: {}};
        return e[r].call(i.exports, i, i.exports, n), i.exports
    }

    n.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return n.d(t, {a: t}), t
    }, n.d = (e, t) => {
        for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {enumerable: !0, get: t[r]})
    }, n.g = function () {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window) return window
        }
    }(), n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), n.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e, "__esModule", {value: !0})
    }, (() => {
        "use strict";
        const e = function (e) {
            return null === e
        };
        const t = function (t) {
            return !e(t) && "object" == typeof t
        };
        const r = function (e) {
            return t(e) && e instanceof Set
        };

        function i(e) {
            return Object.keys(r(e) ? Array.from(e) : Object(e))
        }

        const a = function (e) {
            return "function" == typeof e
        };
        const o = function (e) {
            return void 0 === e
        };
        const s = function (t) {
            return !e(t) && !o(t.length) && !a(t)
        };
        const l = function (e, n) {
            if (!t(e)) return e;
            const a = s(e), o = r(e);
            return a || o ? (a ? Array : Set).prototype.forEach.call(e, n) : i(e).forEach((t => n(e[t], t, e)))
        };
        const d = function (t) {
            return e(t) || o(t)
        };
        const c = function (e) {
            return t(e) && !i(e).length || "" === e || d(e)
        };
        const p = function (e) {
            return Array.isArray(e)
        }, u = "230303.506", g = "hlsjs", m = "desktop", f = "mgp_", h = "6.3.2", _ = {
            buildNumber: u,
            env: "prod",
            libraryName: g,
            libraryVersion: "1.3.3",
            minified: "true",
            playerName: m,
            playerVersion: h
        };
        const v = function (e, n, i) {
                if (!t(e)) return e;
                const a = s(e), o = r(e), l = !a && !o;
                let d = i, c = e;
                o ? c = Array.from(e) : l && (c = Object.entries(e));
                for (let t = 0; t < c.length; t++) if (l) {
                    const [e, r] = c[t];
                    d = n(d, r, e)
                } else d = n(d, c[t], t);
                return d
            },
            b = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== n.g ? n.g : void 0,
            y = e => Object.getPrototypeOf.call(Object, e);
        const A = function (e) {
            if (!t(e)) return !1;
            if (null === y(e)) return !0;
            let n = e;
            for (; null !== y(n);) n = y(n);
            return y(e) === n
        };
        const E = function (e) {
            return "string" == typeof e || t(e) && e instanceof String
        };

        function T(e) {
            return v(e.split("&"), ((e, t) => {
                const n = t.split("=");
                return e[n[0]] = n[1], e
            }), {})
        }

        function w(e, t) {
            return e = e || "", t && (e = e.replace(/[?&]t=\d+/, ""), e += (e.indexOf("?") < 0 ? "?" : "&") + "t=" + Math.floor(t)), e
        }

        function S(e, t) {
            if (!E(e)) return !1;
            if (!E(t) && !A(t)) return e;
            const n = e.split("?").length > 1;
            return E(t) && (t = T(t.replace(/^&|\?/, ""))), l(i(t), ((r, i) => {
                const a = d(t[r]) ? "" : `${t[r]}`;
                e += (0 !== i || n ? "&" : "?") + (a ? `${r}=${a}` : r)
            })), e
        }

        const x = (() => {
            const e = Array.prototype.map.call(document.scripts, (e => e.src)).find((e => new RegExp("desktop-player", "i").test(e))) || "", [, t, n, r] = e.match(/((http[s]?:\/\/.+\/)([^/]+\.js))/) || [];
            return {fullPath: t, path: n, file: r}
        })();

        function k(e, t = !0) {
            if (!E(e)) return e;
            const n = e.split("?")[0].split("/").pop();
            return !t || t && n.includes(".") ? n : ""
        }

        function C(e = b.location.href) {
            return E(e) && e.includes("//") ? e.split("//")[1].split("/")[0] : e
        }

        let L;
        const R = function () {
            if (o(L)) {
                const e = function (e) {
                    let t = RegExp("[#&]" + e + "=([^&]*)").exec(window.location.hash);
                    return null == t && (t = RegExp("[?&]" + e + "=([^&]*)").exec(window.location.search)), null != t && decodeURIComponent(t[1].replace(/\+/g, " "))
                }("mgp_debug");
                if (!e) return;
                L = /(?:1|true|on|yes|enabled)/.test(e), L && console.log("%c*** MGP - Debug Mode ON ***", "background: #002900; color: #76ef76")
            }
            return L
        };

        function P(e, n) {
            e = e || "log";
            const r = window.console, i = r && r[e];
            if (!n || !i) return !1;
            let a = [];
            return l(n, (e => {
                t(e) ? (a.length && (i.apply(r, a), a = []), p(e) && !o(r.table) ? r.table ? r.table(e) : r.log(e) : i.call(r, e)) : a.push(e)
            })), a.length && i.apply(r, a), !0
        }

        function I(...e) {
            return P("error", e)
        }

        function M(...e) {
            return !!R() && P("log", e)
        }

        function D(...e) {
            return !!R() && P("warn", e)
        }

        function O(e) {
            return l(i(e), (n => {
                t(e[n]) && (e[n] = O(e[n]))
            })), function (e) {
                return t(e) ? Object.freeze(e) : (D('Helpers/freeze: First argument should be of type "object".'), e)
            }(e)
        }

        const B = {
            browser: {
                bot: /bot|google|baidu|bing|msn|teoma|slurp|yandex/i,
                ie: /(?:(IEM|iem)obile|MSIE\s|WOW64|Trident.+rv:|Edge)(\d+\.*\d*)(?!.*Firefox)/,
                edge: /(?:(Edg(e|A)?)\/)(\d+\.\d+\.*\d*)/,
                chrome: /(?:CriOS\/|Chrome\/)(\d+\.\d+\.\d+\.*\d+)(?!.*OPR)/,
                safari: /(Mac|iPhone|iPad|iPod) OS.+(?:Version\/|Safari )(\d+\.\d+\.*\d*).*Safari(?!.*OPR)/i,
                firefox: /(?:[Ff]irefox|Fennec|FxiOS)(?:\/)((\d*\.*\d*\.*\d*\.*\d*))/,
                opera: /(?:OPR\/|Opera(?:\s|\/))(\d+\.\d+\.*\d*\.*\d*)/,
                uc: /(?:UCBrowser\/|UCWEB\/)(\d+\.\d+\.*\d*\.*\d*)/i,
                webkit: /(AppleWebkit)\/(\d+\.*\d*)/i
            },
            os: {
                ios: /(iPhone|iPad|iPod)+.+(OS)? (\d+[_.]?\d*)/,
                macos: /(Mac OS X?) (\d+[_.]?\d*)/i,
                tv: /(SmartTV|Smart-TV)/i,
                console: /(playstation|nintendo|xbox)/i,
                windows: /(Windows NT)\s(\d+[_.]?\d+?)?/i,
                android: /(Android)\s(\d+\.*\d*)?/i,
                linux: /linux/i
            },
            platform: {tablet: new RegExp("/(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))", "i")}
        };
        let N;
        let F;

        class U {
            constructor(e, n) {
                if ("string" == typeof n) N = n; else if (N = window.navigator.userAgent, F) return F;
                if (!t(e) || c(e)) throw new TypeError("MGP Detector: Player settings argument is empty or not an object.");
                this.embed = e.embeds.enabled || !1, this.whiteListed = "video" === e.embeds.mediaType, this.build = m, this.stream = "stream" === this.build, this.is = {live: this.stream || e.mainRoll.live}, this.browser = this.processBrowser(), this.os = this.processOS(), this.createFeatures(), this.createPlatformFunctions(), O(this), F = this
            }

            processBrowser() {
                return this.runRegex(B.browser)
            }

            processOS() {
                return this.runRegex(B.os)
            }

            runRegex(e) {
                let t, n = {name: void 0, version: 0};
                return l(e, ((e, r) => {
                    const i = p(e) ? e : [e];
                    let a, o = !1;
                    l(i, (e => {
                        if (o) return;
                        const t = N.match(e);
                        t && (o = !0, a = function (e) {
                            return null != e && e.length && parseFloat(e[e.length - 1].replace("_", ".")) || 0
                        }(t))
                    })), function (e, t, n) {
                        e.is[t] = n
                    }(this, r, o), o && !t && (t = !0, n = {name: r, version: a})
                })), n
            }

            createFeatures() {
                const e = Math.min(window.screen.width, window.screen.height) >= 600,
                    t = "ontouchstart" in window && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0),
                    n = t && this.is.macos || e && this.is.ios, r = e && this.is.android,
                    i = !!b.matchMedia && b.matchMedia("(hover:hover)").matches;
                this.features = {touchCapable: t, bigScreen: e, iPad: n, androidTablet: r, mouseCapable: i}
            }

            createPlatformFunctions() {
                this.is.tablet = !this.is.live && !this.is.tv && (B.platform.tablet.test(N) || this.features.iPad || this.features.androidTablet), this.is.mobile = !this.is.tv && !this.is.tablet && (this.is.android || this.is.ios), this.is.desktop = !this.is.tv && !this.is.tablet && !this.is.mobile, l(["tv", "tablet", "mobile", "desktop"], (e => {
                    o(this.platform) && this.is[e] && (this.platform = e)
                }))
            }

            static get(e, t) {
                return c(t) ? F || new U(e) : new U(e, t)
            }
        }

        const H = U;
        const Y = function (e, n) {
            if (!t(e)) return e;
            if (s(e)) return Array.prototype.filter.call(e, n);
            {
                const t = r(e) ? new Set : new Object;
                return l(e, ((e, i, a) => {
                    n(e, i, a) && (r(t) ? t.add(e) : t[i] = e)
                })), t
            }
        };
        const G = function (e) {
            return t(HTMLElement) ? e instanceof HTMLElement : t(e) && 1 === e.nodeType && "string" == typeof e.nodeName
        };

        function V(...e) {
            return Object.assign.apply(Object, e)
        }

        const K = V;

        function z(e) {
            return e != e
        }

        const j = function (e, n = !0) {
            return "number" == typeof e && !z(e) || t(e) && e instanceof Number || !n && parseFloat(e) == e
        };
        const Q = !1, W = {}, q = {}, X = "Helper was called with incorrect or missing arguments.", J = {};
        let $;

        function Z(e, t, n, r) {
            const i = {callback: n, fireOnce: r}, a = t => {
                W[t] || (W[t] = {[e]: []}), W[t][e] || (W[t][e] = []), R() && Q && Q.subscribe(e, t, n), W[t][e].push(i)
            };
            p(t) ? l(t, a) : a(t)
        }

        function ee(...e) {
            Z.apply(null, ["public"].concat(e))
        }

        function te(e, t, n, r) {
            const i = p(t) ? t : [t];
            l(i, (t => {
                const i = W[t] && W[t][e];
                if (o(i)) return;
                let s = i.length;
                for (; s--;) n !== i[s].callback && !1 !== n || (i.splice(s, 1), a(r) && r(t))
            }))
        }

        function ne(e) {
            if (!o(J[e])) return J[e];
            const t = ["capture", "passive", "once"], n = {};
            let r = !1;
            if (!E(e) || !t.includes(e)) return D(`MGP Events.checkOptionsSupport: Helper only accepts below values as an argument:\n, ${t.join(", ")}`), r;
            try {
                const t = `${f}checkOptions`;
                Object.defineProperty(n, e, {get: () => (r = !0, !1)}), window.addEventListener(t, null, n), window.removeEventListener(t, null, n)
            } catch (i) {
                r = !1
            }
            return J[e] = r, r
        }

        function re(e, t, n) {
            const r = "*** MGP Events.preventDefault ***\n";
            e instanceof Event || D(`*** MGP Events.preventDefault ***\nFirst argument should be an event object, but the following "${typeof e}" was passed instead:\n`, e), t && e.stopPropagation(), n && (e.cancelable ? e.preventDefault() : D(r + 'Unable to call "preventDefault" on the ' + e.type + " event because it is not cancelable. This could be due to a scrolling event already in progress.\nEvent target element is shown below:\n", e.target))
        }

        function ie(t, n = (() => {
        }), r = !1, i = !1) {
            if (!G(t) || !a(n)) return void D("MGP Events.addClick: " + X);
            const s = !(!ne("passive") || e(i)) && {passive: !i};
            let l, d, c, p;
            t.addEventListener("touchstart", (e => {
                l = e.touches[0].screenX, d = e.touches[0].screenY, c = !1
            }), s), t.addEventListener("touchmove", (e => {
                (Math.abs(l - e.touches[0].screenX) > 10 || Math.abs(d - e.touches[0].screenY) > 10) && (c = !0)
            }), s), t.addEventListener("touchend", (e => {
                p = e.target, c || (re(e, r, i), n.call(null, e))
            }), s), t.addEventListener("mouseup", (e => {
                e.which > 1 || (re(e, r, i), $ = o($) ? H.get() : $, ($.is.macos || $.is.mobile || $.is.tablet) && e.target === p || (n.call(null, e), p = void 0))
            }))
        }

        function ae(e, t = (() => {
        }), n = !1, r = !1) {
            G(e) && a(t) ? e.addEventListener("dblclick", (e => {
                re(e, n, r), t.call(null, e)
            })) : D("MGP Events.addDblClick: " + X)
        }

        function oe(e) {
            l(W, ((t, n) => te(e, n, !1)))
        }

        function se(e, t, n = {}) {
            const r = W[t] && W[t][e], i = {hasGarbage: !1};
            R() && Q && Q.fire(e, t, n) || o(r) || (l(r, ((r, a) => {
                try {
                    r.callback(n, e, t)
                } catch (o) {
                    I("FireEvent error handler:", "\nPlayer Id: " + e, "\nEvent Name: " + t, "\nCallback:" + r.callback, o)
                }
                r.fireOnce && (i[a] = !0, i.hasGarbage = !0)
            })), i.hasGarbage && (W[t][e] = Y(W[t][e], ((e, t) => !i[t]))))
        }

        function le(e, t, n = {}) {
            n.firedBy = e, se("public", t, n)
        }

        const de = {
            add(e, n) {
                E(e) && t(n) && l(n, ((t, n) => Z(e, n, t)))
            }, get(e, n) {
                if (!E(e)) throw new TypeError("MGP Events.get: " + X);
                return o(q[e]) && (q[e] = {
                    fire: (...t) => se.apply(this, [e].concat(t)),
                    firePublic: (...t) => le.apply(this, [e].concat(t)),
                    subscribe: (...t) => Z.apply(this, [e].concat(t)),
                    subscribePublic: ee,
                    unsubscribe: (...t) => te.apply(this, [e].concat(t)),
                    destroy: () => oe.call(this, e),
                    addClick: ie,
                    addDblClick: ae,
                    checkOptionsSupport: ne,
                    stopOrPrevent: re
                }, t(n) && (R() && Q && t(n.eventsDebugOptions) && Q.extend(q, e, n.eventsDebugOptions), t(n.events) && this.add(e, n.events))), q[e]
            }, destroy: oe, subscribePublic: ee
        }, ce = {
            quickSetup: "pornhub",
            locale: "en",
            autoplay: !1,
            autoplayAds: !0,
            hotspots: {enabled: !0, chartColor: "#635b58", chartHeight: "30px", data: []},
            nextVideo: {
                thumb: "",
                duration: "",
                title: "",
                isHD: !1,
                nextUrl: "",
                desktop: !1,
                mobile: !1,
                tablet: !1,
                chanel: "",
                timeout: 10
            },
            seekPreview: {enabled: !0, blur: 3, showInBufferedZone: !1},
            env: "",
            startOffset: 0,
            referrerUrl: "",
            videoPreload: "none",
            viewedRequestTimeout: 60,
            viewedRequestURL: "",
            vastParserErrorReportURL: "https://www.ezfuck.com/vast/?vast=",
            isVr: !1,
            htmlSettings: {
                skin: "default",
                skipMessage: "%SKIP_AD%",
                skipDelayMessage: "%SKIP_TIMER%",
                adsTrackUrl: "https://etahub.com/events?app_id=%APPID%&splayer=%PLAYER%&eventName=%ACTION%&ssite=%SITE%&scampaign=%CAMPAIGN%&ssiteName=%SITENAME%&platform=%PLATFORM%&adTitle=%ADTITLE%",
                listedTrackUrl: "https://etahub.com/events?app_id=10940&eventName=%ACTION%&ssiteName=%SITENAME%&ssite=%SITE%&platform=%PLATFORM%"
            },
            eventTracking: {
                enabled: !0,
                cdn: "",
                videoId: "",
                url: "https://etahub.com/events?app_id=%APPID%&ssiteName=%SITENAME%&splatform=%PLATFORM%&sfeatureName=%NAME%&sfeatureValue=%VALUE%"
            },
            playbackTracking: void 0,
            embeds: {
                enabled: !1,
                imageUrl: "",
                watchHD: !1,
                utmRedirect: {logo: !0, title: !0, relatedBtns: !0, videoArea: !0},
                redirect: {onFullscreen: !1, videoArea: !0, logoUrl: ""},
                domain: void 0,
                whitelisted: !0
            },
            hlsConfig: {
                autoStartLoad: !1,
                fragLoadingMaxRetry: 2,
                maxBufferLength: 60,
                maxMaxBufferLength: 60,
                maxBufferSize: 3e7,
                maxWaitingTime: 15
            },
            dashConfig: {
                streaming: {
                    fastSwitchEnabled: !0,
                    flushBufferAtTrackSwitch: !0,
                    stableBufferTime: 20,
                    bufferTimeAtTopQuality: 20,
                    bufferTimeAtTopQualityLongForm: 20,
                    trackSwitchMode: {audio: "alwaysReplace", video: "alwaysReplace"}
                }
            },
            shakaConfig: {
                defaultBandwidthEstimate: 15e5,
                prebufferGoal: 120,
                bandwidthDowngradeTarget: .75,
                bandwidthUpgradeTarget: .7,
                switchInterval: 2
            },
            adRolls: [],
            mainRoll: {
                actionTags: "",
                actionTagsLabel: "",
                appId: "10829",
                siteName: "",
                chapters: "",
                clickUrl: "",
                imageWidth: 0,
                live: !1,
                mediaPriority: "hls",
                mediaDefinition: [],
                overlays: [],
                overlayTextAd: {displayDuration: 45, displayText: "", linkUrl: "", showDelay: 5},
                poster: "",
                posterWEBP: "",
                cdnTimeLimit: 20,
                thumbs: {
                    urlPattern: "",
                    format: "5x5",
                    type: "normal",
                    cdnType: "regular",
                    preload: !1,
                    progressive: !1,
                    async: !1,
                    samplingFrequency: "0",
                    thumbWidth: "160",
                    thumbHeight: "90",
                    vertical: !1,
                    crop: !1
                },
                title: "",
                trackUrl: "",
                duration: 0,
                vertical: !1,
                videoUnavailableMessages: {
                    default: "This video is currently unavailable on this site.",
                    hlsNotSupported: "No valid HLS sources are available for this video.",
                    dashNotSupported: "No valid DASH sources are available for this video.",
                    onerror: "There was an error loading or playing the video.",
                    noSources: "No valid sources are available for this video.",
                    siteDisabled: "This video is currently unavailable on this site.",
                    sourceError: "Format is not supported or source is unavailable."
                },
                videoUrl: "",
                watchPageUrl: "",
                weight: 1,
                campaignWeight: 1,
                user_accept_language: "",
                svvtRemote: ""
            },
            menu: {
                url: "",
                deferredLoad: !0,
                related: !0,
                topRated: !0,
                mostViewed: !0,
                showOnPause: !1,
                showOnPost: !1,
                linkColor: null
            },
            autoPause: {desktop: !1, mobile: !0},
            theme: {themeCode: "", customColor: "", customLogo: ""},
            features: {
                autoplay: !0,
                autoplaySwitch: !1,
                benchmarking: !1,
                ccMenu: !0,
                ccVisible: !1,
                chapters: !1,
                chromecast: !0,
                chromecastSkin: !1,
                cinema: !1,
                fullscreen: !0,
                iosFullscreen: !0,
                iosAutoFullscreen: !1,
                autoFullscreen: !0,
                hotspots: !0,
                logo: !1,
                customLogo: "",
                mute: !0,
                nextVideo: !0,
                options: !0,
                share: !1,
                speed: !0,
                tooltips: !0,
                topBar: !1,
                volume: !0,
                grid: !1,
                alternativeOptionsMenu: !0,
                embedCode: "",
                themeColor: "",
                ignorePreferences: !1,
                hideControlsTimeout: 2,
                qualityAutoWrap: !0,
                minIosForAdRoll: 8,
                minAndroidForAdRoll: 4.4,
                qualityMenu: !0
            },
            closedCaptionsStyle: {size: "1.0", bg: "0.75", color: "white", bg_color: "black"},
            events: {}
        };
        const pe = function () {
            return !new RegExp(["stage", "localhost", "127.0.0.1", "ngrok.io", "mgcorp.co", "player.phncdn.com", "192.168"].join("|")).test(window.location.hostname)
        };

        function ue() {
            return o(window.performance) || o(window.performance.now) ? window.Date.now() : window.performance.now()
        }

        function ge(e) {
            const t = this.marks[e];
            return t.start && t.stop ? ((t.stop - t.start) / 1e3).toFixed(3) + "s" : "Not available"
        }

        const me = class {
            constructor(e, t = !0) {
                this.playerId = e, this.isEnabled = t, this.baseline = ue.call(this), this.marks = pe() ? {} : {script_loaded: ""}, this.printed = !1
            }

            set(e, t) {
                return !(!this.isEnabled || !e) && (this.marks[e] = {start: t || ue.call(this)}, !0)
            }

            stop(e, t) {
                return !(!this.isEnabled || !e) && (this.marks[e] || (this.marks[e] = {start: this.baseline}), this.marks[e].stop = ue.call(this), t && this.printMark(e), !0)
            }

            push(e, t) {
                return !!(this.isEnabled && "string" == typeof e && t.start && t.stop) && (this.marks[e] = t, !0)
            }

            print(e, t) {
                if (!this.isEnabled) return !1;
                const n = "background: #002900; color: #76ef76",
                    r = () => M(`%c*** MGP Benchmarking: ${this.playerId} ***`, n);
                if (e) r(), M("%c" + e + ": ", n, ge.call(this, e)); else {
                    if (this.printed && !t) return;
                    r();
                    const e = v(Object.keys(this.marks), ((e, t) => (e.push({
                        Mark: t,
                        Time: ge.call(this, t)
                    }), e)), []);
                    M(e.length ? e : "No benchmarks to display."), this.printed = !0
                }
                return !0
            }

            clear(e) {
                return !!this.isEnabled && (e ? delete this.marks[e] : this.marks = {}, !0)
            }
        };

        function fe(e, n) {
            if (t(e) && t(n)) try {
                Object.setPrototypeOf(n, Object.getPrototypeOf(e))
            } catch (r) {
                n.__proto__ = e.__proto__
            }
        }

        const he = function (e) {
            return "boolean" == typeof e
        };
        const _e = function (e) {
            return !!e && a(e[Symbol.iterator])
        };

        function ve(e) {
            const t = Object.prototype.toString.call(e).match(/^\[object\s(.*)\]$/)[1];
            return b[t] ? t : "Object"
        }

        function be(e, t = b) {
            return G(e) ? document.createElement(e.nodeName) : t[ve(e)] ? new (t[ve(e)]) : new Object
        }

        function ye(...e) {
            const n = !he(e[e.length - 1]) || e.pop(), r = t(e[0]) && c(e[0]);
            let i, a, s, p;
            return l(e, (e => {
                if (!o(e) && !t(e)) throw new TypeError("utils/mergeDeep: At least one of the supplied arguments is not an object.");
                o(i) && !o(e) && (i = ve(e));
                const c = o(e) ? i : ve(e);
                c === i ? (e => {
                    if (d(a) && (a = r ? be(e) : e), _e(e)) {
                        s = s || (a.includes || a.has).bind(a), p = p || (e.add || a.push).bind(a);
                        const r = e.values().next().value;
                        t(r) ? Object.is(a, e) || l(e, (e => p(Object.assign(be(e), e)))) : l(e, (e => {
                            !n && s(e) || p(e)
                        }))
                    } else l(e, ((e, i) => {
                        if (t(e)) {
                            const t = r ? Object.assign(be(e), a[i]) : a[i];
                            a[i] = ye(t, e, n)
                        } else a[i] = e
                    }));
                    fe(e, a)
                })(e) : D(`utils/mergeDeep: WARNING - Prototype mismatch! Object of prototype "${c}" skipped during merge process:\n`, e)
            })), a
        }

        const Ae = ye;
        n(612);
        var Ee = n(353), Te = n.n(Ee), we = n(409);
        const Se = n.n(we)();

        function xe(e) {
            return e = e.replace(/\.(\S+?)/g, `.${f}$1`), Se(e)
        }

        function ke(e) {
            return xe(e)[0]
        }

        function Ce(e, t = !1) {
            if (!e) return D("An undefined value is being passed to html.query() as a parameter. Please check your query."), !1;
            -1 === e.indexOf(`.${f}`) && (e = e.replace(/\./g, `.${f}`));
            const n = Te()(e);
            return t ? n : !!n.length && n[0]
        }

        function Le(e) {
            return Ce(e, !0)
        }

        function Re(n) {
            return v(n, ((n, r, i) => {
                if (t(r)) {
                    const e = r._attributes || "";
                    return delete r._attributes, n + ke("." + i + e + "[html=" + Re(r) + "]").outerHTML
                }
                {
                    let t = "";
                    return e(r) || (t = v(xe(r), ((e, t) => e + t.outerHTML), t)), n + ke("." + i + (t.length ? "[html=" + t + "]" : "")).outerHTML
                }
            }), "")
        }

        function Pe(e) {
            return !(!E(e) || !e.length || /\.$/.test(e) || /\s/.test(e) || !/.*(\/.*|\.*)+/.test(e))
        }

        function Ie(e) {
            return E(e) && /^((http|https):)?(\/\/)?(www\.)?[a-z0-9]+([-.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/.test(e)
        }

        function Me(e, t, n) {
            t = t || ":";
            const r = (e, t = 2) => ("0" + e).substr(-t), i = Math.floor(e / 3600);
            e -= 3600 * i;
            const a = Math.floor(e / 60), o = Math.floor(e % 60), s = r(i, n && 1);
            return (i ? s + t : "") + r(a, n && !i && 1) + t + r(o)
        }

        function De(e, t) {
            if (!E(e)) return e;
            e += "";
            const n = t ? e.slice(1).toLowerCase() : e.slice(1);
            return e.charAt(0).toUpperCase() + n
        }

        const Oe = {"&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "/": "&#x2F;"};

        function Be(e, n) {
            return n = t(n) ? n : Oe, E(e) ? e.replace(new RegExp(i(n).join("|"), "gi"), (e => n[e.toLowerCase()])) : (D(`Helpers/escape: "str" argument:\n${e}\nis not a string.`), e)
        }

        v(Oe, ((e, t, n) => (e[t] = n, e)), {});
        const Ne = v(["<", ">", "collate", "concat", "create", "declare", "delete", "drop", "insert", "select", "waitfor"], ((e, t) => (e[t] = "", e)), {});

        function Fe(e, n) {
            return Be(e, n = t(n) ? n : Ne).trim()
        }

        const Ue = (e = "") => {
            D('Utils/network: Please pass events.fire as first argument of "redirect" method.\nEvent Name: ' + e)
        }, {subscribePublic: He} = de, Ye = !["basic", "image"].includes(m);

        function Ge(e, t = !1, n, r, i = !1, o = Ye) {
            const s = new XMLHttpRequest;
            if (a(n) && (s.onreadystatechange = () => {
                const t = s.status;
                if (s.readyState === XMLHttpRequest.DONE) {
                    if (t >= 200 && t < 300) return n(s.responseText, e, t);
                    if (a(r)) return r(new Error("XMLHttpRequest returned status: " + t), t)
                }
            }), Pe(e)) try {
                s.open("GET", e, o), s.withCredentials = i, t && l(t, ((e, t) => {
                    s.setRequestHeader(t, e)
                })), s.send()
            } catch (d) {
                I("AjaxLoader error:\n", e, "\n", d)
            }
        }

        function Ve(e, t, n = !1) {
            return new Promise(((r, i) => {
                Ge(e, t, ((e, t, n, i) => {
                    r({data: e, status: i})
                }), ((e, t) => {
                    i({err: e, status: t})
                }), n)
            }))
        }

        function Ke(e, t, n, r, i, a) {
            e = p(e) ? e : [e], l(e, (e => {
                Pe(e) && Ge(e, t, n, r, i, a)
            }))
        }

        function ze(e = Ue, t) {
            try {
                const r = H.get().platform, {target: i = "_blank"} = t, a = function (e, t) {
                    let {medium: n} = e;
                    const {url: r, campaign: i, time: a, settings: s = {}} = e;
                    let l = r, d = {target: l, source: ""};
                    return E(n) && n.includes("embed") && ["mobile", "tablet"].includes(t) && (n = "embed-" + t), o(a) || (l = w(l, a)), o(n) || (d = function (e, t, n, r) {
                        const i = ["utm_medium=" + t, "utm_campaign=" + n], a = {source: ""};
                        return r.embeds && r.embeds.domain && r.referrerUrl && (a.source = r.referrerUrl.split("//").pop(), i.push("utm_source=" + r.referrerUrl)), e += (e.indexOf("?") < 0 ? "?" : "&") + i.join("&"), a.target = e, a
                    }(l, n, i, s)), d
                }(t, r), s = a.target;
                let l, d;
                if (e("player.redirected", a), He("visibility.changed", (e => {
                    e.visible || clearTimeout(l)
                }), !0), "_self" === i) l = setTimeout((() => {
                    window.top.location = s
                }), 1e3); else if ("_blank" === i) try {
                    d = document.createElement("a"), d.target = i, d.href = s, document.body.appendChild(d), d.click()
                } catch (n) {
                    l = setTimeout((() => {
                        window.top.location = s
                    }), 1e3)
                } finally {
                    d && document.body.removeChild(d)
                }
                return !0
            } catch (n) {
                return I("utils/network: Unexpected error in redirect method:\n", n), !1
            }
        }

        const je = `${f}player`;
        let Qe, We;

        function qe(e, t, n) {
            try {
                const n = t ? decodeURIComponent(e) : e;
                return JSON.parse(n)
            } catch (r) {
                n || tt(`Unable to convert the following string to an object:\n${e}`, r)
            }
            return e
        }

        function Xe(e, n, r) {
            if (t(e)) {
                try {
                    const t = JSON.stringify(e);
                    return n ? encodeURIComponent(t) : t
                } catch (i) {
                    r || tt("Unable to convert object to a JSON string.", i)
                }
                return e
            }
        }

        function Je(e) {
            return "string" != typeof e ? null : e.replace(/[^\w\s]/gi, "")
        }

        function $e(e, t) {
            const n = e || je;
            return We ? t ? Xe(Qe) : Qe.getItem(n) : t ? Xe(v(document.cookie.split(";"), ((e, t) => {
                const n = t.split("=");
                return e[n[0]] = qe(n[1], !0, !0), e
            }), {})) : function (e) {
                let t = Je(e);
                if (!t) return tt("Please provide a valid cookie name."), null;
                t += "=";
                const n = document.cookie.split(";");
                let r, i;
                for (r = 0; r < n.length; r++) if (i = n[r].trim(), 0 === i.indexOf(t)) return i.substring(t.length, i.length);
                return null
            }(n)
        }

        function Ze(e, t) {
            e = Je(e) || je;
            try {
                return We ? Qe.setItem(e, Xe(t)) : function (e, t, n) {
                    if (!Je(e) || "string" != typeof t) return tt("Please provide a valid name/value pair for the cookie."), !1;
                    let r, i;
                    n ? (r = new Date, r.setTime(r.getTime() + 24 * n * 60 * 60 * 1e3), i = `;expires=${r.toGMTString()};`) : i = ";";
                    const a = "https:" === window.location.protocol ? "Secure;" : "";
                    document.cookie = `${e}=${t} ${i} path=/; SameSite=None; ${a}`
                }(e, Xe(t, !We), 365), !0
            } catch (n) {
                return tt("There was an error storing the data. See below error trace for more details.", n), !1
            }
        }

        function et(e, t, n, r) {
            const i = Array.isArray(e) ? e : e.split("/");
            if (i.length > 1) {
                const e = i.shift();
                n[e] = n[e] || {};
                et(i, t, n[e], r)
            } else n[i[0]] = t;
            return n
        }

        function tt(e, t) {
            e && (D(`*** MGP - Storage ***\n${e}`), t && D("Error details:", t))
        }

        function nt(e, t, n) {
            t = Je(t) || je, We ? Qe[i(e).length && !n ? "setItem" : "removeItem"](t, Xe(e)) : Object.keys(e).length && !n ? Ze(t, e) : function (e) {
                const t = Je(e);
                t ? document.cookie = `${t}=; expires=Thu, 01 Jan 1970 00:00:00 GMT;` : tt("Please provide a valid cookie name.")
            }(t)
        }

        function rt() {
            function e(e, t) {
                const n = $e(t);
                if (n) {
                    const t = qe(n, !We), r = t && t[e];
                    return r || (!e && t ? t : r)
                }
            }

            return {
                get: e, set: function (t, n, r) {
                    if (null == n) return tt(`Please provide a valid value for storing "${t}" within "${r || je}".`), !1;
                    const i = e(void 0, r) || {}, a = i[t];
                    return i[t] = "object" == typeof a ? K(a, n) : n, Ze(r, i), !0
                }, update: function (t, n, r) {
                    if (null == n) return tt(`Please provide a valid value for storing "${t}" within "${r || je}".`), !1;
                    let i = e(void 0, r) || {};
                    return i = et(t, n, i), Ze(r, i), !0
                }, has: function (t, n) {
                    return t ? !!e(t, n) : (D("Please provide a valid property name to validate against storage."), !1)
                }, remove: function (t, n, r = !1) {
                    if (!t && !r) return tt("Please provide a valid property name to remove from storage."), !1;
                    const i = e(void 0, n);
                    return !!(i && Object.prototype.hasOwnProperty.call(i, t) || r) && (r || delete i[t], nt(i, n, r), !0)
                }
            }
        }

        function it(e, t) {
            const n = +e, r = +t;
            return n === r ? 0 : n < r ? -1 : 1
        }

        function at(e, t) {
            const [n, r, i] = e.split(".").map((e => +e)), [a, o, s] = t.split(".").map((e => +e));
            return n !== a ? n < a ? -1 : 1 : r !== o ? r < o ? -1 : 1 : i !== s ? i < s ? -1 : 1 : 0
        }

        function ot(e, t, n) {
            e.set("buildNumber", t), e.set("version", n)
        }

        const st = function () {
            We = function () {
                let e = !1;
                try {
                    Qe = window.localStorage;
                    const t = `${je}_test`;
                    Qe.setItem(t, "Player is testing local storage."), Qe.removeItem(t), e = !0
                } catch (t) {
                    tt("Web Storage API is not supported on this device.\nPlayer will be using cookies as a fallback to store all required functional data.")
                }
                return e
            }();
            const e = new rt;
            return function (e) {
                let n = e.get("buildNumber") || "000000.000";
                const r = e.get("version") || "0.0.0";
                if (at(r, "6.2.0") < 0 && (n = "000000.000"), it(n, u) > 0 || at(r, h) > 0) return e.remove(void 0, void 0, !0), void ot(e, u, h);
                if (it(n, u) < 0) {
                    const t = ["adroll", "adaptive"];
                    l(t, (t => e.remove(t))), tt(`Local storage keys: "${t.join('", "')}" were wiped out because a new player build was detected.`)
                }
                if (at(r, "6.2.0") < 0) {
                    e.remove("preroll");
                    const n = e.get("quality");
                    e.remove("quality"), t(n) ? e.set("quality", {
                        auto: n.auto || !1,
                        quality: n.quality
                    }) : "auto" === n ? e.set("quality", {auto: !0}) : n && e.set("quality", {
                        auto: !1,
                        quality: n
                    }), tt('Local storage key: wiped out "preroll" and adapted "quality" from version before 6.2.0.')
                }
                ot(e, u, h)
            }(e), e
        }();
        let lt, dt, ct, pt, ut, gt;
        const mt = {
            32: "togglePlay",
            37: "jumpBackward",
            38: "volumeUp",
            39: "jumpForward",
            40: "volumeDown",
            70: "toggleFullscreen",
            77: "toggleMute",
            83: "toggleSpeed"
        }, ft = "focusedPlayer";
        const ht = class {
            constructor(e, t, n, r, i) {
                this.container = e, this.features = r.features, this.playerId = t, this.selectors = i, this.speedEnabled = n, this.duration = 0, this.keyboardJump = !1, this.seekingDisabled = !1, ({
                    is: lt,
                    browser: dt
                } = H.get()), ({
                    fire: pt,
                    subscribe: ut,
                    addClick: ct,
                    stopOrPrevent: gt
                } = de.get(t)), this.bindShortcuts(), this.trackFocus(), this.subscribeToPlayerEvents()
            }

            get actions() {
                return {
                    togglePlay: () => {
                        pt("playback.toggle", {isManual: !0})
                    }, volumeUp: () => {
                        this.features.volume && pt("volume.increase", {manual: !0})
                    }, volumeDown: () => {
                        this.features.volume && pt("volume.decrease", {manual: !0})
                    }, jumpForward: () => {
                        this.keyboardJump = !0
                    }, jumpBackward: () => {
                        this.keyboardJump = !0
                    }, jumpToPercent: e => {
                        if (!this.seekingDisabled && this.duration) {
                            const t = Ce(this.selectors.videoWrapper.video);
                            pt("playback.seek", {offset: this.duration / 100 * e, playAfter: !t.paused})
                        }
                    }, toggleFullscreen: () => {
                        (this.features.fullscreen || lt.ios && this.features.iosFullscreen) && pt("fullscreen.toggle", {area: "keyboard"})
                    }, toggleMute: () => {
                        this.features.volume && pt("volume.toggle", {manual: !0})
                    }, toggleSpeed: () => {
                        !0 === this.speedEnabled && pt("playback.speed.toggle")
                    }, gotoStart: () => {
                        this.jumpToPercent(0)
                    }, gotoEnd: () => {
                        this.jumpToPercent(100)
                    }
                }
            }

            isPlayerFocused() {
                return st.get(ft) === this.playerId
            }

            isShortcutDisabled(e) {
                if (!e) return !1;
                const t = {ie: [70]}[dt.name];
                return t && t.indexOf(e) > -1
            }

            onKeydown(e) {
                if (!this.isPlayerFocused()) return !1;
                const {key: t = "", keyCode: n = -1, metaKey: r = !1, ctrlKey: i = !1} = e;
                let a, o = mt[n];
                return t.match(/^\d$/) && (a = 10 * t, o = "jumpToPercent"), o && !this.isShortcutDisabled(n) ? (this.actions[o](a), pt("keyboard", {
                    action: o,
                    metaKey: r || i,
                    percentage: "jumpToPercent" === o ? a : void 0
                }), gt(e, !0, !0), !1) : void 0
            }

            onKeyup() {
                if (!this.isPlayerFocused()) return !1;
                this.keyboardJump && (pt("keyboard", {action: "keyboardJump"}), this.keyboardJump = !1)
            }

            bindShortcuts() {
                document.addEventListener("keydown", this.onKeydown.bind(this)), document.addEventListener("keyup", this.onKeyup.bind(this))
            }

            trackFocus() {
                const e = Ce(this.selectors.eventCatcher), t = Ce(this.selectors.controls.bigPlay), n = () => {
                    setTimeout((() => {
                        this.isPlayerFocused() || st.set(ft, this.playerId)
                    }), 0)
                };
                l([this.container, e, t], (e => {
                    G(e) && ct(e, n)
                })), document.body.addEventListener("click", (({target: e}) => {
                    this.container.contains(e) || this.container === e || st.remove(ft)
                }))
            }

            subscribeToPlayerEvents() {
                ut("playback.duration.changed", (e => {
                    e.duration && (this.duration = e.duration)
                })), ut("adroll.init", (({preRoll: e}) => this.seekingDisabled = e)), ut(["adroll.ready", "adroll.ended"], ((e, t, n) => {
                    this.seekingDisabled = "ready" === n.split(".").pop()
                })), ut("adroll.skipped", (() => this.seekingDisabled = !1))
            }
        };
        const _t = function (e, t, n) {
            const {addClick: r, addDblClick: i, stopOrPrevent: a, subscribe: o} = de.get(n);
            let s = 300, l = !0, d = !0, c = !1;

            function p() {
                return d = !1, !0
            }

            function u(e, n) {
                t.onDoubleClick && t.onDoubleClick(e, n)
            }

            function g(e) {
                t.onClick && t.onClick(e)
            }

            return p(), function () {
                let t, n = 0, o = 0, p = 0;
                r(e, (e => {
                    if (!l) return;
                    if (e.button && 0 !== e.button) return;
                    if (!c) return;
                    if (a(e, !0), !d) return void g(e);
                    const r = (new Date).getTime(), i = r - n;
                    clearTimeout(t), i < s && i > 0 ? (p++, o = r, u(e, p)) : (t = setTimeout((() => {
                        clearTimeout(t), s = 300, g(e)
                    }), s), p = 0), n = r
                })), i(e, (e => {
                    l && d && (!e.button || 0 === e.button) && c && (n = (new Date).getTime(), n - o < 100 || (s = 500, clearTimeout(t), a(e, !0), p++, u(e, p)))
                }))
            }(), o("source.ready", (() => {
                c = !0
            })), {
                enable: function () {
                    return l = !0, !0
                }, disable: function () {
                    return l = !1, !0
                }, enableDouble: function () {
                    return d = !0, !0
                }, disableDouble: p
            }
        };
        const vt = function (e, t = {}) {
            const {checkOptionsSupport: n, fire: r, subscribe: i} = de.get(e), a = Ce(`#${e}`), o = {threshold: 20},
                s = !!n("passive") && {passive: !0}, l = document.documentElement;
            let d = !1, c = !1, p = !1;

            function u(e = d) {
                if (!G(a)) return void D("MGP swipeController: There's one or more missing arguments in module instantiation.");
                let n, i, c, u, g, m, f, h;
                const {threshold: _} = K(o, t), v = e => {
                    h = l.style.overflow, f = e.target, n = e.touches[0].clientX, i = e.touches[0].clientY, g = 0, m = 0
                }, b = e => {
                    l.style.overflow = "hidden", c = e.touches[0].clientX, u = e.touches[0].clientY
                }, y = () => {
                    l.style.overflow = h || "", g = c - n, m = u - i;
                    const e = Math.abs(g), t = Math.abs(m);
                    if (p = Math.max.call(Math, e, t) > _, !p) return;
                    let a;
                    a = e > t ? g > 0 ? "right" : "left" : m > 0 ? "down" : "up", r("skin.swiped", {
                        dir: a,
                        moved: {x: g, y: m},
                        target: f
                    })
                };
                e ? (a.addEventListener("touchstart", v, s), a.addEventListener("touchmove", b, s), a.addEventListener("touchend", y, s)) : (a.removeEventListener("touchstart", v), a.removeEventListener("touchmove", b), a.removeEventListener("touchend", y))
            }

            function g() {
                return d = !0, u(), !0
            }

            return i("source.ready", (() => {
                c || (g(), c = !0)
            })), {
                enable: g, disable: function () {
                    return d = !1, u(), !0
                }, enabled: () => d
            }
        };

        function bt(e, n = "") {
            const r = {};
            return l(e, ((e, i) => {
                t(e) ? r[i] = bt(e, n) : r[i] = (n ? "#" + n + " " : "") + e.replace(/\./g, "." + f)
            })), r
        }

        const yt = void 0 !== document.documentElement.classList,
            At = "Missing element or class names parameter is null, undefined or empty.", Et = (e, t) => {
                const n = e.getAttribute("class");
                if (!n || n.indexOf(t) < 0) return e.setAttribute("class", e.getAttribute("class") + " " + t), !0
            }, Tt = (e, t) => (e.setAttribute("class", e.getAttribute("class").replace(new RegExp("s?" + t), "")), !0),
            wt = (e, t) => e.getAttribute("class").indexOf(t) > -1;

        function St(e, t) {
            return !e || c(t) ? (D(`css.add: ${At}`, t, e), !1) : (t = p(t) ? t : [t], l(t, (t => {
                if (t) {
                    if (-1 === t.indexOf(f) && (t = f + t), !yt) return Et(e, t);
                    e.classList.add(t)
                }
            })), !0)
        }

        function xt(e, t) {
            return !e || c(t) ? (D(`css.remove: ${At}`, t, e), !1) : (t = p(t) ? t : [t], l(t, (t => {
                if (-1 === t.indexOf(f) && (t = f + t), !yt) return Tt(e, t);
                e.classList.remove(t)
            })), !0)
        }

        function kt(e, t) {
            return e && t ? (-1 === t.indexOf(f) && (t = f + t), yt ? e.classList.contains(t) : wt(e, t)) : (D(`css.has: ${At}`, t, e), !1)
        }

        const Ct = function (e, t, n, r = !1) {
            const i = R() && !1, {subscribe: a} = de.get(t),
                o = ["ready", "buffering", "playing", "paused", "replay", "offline"];
            let s, d, c = !1, p = !1, u = !1, g = !0, m = 0, f = !1, h = !1, _ = !1, v = !1, b = !1, y = !1, A = !1;

            function E(e, t, n) {
                if (!i) return;
                M(`%c*** MGP - Skin Container ****\nState ${e}\nEvent: ${n} / State: ${t}`, "background: $color$; color: white".replace("$color$", /skipped/i.test(e) ? "red" : "green"))
            }

            function T(t, n) {
                if (o.includes(t) && t !== s) {
                    if ("ready" === t && !c || u && -1 !== ["playing", "paused"].indexOf(t) || A) return void E("SKIPPED", t, n);
                    l(o, (t => {
                        xt(e, t + "State")
                    })), St(e, t + "State"), s = t, "buffering" === t && b ? St(e, "playAfterBuffer") : xt(e, "playAfterBuffer"), "buffering" === t && y ? St(e, "playAfterSeek") : "paused" !== t && y && (xt(e, "playAfterSeek"), y = !1), E("CHANGED", t, n)
                }
            }

            return a("playback.playing", ((e, t, n) => {
                b = !0, p = !0, u = !1, T("playing", n)
            })), a("playback.paused", ((e, t, n) => {
                b = !1, f || T(p ? "paused" : "ready", n)
            })), a("playback.seek.started", ((e, t, n) => {
                u = !0, e.playAfter && (y = !0), T("buffering", n)
            })), a(["playback.seek.ended", "cast.seek.ended"], (() => {
                u = !1, y = !1, xt(e, "playAfterSeek")
            })), a(["playback.waiting", "source.waiting", "source.adaptive.waiting"], ((e, t, n) => {
                T("buffering", n)
            })), a("source.stalled", ((e, t, n) => {
                e.stalled && b && g && T("buffering", n)
            })), a("source.loading", ((e, t, n) => {
                T("buffering", n), A = !0
            })), a("adroll.ready", (({model: e}) => {
                h = !e.last
            })), a("adroll.init", (e => {
                h = !e.empty
            })), a("adroll.ended", ((e, t, n) => {
                T("buffering", n)
            })), a("adroll.skipped", (({startPoint: e, hasPostRoll: t}) => {
                100 === e && T("replay"), 100 !== e && t || (h = !1)
            })), a("autoplay.promise.changed", ((e, t, n) => {
                !1 === e.success && T("ready", n)
            })), a("playback.time.changed", (({time: t}, n, r) => {
                _ = !t, A = !1, _ ? St(e, "loadingRoll") : xt(e, "loadingRoll"), !f && t && t !== m && (b = !0), !b && t ? (T(p ? "paused" : "ready", r), m = t) : Math.abs(m - t) > .5 && p && !_ && (T("playing", r), m = t)
            })), a("source.error", (() => {
                u = !1, y = !1
            })), a("source.ready", ((e, t, n) => {
                c = !0, d = e.duration || d, f || b && p || T("ready", n)
            })), a("skin.offline", ((e, t, n) => T("offline", n))), a("visibility.changed", (e => g = e.visible)), a("source.quality.changed", ((e, t, n) => {
                p && !f && T(b ? "buffering" : "paused", n)
            })), a(["source.adaptive.quality.changed", "source.quality.changed"], (() => v = !0)), a("playback.ended", ((e, t, n) => {
                f = !0, b = !1, T(h ? "buffering" : "replay", n)
            })), a(["playback.playing", "playback.paused", "playback.seek.started", "playback.seek.ended", "playback.time.changed", "source.adaptive.quality.changed", "source.quality.changed"], (({time: e}, t, n) => {
                f = !r && e && e + .25 >= d, f && v && !h && !_ && T("replay", n)
            })), T("buffering", "init"), {element: e, getState: () => s}
        };
        const Lt = function (e, t, n) {
            const {subscribe: r} = de.get(t.playerId), {is: i, features: a} = H.get(t), o = t.mainRoll,
                s = e.parentNode, l = o.poster, d = o.posterWEBP;
            let c, p, u, g, m, f, h = !1, _ = !1, v = !1;

            function b() {
                r("player.ready", (() => {
                    (function () {
                        const e = () => n && !i.desktop && m && t.autoplayAds;
                        return !(n && i.desktop && !a.iPad || e())
                    })() && !h && (y(), A())
                })), r("source.ready", (() => {
                    _ = !1, v && (E(), v = !1)
                })), r("adroll.init", (({empty: e, postRoll: t}) => {
                    c = e, f = t
                })), r("adroll.ready", (() => m = !0)), r("adroll.started", (({get: e}) => c = e("last"))), r("adroll.ended", (({get: e}) => {
                    100 === e("startPoint") && T(), m = !1
                })), r("playback.playing", E), r("autoplay.promise.changed", (e => {
                    e.autoplay || A()
                })), r("playback.ended", (() => {
                    c && T()
                })), r("buttons.replay", (() => v = !0)), r("playback.time.changed", (({time: e}) => {
                    e && E()
                }))
            }

            function y() {
                if (!Pe(l) && !Pe(d)) return !1;
                u.setAttribute("srcset", d || l), g.setAttribute("src", l), g.setAttribute("alt", t.mainRoll.title)
            }

            function A() {
                _ || (p.style.display = "block", e.style.visibility = "hidden", h = !0)
            }

            function E() {
                _ || (p.style.display = "none", e.style.visibility = "visible", h = !1)
            }

            function T() {
                f && (A(), f = !1, _ = !0)
            }

            return function () {
                p = ke(".videoPoster");
                const e = ke("picture");
                u = ke("source[type=image/webp]"), g = ke("img"), s.appendChild(p), p.appendChild(e), e.appendChild(u), e.appendChild(g)
            }(), y(), A(), b(), {show: A, hide: E, isVisible: () => h}
        };
        const Rt = function (e, t, n) {
            const {subscribe: r} = de.get(t), i = Ce(e.elapsed), a = Ce(e.total), o = !!e.container && Ce(e.container);
            let s, l, d, c = !0, p = !1;

            function u(e) {
                if (!p) return i.innerHTML = Me(e), !0
            }

            function g(e) {
                p || (a.innerHTML = Me(e))
            }

            return o && (o.style.minWidth = o.clientWidth + "px"), r("playback.time.changed", (({time: e}) => {
                s = e > 0 && e !== n && e !== d, c && s && u(e)
            })), r("seekbar.time.updated", (e => u(e.time))), r("playback.duration.changed", (e => {
                l ? (d = e.duration, g(n)) : (n = e.duration, g(e.duration))
            })), r("adroll.started", (() => {
                d && g(d)
            })), r("adroll.ready", (() => l = !0)), r("adroll.ended", (({get: e}) => {
                l = !1, 100 === e("startPoint") && (u(n), g(n), p = !0)
            })), r("source.ready", (e => {
                p = !1, e.time && u(e.time)
            })), r(["seekbar.dragstart", "seekbar.dragend"], ((e, t, n) => {
                c = n.split(".").pop().includes("end")
            })), {update: u, totalElement: a, elapsedElement: i, container: o}
        };
        const Pt = function (e) {
            return t(e) ? Object.values(r(e) ? Array.from(e) : e) : []
        };
        const It = function (e, n) {
            if (!t(e)) return I("utils/find: First parameter is not an object."), !1;
            if (a(n)) {
                const t = Y(e, n);
                return t.length ? t[0] : Pt(t)[0]
            }
            return E(n) ? Y(e, (e => !!e[n]))[0] : s(n) ? Y(e, (e => e[n[0]] === n[1]))[0] : Y(e, (e => i(n).every((t => e[t] === n[t]))))[0]
        };

        function Mt(e) {
            const t = document.createElement("video"), n = It({
                ogg: 'video/ogg; codecs="theora"',
                h264: 'video/mp4; codecs="avc1.42E01E"',
                webm: 'video/webm; codecs="vp8, vorbis"',
                vp9: 'video/webm; codecs="vp9"',
                hls: 'application/x-mpegURL; codecs="avc1.42E01E"'
            }, ((t, n) => n === e));
            let r = "";
            if (n) try {
                r = t.canPlayType(n).replace(/^no$/, "")
            } catch (i) {
                r = ""
            }
            return !!r
        }

        const Dt = function (e, n, r) {
            let i;

            function a(e) {
                return e ? i[e] : i
            }

            return i = Object.assign({}, e), {
                name: r, get: a, getDefault: function (t) {
                    return t ? e[t] : e
                }, set: function (e, n) {
                    e = t(e) ? e : {[e]: n}, l(e, ((e, t) => {
                        e !== a(t) && (i[t] = e)
                    }))
                }, toggle: function (e) {
                    return i[e] = !i[e], i[e]
                }, increment: function (e) {
                    return i[e]++, i[e]
                }, reset: function () {
                    i = Object.assign(i, e)
                }, save: function () {
                    st.set(r, i)
                }, read: function () {
                    i = K(i, st.get(r))
                }
            }
        };
        const Ot = function (e, t, n, r, i) {
            const {is: a, embed: s} = H.get(), {addClick: d, checkOptionsSupport: c, fire: p, stopOrPrevent: u, subscribe: g} = de.get(e.playerId),
                m = e.menu, h = !1, _ = "showGrid", v = "showGridPreview", b = new Dt({
                    enabled: !0,
                    visible: 0,
                    bouncing: !0,
                    activeTab: "",
                    dataLoaded: !1,
                    videoStarted: !1,
                    playing: !1,
                    sliderReady: !1,
                    videoEnded: !1
                }, e.playerId, "GridMenuHelper");
            let y, A, E, T, w, S, x = 0, k = !1, C = !1, L = !1;

            function R(e) {
                o(m.relatedUrl) || (m.url = m.relatedUrl), m.data ? P(m.data) : m.url && Ge(m.url, !1, (t => {
                    P(JSON.parse(t), e)
                }))
            }

            function P(e, t) {
                if (S = e, x = 0, o(S)) return D(_), !1;
                b.set("dataLoaded", !0), function () {
                    const e = x, t = k && a.desktop || s && (a.desktop || a.tablet) ? 9 : 6, i = function (e, t) {
                        if (t = t || 9, S[e = e || "related"].length > t) {
                            return S[e].sort((() => .5 - Math.random())).slice(0, t)
                        }
                        return S[e]
                    }("related", t), o = e * t;
                    let c, g, h = o + t;
                    h > i.length && (h = i.length);
                    for (c = o; c < h; c++) {
                        g = i[c], l(g, ((e, t) => {
                            g[t] = Fe("" + e)
                        }));
                        const e = Mt("webm") && g[6] && !s,
                            t = ke(`a.gridItem[draggable="false"][data-item-type="${e ? "video" : "thumb"}"]`),
                            n = ke("video[muted]"), r = ke(".gridThumb"), a = ke(".info"), o = ke(".title"),
                            d = ke(".stats");
                        t.href = g[4], t.title = g[1], o.innerHTML = g[1], a.appendChild(o), d.appendChild(ke(`.time[html="${g[2]}"]`)), d.appendChild(ke(`.rating i.icon.icon-grid-thumb-up + span[html="${g[3]}"]`)), d.appendChild(ke(`.views i.icon.icon-grid-views + span[html="${O(g[5])}"]`)), a.appendChild(d), e && (n.src = g[6]), r.style.backgroundImage = `url("${g[0]}")`, t.appendChild(e ? n : r), t.appendChild(a), y.appendChild(t)
                    }
                    !function () {
                        const e = Le(`${n.thumbnailsGrid} .${f}gridItem`);
                        if (m.linkColor) {
                            const e = Le([`${n.thumbnailsGrid} .${f}gridItem .${f}title`, `${n.thumbnailsGrid} .${f}icon`].join());
                            l(e, (e => {
                                e.style.color = m.linkColor
                            }))
                        }
                        l(e, ((e, t) => {
                            "A" == e.tagName && e.href.length && (d(e, (() => {
                                b.get("visible") < 2 || (s || p("grid.clicked", {num: t + 1}), r.open(e.href))
                            }), !0, !0), e.addEventListener("click", (e => (u(e, !0, !0), !1))), e.addEventListener("mousedown", (t => {
                                2 !== t.which && 3 !== t.which || (u(t, !0, !0), r.open(e.href))
                            })))
                        }))
                    }()
                }(), s || b.get("sliderReady") || function () {
                    const e = 1, t = ke(".gridNextBtn");
                    let r, i = 0, a = 0, o = 0, s = 0;

                    function l() {
                        const r = Ce(n.thumbnailsItem);
                        o = E.clientHeight, a = (r.offsetHeight + 4) * e, s = A.offsetHeight, s > o ? t.style.display = "none" : (t.style.display = "block", b.get("bouncing") && (St(t, "animated"), b.set("bouncing", !1))), setTimeout((() => {
                            xt(t, "animated")
                        }), 4e3), i = 0, p(i)
                    }

                    function p(e) {
                        E.style.transform = "translate(0, -" + e + "px)"
                    }

                    function g() {
                        xt(t, "animated"), i + a > o - s ? i = o - s : i += a, p(i)
                    }

                    function m() {
                        i - a < 0 ? i = 0 : i -= a, p(i)
                    }

                    function f() {
                        function e(e) {
                            s = A.offsetHeight, o = E.clientHeight, e < 0 ? g() : m()
                        }

                        const t = !!c("passive") && {passive: !1};
                        E.addEventListener("wheel", (t => {
                            u(t, !0, !0);
                            e(Math.max(-1, Math.min(1, -t.deltaY || -t.detail)))
                        }), t)
                    }

                    function h() {
                        r || (r = setTimeout((() => {
                            r = null, l()
                        }), 66))
                    }

                    A.appendChild(t), d(t, g, !0, !0), f(), window.addEventListener("resize", h, !1), l(), b.set("sliderReady", !0)
                }(), m.deferredLoad && M(t)
            }

            function M(e) {
                return !(!b.get("enabled") || 2 === b.get("visible") || b.get("playing") || C || !b.get("videoStarted")) && (b.get("dataLoaded") ? (b.set("visible", e ? 1 : 2), B(!0), St(t, _), !0) : (m.deferredLoad && R(e), !1))
            }

            function D(e, n) {
                return !!b.get("visible") && (e || (e = 2 === b.get("visible") ? _ : v), xt(t, e), b.set("visible", 0), B(!1), !1)
            }

            function O(e) {
                if (z(e = parseInt(e, 10)) || e < 1e3) return e;
                const t = ("" + e).length > 6;
                return parseInt(e / (t ? 1e6 : 1e3), 10) + (t ? "M" : "K")
            }

            function B(e) {
                const t = y.querySelectorAll("video"), n = e => {
                    let t = "(Unknown)";
                    e.target && (St(e.target, "video-error"), t = e.target.src), I(`MGP GridMenu: There was an error playing the webm:\nVideo URL: ${t}\nError Event:`, e)
                };
                t.length && l(t, (t => {
                    e ? (t.onerror || (t.onerror = n), t.play().then((() => t.setAttribute("loop", !0)))) : (t.removeAttribute("loop"), t.pause())
                }))
            }

            return function () {
                const t = s ? "playback.paused" : "player.rolls.pause";
                g("layout.vertical", (() => {
                    k = !0
                })), g("playback.playing", (() => {
                    b.set("playing", !0), b.get("videoStarted") || (b.set("videoStarted", !0), m.deferredLoad || R()), D()
                })), g("playback.seek.started", (() => {
                    D()
                })), g("actiontags.screen.changed", (e => {
                    L = e.visible, e.visible ? D() : b.get("playing") || M(h)
                })), m.showOnPause && g(t, (() => {
                    b.set("playing", !1), M(h)
                })), m.showOnPost && g("playback.ended", (() => {
                    b.set("playing", !1), b.set("videoEnded", !0), e.nextVideo.desktop || M()
                })), g("fullscreen.changed", (e => {
                })), g("controlscreen.changed", (e => {
                    e.visible ? M(!0) : 2 !== b.get("visible") && D()
                })), g("options.changed", (e => {
                    e.visible && D()
                })), g("adroll.ready", (() => C = !0)), g("adroll.ended", (() => C = !1)), g("nextvideo.toggle", (e => {
                    !b.get("videoEnded") || e.visible || b.get("visible") || M()
                }))
            }(), function () {
                if (w = ke(".gridMenu .gridContainer .gridWrapper > .thumbnailsGrid"), t.appendChild(w), y = Ce(n.thumbnailsGrid), E = Ce(n.thumbnailsWrapper), A = Ce(n.thumbnailsContainer), !s) {
                    St(w, "gridMenuSide");
                    const e = m.relatedTitle;
                    T = ke(`.gridHeader > .gridTitle[html="${e}"] + i.icon.icon-menu-exit`), E.insertBefore(T, y)
                }
            }(), d(A, void 0, !1, !0), s && d(w, (() => {
                r.openEmbed && !b.get("visible") && r.openEmbed(), D(_)
            }), !0, !0), {
                enable: function () {
                    return b.set("enabled", !0), !0
                }, disable: function () {
                    return b.set("enabled", !1), D(), !0
                }, hide: D, show: M, visible: () => 0 !== b.get("visible")
            }
        };
        const Bt = function (e, t, n, r) {
            const {subscribe: i} = de.get(t), a = n.thumbnails, o = Ce(a.container), s = Ce(a.rect),
                l = !!a.arrow && Ce(a.arrow), d = Ce(a.image), c = Ce(a.sprite), p = Ce(a.selectedTime),
                u = Ce(n.controls.seekBar.container), g = Ce(n.controls.bar), m = function () {
                    const e = g.offsetLeft || u.offsetLeft;
                    return e > 15 ? e : 15
                }();
            let f, h, _, v, b, y, A, E, T, w = !0, S = !1;

            function x() {
                return w = !1, C(), !0
            }

            function k() {
                return w = !0, !0
            }

            function C() {
                return St(o, "hidden"), xt(o, ["leftSide", "rightSide"]), xt(e, "thumbnailsHoverZone"), !0
            }

            function L() {
                return !(!w || !_) && (xt(o, "hidden"), !0)
            }

            function R() {
                D(!0), St(s, "noImage"), xt(e, "thumbnailsHoverZone")
            }

            function P(t, n) {
                if (St(e, "thumbnailsHoverZone"), d.src !== n.url) {
                    _ = !1, d.onload = () => {
                        xt(s, "noImage"), _ = !0
                    }, d.src = n.url, c.style.width = n.thumbWidth + "px", c.style.height = n.thumbHeight + "px", f = S ? 50 : n.thumbWidth;
                    const e = n.thumbWidth / n.thumbHeight;
                    e > 1.31 && e < 1.35 ? St(o, "frame4x3") : xt(o, "frame4x3")
                }
                d.style.transform = "translate3D(" + -1 * t.col * n.thumbWidth + "px," + -1 * t.row * n.thumbHeight + "px,0)", D(!1)
            }

            function I(e) {
                let t = e.position + m - f / 2 - 3;
                t < 0 && (t = 0), t > e.width + 2 * m - f - 6 && (t = e.width + 2 * m - f - 6), s.style.transform = "translate3D(" + t + "px,0,0)"
            }

            function M() {
                i("playback.duration.changed", (e => {
                    h || (v = e.duration)
                })), i("adroll.ready", (() => {
                    h = !0, function (e) {
                        if (!e) return;
                        h = e
                    }(!0), x()
                })), i("adroll.ended", (() => {
                    h = !1, k()
                })), i("layout.thumbnails.vertical", (e => {
                    "9x16" === e.text ? e.crop ? (St(o, "crop9x16"), xt(o, "squish9x16"), S = !0, f = 50) : S || (St(o, "squish9x16"), f = 56) : e.text, xt(o, ["crop4x3", "zoom16x9"])
                })), i("layout.thumbnails.horizontal", (e => {
                    "4x3" === e.text ? e.crop && (St(o, "crop4x3"), f = 0) : "16x9" === e.text && e.zoom && (St(o, "zoom16x9"), f = 0), xt(o, ["crop16x9", "squish16x9"])
                }))
            }

            function D(e) {
                void 0 !== e && (e ? St(o, "thumbLoading") : xt(o, "thumbLoading"))
            }

            return D(!0), M(), {
                show: L, hide: C, disable: x, enable: k, update: function (e) {
                    if (!w || !v) return !1;
                    var t;
                    T = e, t = e.seconds, b = Me(t), b !== y && (p.innerHTML = b, y = b), function (e) {
                        if (!l || !G(l)) return;
                        A || (A = l.getBoundingClientRect().width);
                        const t = e + m - A / 2;
                        l.style.transform = "translate3D(" + t + "px,0,0)"
                    }(e.position);
                    const n = r(e.seconds, ((e, t, n) => !!E && (n === T.seconds && (t && !1 === t.error ? P(e, t) : R(), void I(T)))));
                    return n ? (E = !1, P(n.thumbnail, n.sheet)) : (E = !0, R()), I(e), L(), !0
                }, setSide: function (e) {
                    "fwd" === e ? (St(o, "leftSide"), xt(o, "rightSide")) : (St(o, "rightSide"), xt(o, "leftSide"))
                }
            }
        }, Nt = {
            en: {
                "%PLAY%": "Play",
                "%PAUSE%": "Pause",
                "%REPLAY%": "Replay",
                "%NEXT%": "Next",
                "%MUTE%": "Mute",
                "%UNMUTE%": "Unmute",
                "%FULL_SCREEN%": "Full screen",
                "%EXIT_FULL_SCREEN%": "Exit full screen",
                "%CHROMECAST%": "Stream on TV",
                "%AIRPLAY%": "Airplay",
                "%EXIT_CHROMECAST%": "Disable streaming",
                "%JUMP_TO_ACTION%": "Jump to Action",
                "%LARGE_PLAYER%": "Large Player",
                "%SMALL_PLAYER%": "Small Player",
                "%QUALITY%": "Quality",
                "%OPTIONS%": "Settings",
                "%OPTIONS_LOADING%": "Loading...",
                "%AUTO_QUALITY%": "Auto",
                "%ADVERTISEMENT_TITLE%": "Advertisement: Your video will resume shortly",
                "%ADVERTISEMENT_LINK%": "Visit advertiser",
                "%SKIP_AD%": "Skip Ad",
                "%SKIP_TIMER%": "Skip Ad in % second(s)",
                "%SHARE%": "Share",
                "%COPY_EMBED_CODE%": "Copy Embed Code",
                "%COPY_URL_CURRENT_TIME%": "Copy Video URL From Current Time",
                "%COPY_URL%": "Copy Video URL",
                "%LOOP%": "Loop",
                "%ABOUT%": "Debug Info",
                "%AUTOPLAY%": "Autoplay",
                "%HOTSPOTS%": "Hotspots",
                "%SPEED%": "Speed",
                "%SPEED_NORMAL%": "Normal",
                "%SLOWMOTION%": "Slow Motion",
                "%HOTSPOTS_HOT_NOT%": "See what’s hot and what’s not",
                "%NOT_AVAILABLE%": "Video is not available at the moment.",
                "%ERROR_OCCURED%": 'An error occured, please try again later or <a href="javascript:window.location.reload()">reload</a> the page.',
                "%WATCH_HD%": "Watch in HD",
                "%SUBTITLES_CC%": "Subtitles / CC",
                "%CC_OFF%": "Off",
                "%CC%": "CC",
                "%HIDE_CC%": "Hide",
                "%ON%": "On",
                "%OFF%": "Off",
                "%KEY_MUTE_UNMUTE%": "Mute / Unmute",
                "%KEY_PLAY_PAUSE%": "Play / Pause",
                "%KEY_FULLSCREEN%": "Toggles fullscreen",
                "%KEY_VOLUME%": "Volume up / down",
                "%KEY_MOTIONRATE%": "Slow motion on / off",
                "%KEY_SEEK%": "Leap 5 seconds",
                "%KEY_SEEK_START%": "Go to beginning of video",
                "%KEY_NUMBER_SEEK%": "Go from 0% to 90% length of video",
                "%KEY_SEEK_END%": "Go to end of video",
                "%CLOSE%": "Close",
                "%KEYBOARD_HELP%": "Keyboard Help",
                "%SUBTITLES_CC_SIZE%": "Size",
                "%SUBTITLES_CC_COLOR%": "Color",
                "%SUBTITLES_CC_BG_OPACITY%": "BG Opacity",
                "%SUBTITLES_CC_BG_COLOR%": "BG Color",
                "%COLOR_WHITE%": "White",
                "%COLOR_BLACK%": "Black",
                "%COLOR_CYAN%": "Cyan",
                "%COLOR_MAGENTA%": "Magenta",
                "%COLOR_YELLOW%": "Yellow",
                "%TIMELINE_INTRO_CHAPTER%": "Intro"
            }, ru: {
                "%PLAY%": "Воспроизвести",
                "%PAUSE%": "Пауза",
                "%REPLAY%": "Повтор",
                "%NEXT%": "Следующий",
                "%MUTE%": "Отключить звук",
                "%UNMUTE%": "Включить звук",
                "%FULL_SCREEN%": "Полный экран",
                "%EXIT_FULL_SCREEN%": "Выход из полного экрана",
                "%JUMP_TO_ACTION%": "Перейти на метку",
                "%CHROMECAST%": "Транслировать на ТВ",
                "%EXIT_CHROMECAST%": "Прекратить трансляцию",
                "%LARGE_PLAYER%": "Увеличить",
                "%SMALL_PLAYER%": "Уменьшить",
                "%QUALITY%": "Качество",
                "%OPTIONS%": "Настройки",
                "%OPTIONS_LOADING%": "Загружается ...",
                "%AUTO_QUALITY%": "Авто",
                "%ADVERTISEMENT_TITLE%": "Реклама: Ваше видео продолжится совсем скоро",
                "%ADVERTISEMENT_LINK%": "Посетите рекламодателя",
                "%SKIP_AD%": "Пропустить рекламу",
                "%SKIP_TIMER%": "Вы можете пропустить это видео через % секунд",
                "%SHARE%": "Поделиться",
                "%COPY_EMBED_CODE%": "Копировать HTML-код",
                "%COPY_URL_CURRENT_TIME%": "Копировать URL видео с привязкой ко времени",
                "%COPY_URL%": "Копировать URL видео",
                "%LOOP%": "Повторять",
                "%ABOUT%": "Отладочная информация",
                "%AUTOPLAY%": "Автовоспр.",
                "%HOTSPOTS%": "Горячее",
                "%SPEED%": "Скорость",
                "%SPEED_NORMAL%": "Обычная",
                "%SLOWMOTION%": "Замедленная съемка",
                "%HOTSPOTS_HOT_NOT%": "Узнай, что стоит смотреть",
                "%NOT_AVAILABLE%": "Видео недоступно в данный момент.",
                "%ERROR_OCCURED%": 'Произошла ошибка. Пожалуйста, попробуйте позже или <a href="javascript:window.location.reload()">перезагрузите</a> страницу.',
                "%SUBTITLES_CC%": "Субтитры",
                "%CC_OFF%": "Выкл",
                "%HIDE_CC%": "Спрятать",
                "%ON%": "Вкл",
                "%OFF%": "Выкл",
                "%KEY_MUTE_UNMUTE%": "Отключить звук / Включить звук",
                "%KEY_PLAY_PAUSE%": "Воспроизвести / Пауза",
                "%KEY_FULLSCREEN%": "Переключает полноэкранный режим",
                "%KEY_VOLUME%": "Увеличение / уменьшение громкости",
                "%KEY_MOTIONRATE%": "Медленное включение / выключение",
                "%KEY_SEEK%": "Прыжок 10 секунд",
                "%KEY_SEEK_START%": "Перейти к началу видео",
                "%KEY_NUMBER_SEEK%": "Переход от 0% до 90% длины видео",
                "%KEY_SEEK_END%": "Перейти к концу видео",
                "%CLOSE%": "Закрыть",
                "%KEYBOARD_HELP%": "Справка по клавиатуре",
                "%SUBTITLES_CC_SIZE%": "Размер",
                "%SUBTITLES_CC_COLOR%": "Цвет",
                "%SUBTITLES_CC_BG_OPACITY%": "Прозрачность фона",
                "%SUBTITLES_CC_BG_COLOR%": "Цвет фона",
                "%COLOR_WHITE%": "Белый",
                "%COLOR_BLACK%": "Черный",
                "%COLOR_CYAN%": "Циан",
                "%COLOR_MAGENTA%": "Пурпур",
                "%COLOR_YELLOW%": "Желтый"
            }, fr: {
                "%PLAY%": "Lecture",
                "%PAUSE%": "Pause",
                "%REPLAY%": "Rejouer",
                "%NEXT%": "Suivant",
                "%MUTE%": "Muet",
                "%UNMUTE%": "Non muet",
                "%FULL_SCREEN%": "Écran complet",
                "%EXIT_FULL_SCREEN%": "Sortir de l’écran complet",
                "%JUMP_TO_ACTION%": "Aller à action",
                "%CHROMECAST%": "Stream à la télé",
                "%EXIT_CHROMECAST%": "Désactiver le streaming",
                "%LARGE_PLAYER%": "Lecteur large",
                "%SMALL_PLAYER%": "Petit lecteur",
                "%QUALITY%": "Qualité",
                "%OPTIONS%": "Paramètres",
                "%OPTIONS_LOADING%": "Chargement en cours...",
                "%AUTO_QUALITY%": "Auto",
                "%ADVERTISEMENT_TITLE%": "Publicité: votre vidéo reprendra sous peu",
                "%ADVERTISEMENT_LINK%": "Visiter l'annonceur",
                "%SKIP_AD%": "Ignorer la publicité",
                "%SKIP_TIMER%": "Vous pouvez ignorer cette vidéo dans % secondes",
                "%SHARE%": "Partager",
                "%COPY_EMBED_CODE%": "Copier le code d’intégration",
                "%COPY_URL_CURRENT_TIME%": "Copier le lien URL de la vidéo à partir heure actuelle",
                "%COPY_URL%": "Copier l’URL de la vidéo",
                "%ABOUT%": "Les informations de débogage",
                "%AUTOPLAY%": "Lecture auto",
                "%HOTSPOTS%": "Hotspots",
                "%SLOWMOTION%": "Ralenti",
                "%HOTSPOTS_HOT_NOT%": "Voyez ce qui est chaud et ce qui ne l’est pas",
                "%NOT_AVAILABLE%": "La vidéo n'est pas disponible pour le moment.",
                "%ERROR_OCCURED%": 'Une erreur est survenue, réessayez ultérieurement ou <a href="javascript:window.location.reload()">rechargez</a> la page.',
                "%KEY_MUTE_UNMUTE%": "Muet / Non muet",
                "%KEY_PLAY_PAUSE%": "Lecture / Pause",
                "%KEY_FULLSCREEN%": "Bascule en plein écran",
                "%KEY_VOLUME%": "Volume haut / bas",
                "%KEY_MOTIONRATE%": "Ralenti marche / arrêt",
                "%KEY_SEEK%": "Bond 10 secondes",
                "%KEY_SEEK_START%": "Aller au début de la vidéo",
                "%KEY_NUMBER_SEEK%": "Passez de 0% à 90% de longueur de vidéo",
                "%KEY_SEEK_END%": "Aller à la fin de la vidéo",
                "%CLOSE%": "Fermer",
                "%KEYBOARD_HELP%": "Aide du clavier"
            }, tk: {
                "%PLAY%": "Oynat",
                "%PAUSE%": "Durdur",
                "%REPLAY%": "Tekrar",
                "%NEXT%": "Sonraki",
                "%MUTE%": "Sessiz",
                "%UNMUTE%": "Sesi aç",
                "%FULL_SCREEN%": "Tam Ekran",
                "%EXIT_FULL_SCREEN%": "Tam Ekrandan Çık",
                "%JUMP_TO_ACTION%": "Eyleme geçin",
                "%CHROMECAST%": "TV’de akış yapın",
                "%EXIT_CHROMECAST%": "Akışı devre dışı bırak",
                "%LARGE_PLAYER%": "Geniş Ekran",
                "%SMALL_PLAYER%": "Küçük Ekran",
                "%QUALITY%": "Kalite",
                "%AUTO_QUALITY%": "Otomatik",
                "%ADVERTISEMENT_TITLE%": "Reklam: Videonuz kısa bir süre sonra devam edecektir",
                "%ADVERTISEMENT_LINK%": "Reklamvereni ziyaret edin",
                "%SKIP_AD%": "Reklamları Geç",
                "%SKIP_TIMER%": "Bu videoyu % saniye sonra atlayabilirsiniz",
                "%SHARE%": "Paylaş",
                "%COPY_EMBED_CODE%": "Gömülü Kodu Kopyala",
                "%COPY_URL_CURRENT_TIME%": "Geçerli Saatteki Video URL’sini Kopyala",
                "%COPY_URL%": "Video URL’sini Kopyala",
                "%ABOUT%": "Bilgiyi Denetle",
                "%AUTOPLAY%": "Otomatik Oynat",
                "%HOTSPOTS%": "Popüler Noktalar",
                "%SLOWMOTION%": "Ağır çekim",
                "%HOTSPOTS_HOT_NOT%": "Popüler olanlar ve olmayanlar",
                "%NOT_AVAILABLE%": "Video şu an oynatılamıyor.",
                "%ERROR_OCCURED%": 'Bir hata oluştu, lütfen sonra tekrar deneyiniz ya da <a href="javascript:window.location.reload()">yeniden yükleyiniz</a> yeniden yükleyiniz.',
                "%KEY_MUTE_UNMUTE%": "Sessiz / Sesi aç",
                "%KEY_PLAY_PAUSE%": "Oynat / Durdur",
                "%KEY_FULLSCREEN%": "Tam ekranı açar",
                "%KEY_VOLUME%": "Ses seviyesi yukarı / aşağı",
                "%KEY_MOTIONRATE%": "Yavaş hareket açık / kapalı",
                "%KEY_SEEK%": "Atlama 10 saniye",
                "%KEY_SEEK_START%": "Videonun başlangıcına git",
                "%KEY_NUMBER_SEEK%": "% 0 -% 90 arasında video uzunluğu",
                "%KEY_SEEK_END%": "Videonun sonuna git",
                "%CLOSE%": "Kapat",
                "%KEYBOARD_HELP%": "Klavye Yardımı"
            }, pt: {
                "%PLAY%": "Reproduzir",
                "%PAUSE%": "Pausar",
                "%REPLAY%": "Repetição",
                "%NEXT%": "Próximo",
                "%MUTE%": "Mudo",
                "%UNMUTE%": "Tirar do mudo",
                "%FULL_SCREEN%": "Tela cheia",
                "%EXIT_FULL_SCREEN%": "Sair da Tela Cheia",
                "%JUMP_TO_ACTION%": "Pule para ação",
                "%CHROMECAST%": "Stream na TV",
                "%EXIT_CHROMECAST%": "Desativar transmissão",
                "%LARGE_PLAYER%": "Jogador Grande",
                "%SMALL_PLAYER%": "Jogador Pequeno",
                "%QUALITY%": "Qualidade",
                "%OPTIONS%": "Definições",
                "%OPTIONS_LOADING%": "Carregando...",
                "%AUTO_QUALITY%": "Auto",
                "%ADVERTISEMENT_TITLE%": "Anúncio: seu vídeo será retomado em breve",
                "%ADVERTISEMENT_LINK%": "Visite o anunciante",
                "%SKIP_AD%": "Pular Anúncio",
                "%SKIP_TIMER%": "Pode ignorar este vídeo em % segundos",
                "%SHARE%": "Compartilhar",
                "%COPY_EMBED_CODE%": "Copiar o Código Embutido",
                "%COPY_URL_CURRENT_TIME%": "Copiar URL do Vídeo a Partir do Tempo Atual",
                "%COPY_URL%": "Copiar URL do Vídeo",
                "%ABOUT%": "Informação de depuração",
                "%AUTOPLAY%": "Reprodução Automática",
                "%HOTSPOTS%": "Ponto de Acesso",
                "%SLOWMOTION%": "Câmera lenta",
                "%HOTSPOTS_HOT_NOT%": "Veja o que é tendência e o que não é",
                "%NOT_AVAILABLE%": "O vídeo não está disponível no momento.",
                "%ERROR_OCCURED%": 'Ocorreu um erro, tente novamente mais tarde ou <a href="javascript:window.location.reload()">recarregue</a> a página.',
                "%KEY_MUTE_UNMUTE%": "Mudo / Tirar do mudo",
                "%KEY_PLAY_PAUSE%": "Reproduzir / Pausar",
                "%KEY_FULLSCREEN%": "Alterna em tela cheia",
                "%KEY_VOLUME%": "Volume para cima / para baixo",
                "%KEY_MOTIONRATE%": "Ligado / desligado",
                "%KEY_SEEK%": "Pular 10 segundos",
                "%KEY_SEEK_START%": "Ir para o início do vídeo",
                "%KEY_NUMBER_SEEK%": "Vá de 0% a 90% de duração do vídeo",
                "%KEY_SEEK_END%": "Ir para o final do vídeo",
                "%CLOSE%": "Fechar",
                "%KEYBOARD_HELP%": "Ajuda do teclado"
            }, pl: {
                "%PLAY%": "Odtwórz",
                "%PAUSE%": "Pauza",
                "%REPLAY%": "Powtórna rozgrywka",
                "%NEXT%": "Następny",
                "%MUTE%": "Wycisz",
                "%UNMUTE%": "Włącz głos",
                "%FULL_SCREEN%": "Pełen ekran",
                "%EXIT_FULL_SCREEN%": "Wyłącz pełen ekran",
                "%JUMP_TO_ACTION%": "Przejdź do akcji",
                "%CHROMECAST%": "Strumień w telewizji",
                "%EXIT_CHROMECAST%": "Wyłącz strumieniowanie",
                "%LARGE_PLAYER%": "Duzy odtwarzacz",
                "%SMALL_PLAYER%": "Mały odtwarzacz",
                "%QUALITY%": "Jakość",
                "%OPTIONS%": "Ustawienia",
                "%OPTIONS_LOADING%": "Ładowanie...",
                "%AUTO_QUALITY%": "Auto",
                "%ADVERTISEMENT_TITLE%": "Reklama: Twoj film wkrótce zostanie wyświetlony",
                "%ADVERTISEMENT_LINK%": "Odwiedź reklamodawcę",
                "%SKIP_AD%": "Pomiń Reklamę",
                "%SKIP_TIMER%": "Mozesz wyłączyć ten filmik za % sekund",
                "%SHARE%": "Uwspólnij",
                "%COPY_EMBED_CODE%": "Skopiuj Adres Odnośnika",
                "%COPY_URL_CURRENT_TIME%": "Skopiuj Adres URL Filmu Od Biezącego Momentu",
                "%COPY_URL%": "Skopiuj Adres URL Filmu",
                "%ABOUT%": "Informacje debugowania",
                "%AUTOPLAY%": "autoodtwarzanie",
                "%HOTSPOTS%": "Hotspoty",
                "%SLOWMOTION%": "Zwolnione tempo",
                "%HOTSPOTS_HOT_NOT%": "Co jest hot, a co nie",
                "%NOT_AVAILABLE%": "Film nie jest teraz dostępny.",
                "%ERROR_OCCURED%": 'Wystąpił błąd, spróbuj ponownie później lub <a href="javascript:window.location.reload()">załaduj stronę</a> od nowa.',
                "%KEY_MUTE_UNMUTE%": "Wycisz / Włącz głos",
                "%KEY_PLAY_PAUSE%": "Odtwórz / Pauza",
                "%KEY_FULLSCREEN%": "Przełącza na pełny ekran",
                "%KEY_VOLUME%": "Zwiększanie / zmniejszanie głośności",
                "%KEY_MOTIONRATE%": "Zwolniony ruch włączony / wyłączony",
                "%KEY_SEEK%": "Skacz 10 sekund",
                "%KEY_SEEK_START%": "Idź do początku wideo",
                "%KEY_NUMBER_SEEK%": "Przejdź od 0% do 90% długości filmu",
                "%KEY_SEEK_END%": "Idź do końca wideo",
                "%CLOSE%": "Blisko",
                "%KEYBOARD_HELP%": "Pomoc Klawiatury"
            }, nl: {
                "%PLAY%": "Afspelen",
                "%PAUSE%": "Pauzeren",
                "%REPLAY%": "Herhaling",
                "%NEXT%": "Volgende",
                "%MUTE%": "Dempen",
                "%UNMUTE%": "Dempen uit",
                "%FULL_SCREEN%": "Volledig scherm",
                "%EXIT_FULL_SCREEN%": "Volledige scherm uit",
                "%JUMP_TO_ACTION%": "Spring naar actie",
                "%CHROMECAST%": "Stream op tv",
                "%EXIT_CHROMECAST%": "Schakel streaming uit",
                "%LARGE_PLAYER%": "Grote Afspeler",
                "%SMALL_PLAYER%": "Kleine Afspeler",
                "%QUALITY%": "Kwaliteit",
                "%OPTIONS%": "Instellingen",
                "%OPTIONS_LOADING%": "Bezig met laden...",
                "%AUTO_QUALITY%": "Auto",
                "%ADVERTISEMENT_TITLE%": "Advertentie: Je video zal snel hervat worden",
                "%ADVERTISEMENT_LINK%": "Bezoek de adverteerder",
                "%SKIP_AD%": "Advertentie Overslaan",
                "%SKIP_TIMER%": "Je kunt deze video overslaan over % seconden",
                "%SHARE%": "Delen",
                "%COPY_EMBED_CODE%": "Embed Code Kopiëren",
                "%COPY_URL_CURRENT_TIME%": "Video-URL Uit Huidige Tijd Kopiëren",
                "%COPY_URL%": "Video-URL Kopiëren",
                "%ABOUT%": "Debug Info",
                "%AUTOPLAY%": "Autoplay",
                "%HOTSPOTS%": "Hotspots",
                "%SLOWMOTION%": "Slow Motion",
                "%HOTSPOTS_HOT_NOT%": "Zie wat heet is en wat niet",
                "%NOT_AVAILABLE%": "Video is niet beschikbaar op dit moment.",
                "%ERROR_OCCURED%": 'Een fout deed zich voor, probeer alstublieft later opnieuw of <a href="javascript:window.location.reload()">vernieuw</a> de pagina.',
                "%KEY_MUTE_UNMUTE%": "Dempen / Dempen uit",
                "%KEY_PLAY_PAUSE%": "Afspelen / Pauzeren",
                "%KEY_FULLSCREEN%": "Schakelt over op volledig scherm",
                "%KEY_VOLUME%": "Volume hoger / lager",
                "%KEY_MOTIONRATE%": "Slow motion aan / uit",
                "%KEY_SEEK%": "Spring 10 seconden",
                "%KEY_SEEK_START%": "Ga naar het begin van de video",
                "%KEY_NUMBER_SEEK%": "Ga van 0% tot 90% video lengte",
                "%KEY_SEEK_END%": "Ga naar het einde van de video",
                "%CLOSE%": "Dichtbij",
                "%KEYBOARD_HELP%": "Hulp bij het toetsenbord"
            }, jp: {
                "%PLAY%": "再生",
                "%PAUSE%": "一時停止",
                "%REPLAY%": "リプレイ",
                "%NEXT%": "次",
                "%MUTE%": "ミュート",
                "%UNMUTE%": "ミュートを解除",
                "%FULL_SCREEN%": "フルスクリーン",
                "%EXIT_FULL_SCREEN%": "フルスクリーンを終了",
                "%JUMP_TO_ACTION%": "ビデオの分に行く",
                "%CHROMECAST%": "テレビでストリーミング",
                "%EXIT_CHROMECAST%": "ストリーミングを無効にする",
                "%LARGE_PLAYER%": "大画面",
                "%SMALL_PLAYER%": "小画面",
                "%QUALITY%": "画質",
                "%OPTIONS%": "設定",
                "%OPTIONS_LOADING%": "読み込んでいます",
                "%AUTO_QUALITY%": "自動",
                "%ADVERTISEMENT_TITLE%": "広告：ビデオがまもなく再生されます",
                "%ADVERTISEMENT_LINK%": "広告主にアクセス",
                "%SKIP_AD%": "広告をスキップ",
                "%SKIP_TIMER%": "% 秒後にこのビデオをスキップできます",
                "%SHARE%": "共有",
                "%COPY_EMBED_CODE%": "埋め込みコードをコピー",
                "%COPY_URL_CURRENT_TIME%": "現時点の動画のURLをコピー",
                "%COPY_URL%": "ビデオＵＲＬをコピー",
                "%ABOUT%": "バッグ情報",
                "%AUTOPLAY%": "自動再生",
                "%HOTSPOTS%": "人気ポイント",
                "%SLOWMOTION%": "スローモーション",
                "%HOTSPOTS_HOT_NOT%": "最近の流行り",
                "%NOT_AVAILABLE%": "現在ビデオが利用できません。",
                "%ERROR_OCCURED%": '<a href="javascript:window.location.reload()">エラーが発生しました。後でもう一度お試しになるか、ページを再読込みして下さい。</a>',
                "%KEY_MUTE_UNMUTE%": "ミュート / ミュートを解除",
                "%KEY_PLAY_PAUSE%": "再生 / 一時停止",
                "%KEY_FULLSCREEN%": "フルスクリーンを切り替えます",
                "%KEY_VOLUME%": "ボリュームアップ/ダウン",
                "%KEY_MOTIONRATE%": "スローモーションのオン/オフ",
                "%KEY_SEEK%": "10秒間跳躍する",
                "%KEY_SEEK_START%": "ビデオの先頭に移動",
                "%KEY_NUMBER_SEEK%": "ビデオの長さを0％から90％にする",
                "%KEY_SEEK_END%": "ビデオの終わりに行く",
                "%CLOSE%": "閉じる",
                "%KEYBOARD_HELP%": "キーボードヘルプ"
            }, it: {
                "%PLAY%": "Riproduci",
                "%PAUSE%": "Pausa",
                "%REPLAY%": "Replay",
                "%NEXT%": "Successivo",
                "%MUTE%": "Disattiva audio",
                "%UNMUTE%": "Attiva audio",
                "%FULL_SCREEN%": "Schermo intero",
                "%EXIT_FULL_SCREEN%": "Esci da schermo intero",
                "%JUMP_TO_ACTION%": "Salta all'azione",
                "%CHROMECAST%": "Stream in TV",
                "%EXIT_CHROMECAST%": "Disattiva lo streaming",
                "%LARGE_PLAYER%": "Riproduttore grande",
                "%SMALL_PLAYER%": "Riproduttore piccolo",
                "%QUALITY%": "Qualità",
                "%OPTIONS%": "Impostazioni",
                "%OPTIONS_LOADING%": "Caricamento in corso...",
                "%AUTO_QUALITY%": "Automatico",
                "%ADVERTISEMENT_TITLE%": "Pubblicità: il tuo video riprenderà tra poco",
                "%ADVERTISEMENT_LINK%": "Visita l'inserzionista",
                "%SKIP_AD%": "Salta pubblicità",
                "%SKIP_TIMER%": "Puoi saltare questo video tra % secondi",
                "%SHARE%": "Condividi",
                "%COPY_EMBED_CODE%": "Copia codice integrato",
                "%COPY_URL_CURRENT_TIME%": "Copia URL del video dal tempo corrente",
                "%COPY_URL%": "Copia URL del video",
                "%ABOUT%": "Informazioni di debug",
                "%AUTOPLAY%": "Riproduzione automatica",
                "%HOTSPOTS%": "Hotspot",
                "%SLOWMOTION%": "Rallentatore",
                "%HOTSPOTS_HOT_NOT%": "Scopri cosa piace e cosa no",
                "%NOT_AVAILABLE%": "Il video in questo momento non è disponibile.",
                "%ERROR_OCCURED%": 'Si è verificato un errore, riprova più tardi oppure <a href="javascript:window.location.reload()">ricarica</a>  la pagina.',
                "%KEY_MUTE_UNMUTE%": "Disattiva audio / Disattiva audio",
                "%KEY_PLAY_PAUSE%": "Riproduci / Pausa",
                "%KEY_FULLSCREEN%": "Attiva / disattiva schermo intero",
                "%KEY_VOLUME%": "Volume su / giù",
                "%KEY_MOTIONRATE%": "Rallentatore acceso / spento",
                "%KEY_SEEK%": "Salta 10 secondi",
                "%KEY_SEEK_START%": "Vai all'inizio del video",
                "%KEY_NUMBER_SEEK%": "Passa dallo 0% al 90% della durata del video",
                "%KEY_SEEK_END%": "Vai alla fine del video",
                "%CLOSE%": "Vicino",
                "%KEYBOARD_HELP%": "Guida della tastiera"
            }, de: {
                "%PLAY%": "Spielen",
                "%PAUSE%": "Pause",
                "%REPLAY%": "Wiederholung",
                "%NEXT%": "Weiter",
                "%MUTE%": "Stumm",
                "%UNMUTE%": "Stummschaltung aufheben",
                "%FULL_SCREEN%": "Vollbild",
                "%EXIT_FULL_SCREEN%": "Vollbildansicht verlassen",
                "%JUMP_TO_ACTION%": "Zum Handeln springen",
                "%CHROMECAST%": "Stream im Fernsehen",
                "%EXIT_CHROMECAST%": "Deaktivieren Sie das Streaming",
                "%LARGE_PLAYER%": "Großer Player",
                "%SMALL_PLAYER%": "Kleiner Player",
                "%QUALITY%": "Qualität",
                "%OPTIONS%": "Einstellungen",
                "%OPTIONS_LOADING%": "Wird geladen...",
                "%AUTO_QUALITY%": "Auto",
                "%ADVERTISEMENT_TITLE%": "Werbung: Dein Video wird gleich fortgesetzt",
                "%ADVERTISEMENT_LINK%": "Besuchen Sie den Werbetreibenden",
                "%SKIP_AD%": "Werbung übergehen",
                "%SKIP_TIMER%": "Du kannst dieses Video in % Sekunden überspringen",
                "%SHARE%": "teilen",
                "%COPY_EMBED_CODE%": "Eingebetteten Code kopieren",
                "%COPY_URL_CURRENT_TIME%": "Video URL von der aktuellen Zeit kopieren",
                "%COPY_URL%": "Video URL kopieren",
                "%ABOUT%": "Debug-Informationen",
                "%AUTOPLAY%": "Autoplay",
                "%HOTSPOTS%": "Hotspots",
                "%SLOWMOTION%": "Zeitlupe",
                "%HOTSPOTS_HOT_NOT%": "Sieh dir an was in ist und was nicht",
                "%NOT_AVAILABLE%": "Video ist derzeit nicht verfügbar.",
                "%ERROR_OCCURED%": 'Ein Fehler ist aufgetreten. Bitte versuche es später oder <a href="javascript:window.location.reload()">lade die</a> Seite erneut.',
                "%KEY_MUTE_UNMUTE%": "Stumm / Stummschaltung aufheben",
                "%KEY_PLAY_PAUSE%": "Spielen / Pause",
                "%KEY_FULLSCREEN%": "Schaltet den Vollbildmodus um",
                "%KEY_VOLUME%": "Lauter / Leiser",
                "%KEY_MOTIONRATE%": "Zeitlupe ein / aus",
                "%KEY_SEEK%": "Springe 10 Sekunden",
                "%KEY_SEEK_START%": "Gehe zum Anfang des Videos",
                "%KEY_NUMBER_SEEK%": "Gehe von 0% auf 90% Länge des Videos",
                "%KEY_SEEK_END%": "Gehe zum Ende des Videos",
                "%CLOSE%": "Schließen",
                "%KEYBOARD_HELP%": "Tastaturhilfe"
            }, es: {
                "%PLAY%": "Reproducir",
                "%PAUSE%": "Pausa",
                "%REPLAY%": "Repetición",
                "%NEXT%": "Siguiente",
                "%MUTE%": "Silencio",
                "%UNMUTE%": "Desactivar Silencio",
                "%FULL_SCREEN%": "Pantalla completa",
                "%EXIT_FULL_SCREEN%": "Salir de pantalla completa",
                "%JUMP_TO_ACTION%": "Saltar a acción",
                "%CHROMECAST%": "Corriente en la TV",
                "%EXIT_CHROMECAST%": "Desactivar transmisión",
                "%LARGE_PLAYER%": "Reproductor grande",
                "%SMALL_PLAYER%": "Reproductor pequeño",
                "%QUALITY%": "Calidad",
                "%OPTIONS%": "Configuración",
                "%OPTIONS_LOADING%": "Cargando...",
                "%AUTO_QUALITY%": "Auto",
                "%ADVERTISEMENT_TITLE%": "Publicidad: su video continuará en unos instantes.",
                "%ADVERTISEMENT_LINK%": "Visita anunciante",
                "%SKIP_AD%": "Saltar publicidad",
                "%SKIP_TIMER%": "Puede saltar este video en % segundos.",
                "%SHARE%": "Compartir",
                "%COPY_EMBED_CODE%": "Copiar código incrustado",
                "%COPY_URL_CURRENT_TIME%": "Copiar la URL del video en el instante actual",
                "%COPY_URL%": "Copiar la URL del video",
                "%ABOUT%": "Información de depuración",
                "%AUTOPLAY%": "Auto-reproducción",
                "%HOTSPOTS%": "Hotspots",
                "%SLOWMOTION%": "Camara lenta",
                "%HOTSPOTS_HOT_NOT%": "Ver que es tendencia y que no lo es",
                "%NOT_AVAILABLE%": "El video no está disponible en estos momentos.",
                "%ERROR_OCCURED%": 'Ocurrió un error, por favor intente de nuevo o <a href="javascript:window.location.reload()">recargue</a> la página.',
                "%KEY_MUTE_UNMUTE%": "Silencio / Desactivar Silencio",
                "%KEY_PLAY_PAUSE%": "Reproducir / Pausa",
                "%KEY_FULLSCREEN%": "Alterna pantalla completa",
                "%KEY_VOLUME%": "Volumen arriba / abajo",
                "%KEY_MOTIONRATE%": "Cámara lenta con./desc.",
                "%KEY_SEEK%": "Salto 10 segundos",
                "%KEY_SEEK_START%": "Ir al comienzo del video",
                "%KEY_NUMBER_SEEK%": "Ir del 0% al 90% de la duración del video",
                "%KEY_SEEK_END%": "Ir al final del video",
                "%CLOSE%": "Cerca",
                "%KEYBOARD_HELP%": "Teclado Ayuda"
            }, cz: {
                "%PLAY%": "Přehrát",
                "%PAUSE%": "Pozastavit",
                "%REPLAY%": "Přehrát",
                "%NEXT%": "Další",
                "%MUTE%": "Ztlumit",
                "%UNMUTE%": "Zesílit",
                "%FULL_SCREEN%": "Celá obrazovka",
                "%EXIT_FULL_SCREEN%": "Vypnout režim celé obrazovky",
                "%JUMP_TO_ACTION%": "Přejít na akci",
                "%CHROMECAST%": "Stream v televizi",
                "%EXIT_CHROMECAST%": "Zakázání streamování",
                "%LARGE_PLAYER%": "Velký přehrávač",
                "%SMALL_PLAYER%": "Malý přehrávač",
                "%QUALITY%": "Kvalita",
                "%OPTIONS%": "Nastavení",
                "%OPTIONS_LOADING%": "Načítání...",
                "%AUTO_QUALITY%": "Auto",
                "%ADVERTISEMENT_TITLE%": "Reklama: Vaše video bude brzy pokračovat",
                "%ADVERTISEMENT_LINK%": "Navštivte inzerenta",
                "%SKIP_AD%": "Přeskočit reklamu",
                "%SKIP_TIMER%": "Můžete přeskočit video za % sekund",
                "%SHARE%": "Sdílet",
                "%COPY_EMBED_CODE%": "Kopírovat embed kód",
                "%COPY_URL_CURRENT_TIME%": "Kopírovat URL videa od aktuálního času",
                "%COPY_URL%": "Kopírovat URL videa",
                "%ABOUT%": "Informace o ladění",
                "%AUTOPLAY%": "Automatické přehrávání",
                "%HOTSPOTS%": "Hotspoty",
                "%SLOWMOTION%": "Zpomalený pohyb",
                "%HOTSPOTS_HOT_NOT%": "Podívejte se, co je žhavé a co ne",
                "%NOT_AVAILABLE%": "Video není momentálně dostupné.",
                "%ERROR_OCCURED%": 'Objevila se chyba, zkuste to prosím později nebo <a href="javascript:window.location.reload()">obnovte</a> stránku.',
                "%KEY_MUTE_UNMUTE%": "Ztlumit / Ztlumit",
                "%KEY_PLAY_PAUSE%": "Přehrát / Pozastavit",
                "%KEY_FULLSCREEN%": "Přepne na celou obrazovku",
                "%KEY_VOLUME%": "Zvýšení / snížení hlasitosti",
                "%KEY_MOTIONRATE%": "Pomalý pohyb zapnuto / vypnuto",
                "%KEY_SEEK%": "Skok 10 sekund",
                "%KEY_SEEK_START%": "Přejděte na začátek videa",
                "%KEY_NUMBER_SEEK%": "Přejít z 0% na 90% délky videa",
                "%KEY_SEEK_END%": "Přejděte na konec videa",
                "%CLOSE%": "Zavřít",
                "%KEYBOARD_HELP%": "Nápověda pro klávesnici"
            }
        };
        let Ft = null;

        class Ut {
            constructor(t = {}, n) {
                return e(Ft) && (this.locales = Ae({}, Nt, t), this.defaultLanguage = "en", this.systemLanguage = (window.navigator.userLanguage || window.navigator.language).substr(0, 2), this.language = n && "auto" !== n ? n : this.systemLanguage, Ft = this, O(Ft)), Ft.localize.bind(Ft)
            }

            static get(t, n) {
                return e(Ft) ? new Ut(t, n) : Ft.localize.bind(Ft)
            }

            localize(e, t) {
                let n = this.language;
                return t && (n = t.substr(0, 2)), l(e.match(/(%\S+%)/g), (t => {
                    let r;
                    this.locales[n] && this.locales[n][t] && (r = this.locales[n][t].replace(new RegExp("(')", "g"), "’")), r || (pe() || D("Missing " + t + ' replacement for "' + n + '" locale'), r = this.locales[this.defaultLanguage][t]), r ? e = e.replace(t, r) : pe() || D("Missing " + t + ' replacement for "' + this.defaultLanguage + '" locale')
                })), e
            }
        }

        const Ht = function (e, t, n, r) {
            const i = Ut.get()("%TIMELINE_INTRO_CHAPTER%"), a = r.mainRoll.chapters, s = r.features.chapters;
            let d, c, p, u, g, m, f, h, _, v, b = r.mainRoll.actionTags, y = !0;

            function A(e, t) {
                return e * t / 100
            }

            function E(e, n, r, i) {
                const a = {title: e, startTime: n, endTime: r, startPos: n / u * 100, endPos: r / u * 100};
                if (a.endPos > 100 && (a.endPos = 100), a.startPos < 0 && (a.startPos = 0), a.startPos > 100) return;
                a.width = a.endPos - a.startPos, a.reachesEnd = 100 === a.endPos;
                const s = ke("span.actionTag[data-tag=" + a.title + "]");
                return s.style.left = a.startPos + "%", s.style.width = a.width + "%", i && (St(s, "chapter"), a.reachesEnd && St(s, "touchesEnd")), t.appendChild(s), m.push(s), o(d[a.title]) ? d[a.title] = [s] : d[a.title].push(s), c[a.startTime] = s, p.push(a), a
            }

            function T() {
                return l(d, (e => {
                    l(e, (e => {
                        xt(e, "hover")
                    }))
                })), !0
            }

            function w() {
                return g && (n.style.display = "none", g = !1), !0
            }

            function S() {
                return !!y && (l(m, (e => {
                    e.style.display = "block"
                })), !0)
            }

            function x() {
                return l(m, (e => {
                    e.style.display = "none"
                })), !0
            }

            function k() {
                return y = !0, S(), !0
            }

            function C() {
                return y = !1, x(), !0
            }

            function L(e) {
                if (!p || !p.length) return !1;
                let t, r, i, a, o = 0, s = !1;
                const c = e.width;
                for (; !s && o < p.length;) t = p[o], i = t.endPos, r = t.startPos, a = A(i, c) - A(r, c), a < 4 && (i = 100 * (A(r, c) + 4) / c), e.percentage >= r && e.percentage <= i && (s = !0), o++;
                var u;
                T(), w(), s && (u = t.title, l(d[u], (e => {
                    St(e, "hover")
                })), function (e) {
                    e !== g && (n.style.display = "block", n.innerHTML = e.title, g = e)
                }(t))
            }

            return function () {
                ({fire: _, subscribe: v} = de.get(e));
                let n = !1;
                v("playback.duration.changed", (e => {
                    n || (u = e.duration, u > 0 && (p && p.length && (l(m, (e => {
                        t.removeChild(e)
                    })), p = [], m = []), function () {
                        d = {}, c = {}, p = [], m = [];
                        let e, t, n = !1;
                        a && a.length && (b = a, n = !0), !a && s && (n = !0), b && b.length && (f = b.split(","), l(f, ((r, a) => {
                            if (h = f[a].split(":"), h.length > 1) {
                                if (e = parseFloat(h[1]), t = h.length > 2 ? parseFloat(h[2]) : e + 1, n) {
                                    0 === a && 0 !== e && E(i, 0, e, n);
                                    const r = f[a + 1];
                                    r ? t = parseFloat(r.split(":")[1]) : (t = u, (t - e) / u > .15 && (t = e + .15 * u))
                                }
                                E(h[0], e, t, n)
                            }
                        })), _("actiontags.created", {tags: p}))
                    }()))
                })), v("adroll.ready", (() => n = !0)), v("adroll.started", (() => {
                    C()
                })), v("adroll.ended", (() => {
                    n = !1, k()
                }))
            }(), {
                show: S, hide: x, hideTitle: w, deselect: T, enable: k, disable: C, update: function (e) {
                    return !!y && (L(e), !0)
                }, getTags: () => p
            }
        };
        const Yt = function (e, t = 0) {
            if (!a(e)) throw new TypeError('utils/throttle: First argument is not of type "function".');
            let n;
            return function (...r) {
                if (n) return;
                e.apply(this, r);
                n = setTimeout((() => {
                    n = void 0
                }), t)
            }
        };
        const Gt = function (e, t, n, r, i) {
            const {is: a} = H.get(), {fire: o, subscribe: s, addClick: d, checkOptionsSupport: c, stopOrPrevent: p} = de.get(n),
                u = "actionTagsScreenVisible", g = r.actionTagsLabel || "Jump to your favorite action",
                m = Ce(t.actionTagsScreen.container), f = {visible: !1, enabled: !1, navEnabled: !1};
            let h, _, b, y, A;

            function E() {
                const e = v(h.childNodes, ((e, t) => {
                    const n = t.currentStyle || window.getComputedStyle(t);
                    return e + (t.clientWidth + parseInt(n.marginLeft.replace("px", ""), 10) + parseInt(n.marginRight.replace("px", ""), 10))
                }), 0);
                !function (e) {
                    (e ? St : xt).call(this, m, "navEnabled")
                }(_.clientWidth - e <= 0)
            }

            function T() {
                const e = ".actionTagsWrapper";
                let t;
                h = Ce(e) || ke(e), h.innerHTML = "", l(A, ((e, n) => {
                    const r = function (e) {
                        const t = new Date(1e3 * e).toISOString().substr(11, 8);
                        return "00" === t.substr(0, 2) ? t.replace("00:", "") : t
                    }(e.startTime);
                    t = ke(`.actionTagPill[data-tag-id="${n}"] span.tagName[html="${e.title}"] + span.tagTime[html="${r}"]`), h.appendChild(t)
                })), m.appendChild(ke("p.tagsOverlayTitle[html=" + g + "]")), m.appendChild(h), a.desktop, b = ke(".actionNav.navLeft"), y = ke(".actionNav.navRight"), _ = ke(".actionNavWrapper"), _.appendChild(h), m.appendChild(b), m.appendChild(_), m.appendChild(y), E(), f.navEnabled = !0
            }

            function w() {
                return Ce(t.videoWrapper.video).currentTime || 0
            }

            function S(e) {
                f.visible = e, o("actiontags.screen.changed", {visible: e, currentTime: w()})
            }

            function x() {
                return !!f.enabled && (St(e, u), i && i.onShowOverlay && i.onShowOverlay(), S(!0), !0)
            }

            function k() {
                return !(!f.enabled || !f.visible) && (i && i.onHideOverlay && i.onHideOverlay(), xt(e, u), setTimeout((() => {
                    h.scrollLeft = 0
                }), 250), S(!1), !0)
            }

            function C(e, t, n) {
                t = t || 100, n = n || 25;
                let r = 0;
                const i = parseInt(Math.round(t / 10), 10), a = setInterval((() => {
                    "left" === e ? h.scrollLeft -= i : h.scrollLeft += i, r += i, r >= t && (window.clearInterval(a), f.scrolling = !1)
                }), n)
            }

            function L(e) {
                e && e.length && (A = e, T(), function () {
                    if (d(document.body, (() => {
                        f.visible && k()
                    })), l(Le(t.actionTagsScreen.pills), (e => {
                        d(e, (e => {
                            const t = function (e) {
                                let t;
                                for (; !t;) t = e.getAttribute("data-tag-id"), e = e.parentElement;
                                return t
                            }(e.target), {startTime: n, title: r} = A[t];
                            o("actiontags.screen.clicked", {
                                startTime: n,
                                title: r,
                                id: parseInt(t, 10),
                                currentTime: w()
                            }), o("playback.seek", {offset: n, playAfter: f.playing}), p(e, !0, !0), k()
                        }), !0, !1)
                    })), f.navEnabled) {
                        window.addEventListener("resize", Yt(E, 500)), d(m, k, !0, !1), d(b, (() => {
                            C("left")
                        }), !0, !0), d(y, (() => {
                            C("right")
                        }), !0, !0);
                        const e = !!c("passive") && {passive: !1};
                        h.addEventListener("wheel", (e => {
                            p(e, !0, !0);
                            const t = e.wheelDeltaY || -e.deltaY;
                            0 !== t && C(t < 0 ? "right" : "left")
                        }), e)
                    }
                }(), f.enabled = !0)
            }

            return s("playback.playing", (() => {
                f.visible && k(), f.playing = !0
            })), s(["playback.paused", "playback.ended"], (() => {
                f.playing = !1
            })), s(["playback.seek.started", "fullscreen.changed"], k), s("actiontags.screen.toggle", (e => {
                "show" === e.action ? x() : k()
            })), s("actiontags.created", (e => {
                L(e.tags)
            })), {hide: k, show: x, isVisible: () => f.visible}
        };
        const Vt = function (e, t, n, r) {
            const {fire: i, subscribe: a, addClick: o} = de.get(e), s = {visible: !1};
            let l, d;

            function c(e) {
                s.visible = "boolean" == typeof e ? e : !s.visible;
                const t = "actionTagsEnabled";
                return s.visible ? St(n, t) : xt(n, t), s.visible
            }

            return r || (a("adroll.ready", (() => {
                d = !0, c(!1)
            })), a("adroll.ended", (() => {
                d = !1, c(!0)
            })), a("playback.duration.changed", (() => {
                d || c(!0)
            })), l = Ce(t.button), o(l, (e => {
                const t = kt(e.target, "icon-menu-exit") ? "hide" : "show";
                i("actiontags.screen.toggle", {action: t})
            }), !0, !0)), {button: l, toggle: c}
        };
        const Kt = function (e, t) {
            const {subscribe: n} = de.get(t), r = [];
            let i, a = [], o = !1, s = !1;
            return n("playback.buffering", (t => {
                const n = t.buffered, l = t.duration;
                o && !s || n.length && !z(l) && function (t, n) {
                    const o = a.slice(), s = [];
                    let l, d, c;
                    for (c = 0; c < t.length; c++) l = {
                        start: 100 * t.start(c) / n,
                        end: 100 * t.end(c) / n
                    }, (o.length <= c || o[c].start !== l.start || o[c].end !== l.end) && (l.update = !0), s.push(l);
                    if (s.length > o.length) d = ke(".buffer"), e.appendChild(d), r.push(d); else if (o.length > s.length) {
                        for (c = 0; c < o.length; c++) if (c >= s.length) try {
                            r[c] && e.removeChild(r[c])
                        } catch (p) {
                            I(p)
                        } else s[c].update = !0;
                        r.splice(s.length)
                    }
                    for (i = s[s.length - 1].end, c = 0; c < s.length; c++) if (l = s[c], l.update && r[c]) {
                        let e = l.end - l.start;
                        l.end > 98.5 && (e = 100 - l.start), r[c].style.left = l.start + "%", r[c].style.width = e + "%"
                    }
                    a = s
                }(n, l)
            })), n("adroll.ready", (() => o = !0)), n("adroll.ended", (() => o = !1)), n("playback.playing", (() => {
                s = !0
            })), {getBuffered: () => ({zone: i, ranges: a, elements: r})}
        };
        const zt = function (e, t, n, r) {
            const i = r.playerId, {subscribe: a} = de.get(r.playerId), o = r.hotspots,
                s = Ce(`#${f}skin_desktop .${f}svg_hotspots`), l = 100;
            let d = null, c = "";
            if (!s || o.data.length <= 2) return;
            const {is: p, browser: u} = H.get(), g = p.ie || p.edge && u.version <= 18;
            o.data.splice(0, 2);
            const m = o.data.length, h = 1e3 / (m - 1), _ = Math.max.apply(null, o.data) / l,
                v = (s.firstChild || s.content.firstChild).cloneNode(!0);
            v.getElementsByTagName("clipPath")[0].setAttribute("id", i + "_hotspotsClip"), v.getElementsByTagName("g")[0].setAttribute("clip-path", "url(#" + i + "_hotspotsClip)"), n.appendChild(v), d = Ce(t.polygon);
            const b = Ce(t.container), y = Ce(t.progress);
            y.setAttribute("fill", o.chartColor), b.style.height = o.chartHeight;
            for (let f = 0; f < m; f++) {
                const e = parseInt(o.data[f], 10);
                c += h * f + "," + (l - Math.floor(e / _)) + " "
            }

            function A() {
                St(b, "visible")
            }

            function E(e) {
                if (!y) return !1;
                const t = e.percentage;
                let n = "translate(" + (-100 + t + "%") + ",0)";
                return y.style.MozTransform = n, y.style.webkitTransform = n, y.style.transform = n, g && (n = "translate(" + (10 * t - 1e3) + ")", y.style.transition = "none", y.setAttribute("transform", n)), !0
            }

            return g && (y.style.transition = "none", y.setAttribute("transform", "translate(-1000)")), c += h * m + ",100 0, 100", d.setAttribute("points", c), a("hotspots.changed", (e => {
                e.hotspots ? A() : xt(b, "visible")
            })), e && A(), E({percentage: 0}), {update: E}
        };
        const jt = function (e, t, n, r, i) {
            const {is: a} = H.get(), {subscribe: o, fire: s, addClick: l} = de.get(n.id), d = n.container,
                c = n.element;
            let p, u, g = !1, m = !1;

            function f() {
                g && a.ios ? _() : h()
            }

            function h() {
                const e = "fullscreenDisabled";
                kt(d, e) && xt(d, e)
            }

            function _() {
                St(d, "fullscreenDisabled")
            }

            function v(e) {
                void 0 === e && (e = !u), e ? St(p, "active") : xt(p, "active"), u = e
            }

            return function () {
                const n = Ut.get();
                p = ke(".fullscreen");
                const r = ke(".btn.maximize.icon.icon-fullscreen"), a = ke(".btn.normal.icon.icon-fullscreen-exit");
                i && (i.initElement(r, n("%FULL_SCREEN%")), i.initElement(a, n("%EXIT_FULL_SCREEN%"))), p.appendChild(r), p.appendChild(a), t ? e.insertBefore(p, t) : e.appendChild(p)
            }(), l(p, (() => {
                const e = {area: "button", pause: !1, fullscreen: !0};
                !m && r && (ze(s, {
                    url: r,
                    medium: "embed",
                    campaign: "embed-fullscreen-html5",
                    time: c.currentTime
                }), e.pause = !0, e.fullscreen = !1), s("fullscreen.toggle", e)
            })), f(), o("fullscreen.changed", (e => {
                v(e.fullscreen)
            })), o("adroll.ready", (() => {
                g = !0, f()
            })), o("adroll.started", (() => {
                m = !0
            })), o("adroll.ended", (() => {
                g = !1, m = !1, f()
            })), o("playback.playing", (() => {
                f()
            })), v(!1), {button: p, disable: _, enable: h}
        };
        const Qt = function (e, t, n, r, i, a) {
            const {addClick: o, fire: s, subscribe: d} = de.get(a), c = e.subSubPage, p = ke(".selector.cc"),
                u = ke(".value"), g = n[r].title, m = n[r].items, f = ke("ul.optionsList.fx_" + r), h = [];
            let _;

            function v(e) {
                l(h, ((t, n) => {
                    t.key === e ? (u.innerHTML = t.innerHTML, St(h[n], "active")) : xt(h[n], "active")
                }))
            }

            return p.innerHTML = g, p.appendChild(u), t.appendChild(p), p.addEventListener("mousedown", (() => {
                St(p, "active")
            })), p.addEventListener("mouseout", (() => {
                xt(p, "active")
            })), o(p, (() => {
                e.showSubSubMenu(g, p, f)
            }), !0, !0), l(m, ((t, n) => {
                _ = ke("li"), _.innerHTML = t, _.key = n, o(_, (() => {
                    v(n), s("cc.style.set", {name: r, val: n}), e.hideSubSubMenu()
                }), !0, !0), h.push(_), f.appendChild(_)
            })), c.appendChild(f), v(i[r]), d("cc.style.changed", (e => {
                i = e.options
            })), {name: r, element: p, items: h}
        };
        const Wt = function (e, t, n, r, i) {
            const a = Ut.get(), {addClick: o, fire: s, subscribe: c} = de.get(i), p = e.button, u = e.qualityList;
            let g, m, h, _, v, b;

            function y(e = m) {
                let t = a("%AUTO_QUALITY%");
                j(e) && (b || (t += ` <span class="${f}auto-details">(${parseInt(e, 10)}p)</span>`)), h && (h.innerHTML = t)
            }

            function A(t) {
                if (d(t)) return;
                m = t;
                const n = "active";
                let r = "";
                return l(Le(e.selectors.qualityListItems), (e => {
                    e.rel === m ? (St(e, n), r = e.innerText) : xt(e, n), function (e = m) {
                        xt(p, ["K4", "K2", "HD"]), e >= 1630 ? St(p, "K4") : e >= 1086 ? St(p, "K2") : e >= 680 && St(p, "HD")
                    }()
                })), r
            }

            function E(e) {
                const {quality: t, auto: r} = e;
                if (!v && j(t) && r) return void (_ = t);
                y(r ? t : "");
                const i = A(r ? h.rel : t);
                "function" == typeof n && n(i)
            }

            u.innerHTML = `<li>${a("%OPTIONS_LOADING%")}<li>`, c(["source.quality.changed", "source.adaptive.quality.changed", "source.deferred"], E), c("source.quality.ready", (t => {
                ({resolutions: g, isAdaptiveNative: b, currentQuality: m} = t), u.innerHTML = "", l(g, (t => {
                    const n = ke("li"), r = !j(t, !1);
                    let i = String(t).replace(/[._]/, "p");
                    -1 === i.indexOf("p") && (i += "p"), r ? (i = a("%AUTO_QUALITY%"), St(n, "adaptive"), h = n) : t >= 1630 ? i += " <b>4K</b>" : t >= 1086 ? i += " <b>2K</b>" : t >= 680 && (i += " <b>HD</b>"), !j(t) && _ ? y(_) : n.innerHTML = i, n.rel = t, u.appendChild(n), o(n, (() => {
                        const t = n.rel;
                        t !== m && (e.hideWithTimer(), s("source.quality.set", {auto: r, quality: t, manual: !0}))
                    }), !0, !0)
                })), "function" == typeof r && r(), s("options.quality.ready"), A(_ || m), v = !0
            })), c("cast.changed", (e => {
                h && (e.active ? St(h, "disabled") : xt(h, "disabled"))
            })), c("source.error", (e => {
                const t = e.nextModel && ["hls", "dash"].indexOf(e.nextModel) > -1;
                e.adaptive && e.fatal && !t && h && h.parentNode && u.removeChild(h)
            }))
        };
        const qt = function (e, t) {
            const {addClick: n} = de.get(t), r = Ut.get(), i = e.switchList, a = e.subPage, o = e.qualityList,
                s = ke(".selector.quality i.icon.icon-gear-clear"), d = ke(".value"), c = r("%QUALITY%");

            function p(e) {
                return e ? e = e.replace("HD", "").replace("2K", "").replace("4K", "") : ""
            }

            return s.innerHTML = s.innerHTML + "<span>" + c + "</span>", s.appendChild(d), i.appendChild(s), s.addEventListener("mousedown", (() => {
                St(s, "active")
            })), s.addEventListener("mouseout", (() => {
                xt(s, "active")
            })), n(s, (() => {
                e.showSubMenu(c, s, o)
            }), !0, !0), a.appendChild(o), l(o.childNodes, (e => {
                kt(e, "active") && (d.innerHTML = p(e.innerText))
            })), {
                element: s, list: [], update: e => {
                    d.innerHTML = p(e)
                }
            }
        };
        const Xt = function (e, t, n, r) {
            const i = Ut.get(), {subscribe: a, fire: o, addClick: s} = de.get(r), l = e.switchList,
                d = ke(".switch.hotspots i.icon.icon-menu-hotspots"), c = ke("div.icon.icon-info[tooltipPosition=top]");
            let p = !1;

            function u(e) {
                p = e, e ? St(d, "enabled") : xt(d, "enabled")
            }

            return d.innerHTML = d.innerHTML + i("%HOTSPOTS%") + "<span>" + i("%OFF%") + " <div>" + i("%ON%") + "</div></span>", l.appendChild(d), d.appendChild(c), n && n.initElement(c, i("%HOTSPOTS_HOT_NOT%")), u(t), s(d, (() => {
                o("hotspots.toggle", {enabled: !p})
            }), !1, !0), d.addEventListener("mouseover", (() => {
                n && n.enableAll()
            })), d.addEventListener("mouseleave", (() => {
                n && n.disableAll()
            })), a("hotspots.changed", (e => {
                u(e.hotspots)
            })), {element: d}
        };
        const Jt = function (e, t, n) {
            const {addClick: r, fire: i, stopOrPrevent: a, subscribe: o} = de.get(n), s = Ut.get(), l = e.switchList,
                d = ke(".switch.autoplay i.icon.icon-menu-autoplay");

            function c(e) {
                e ? St(d, "enabled") : xt(d, "enabled")
            }

            return d.innerHTML = d.innerHTML + s("%AUTOPLAY%") + "<span>" + s("%OFF%") + " <div>" + s("%ON%") + "</div></span>", l.appendChild(d), c(t), r(d, (e => {
                i("autoplay.toggle"), a(e, !0, !0)
            })), o("autoplay.changed", (e => {
                c(e.autoplay)
            })), o("autoplay.promise.changed", (e => {
                !1 === e.autoplay && (d.style.display = "none")
            })), {element: d}
        };
        const $t = function (e, t, n) {
            const {addClick: r, subscribe: i, fire: a} = de.get(n), o = Ut.get(), s = e.switchList, d = e.subPage,
                c = ke(".selector.speed i.icon.icon-menu-speed"), p = ke(".value"), u = ke("ul.optionsList.speed"),
                g = [], m = [{value: .5, title: "0.5"}, {value: 1, title: o("%SPEED_NORMAL%")}, {
                    value: 1.5,
                    title: "1.5"
                }, {value: 2, title: "2.0"}], f = m[1];
            let h, _ = "", v = !1, b = t;
            const y = o("%SPEED%");

            function A(e) {
                v || l(m, ((t, n) => {
                    t.value === e ? (p.innerHTML = t.title, St(g[n], "active")) : xt(g[n], "active")
                }))
            }

            return c.innerHTML += y, c.appendChild(p), s.appendChild(c), c.addEventListener("mousedown", (() => {
                St(c, "active")
            })), c.addEventListener("mouseout", (() => {
                xt(c, "active")
            })), r(c, (() => {
                e.showSubMenu(y, c, u)
            }), !0, !0), l(m, (t => {
                h = ke("li"), h.innerHTML = t.title, r(h, (() => {
                    b !== t.value && (a("playback.speed.set", {
                        playbackRate: t.value,
                        manual: !0
                    }), b = t.value, e.hideWithTimer())
                }), !1, !0), g.push(h), u.appendChild(h)
            })), d.appendChild(u), A(b), i("playback.speed.changed", (e => {
                b = e.playbackRate, A(e.playbackRate)
            })), i("cast.changed", (e => {
                e.active ? (_ || (v = !0, _ = p.innerHTML, p.innerHTML = f.title), St(c, "disabled")) : (v = !1, xt(c, "disabled"), p.innerHTML = _, _ = "")
            })), {element: c, list: g}
        };
        const Zt = function (e, t, n, r) {
            const {addClick: i, subscribe: a, fire: o} = de.get(r), s = Ut.get(), d = e.switchList, c = e.subPage;
            let p = "";
            const u = ke(".selector.cc i.icon.icon-menu-cc"), g = ke(".value"), m = ke("ul.optionsList.cc"),
                f = ke("div.ccOptions"), h = [], _ = K({disabled: {label: s("%CC_OFF%")}}, n);
            let v, b;
            m.appendChild(f);
            const y = s("%SUBTITLES_CC%");

            function A(e) {
                let t = 0;
                xt(u, "enabled"), l(_, ((n, r) => {
                    r === e ? (g.innerHTML = n.label, v = h[t], St(v, "active"), "disabled" !== e && St(u, "enabled")) : xt(h[t], "active"), t++
                }))
            }

            return u.innerHTML += y, u.appendChild(g), d.appendChild(u), u.addEventListener("mousedown", (() => {
                St(u, "active")
            })), u.addEventListener("mouseout", (() => {
                xt(u, "active")
            })), i(u, (() => {
                e.showSubMenu(y, u, m)
            }), !0, !0), l(_, ((t, n) => {
                b = ke("li"), b.innerHTML = t.label, i(b, (t => {
                    t.target !== v && ("disabled" === n ? o("cc.hide") : o("cc.set", {track: n}), e.hideWithTimer())
                }), !1, !0), h.push(b), m.appendChild(b)
            })), c.appendChild(m), a("cc.changed", (e => {
                e.visible ? A(e.lang) : A("disabled")
            })), a("cast.changed", (e => {
                e.active ? (p || (p = g.innerHTML, g.innerHTML = _.disabled.label), St(u, "disabled")) : (xt(u, "disabled"), g.innerHTML = p, p = "")
            })), t.visible ? A(t.lang) : A("disabled"), {element: u, container: f, list: h}
        };
        const en = function (e, t, n) {
            const {subscribe: r} = de.get(n), i = Ut.get(), a = {
                size: {
                    title: i("%SUBTITLES_CC_SIZE%"),
                    items: {.5: "50%", .75: "75%", "1.0": "100%", 1.25: "125%", 1.5: "150%"}
                },
                color: {
                    title: i("%SUBTITLES_CC_COLOR%"),
                    items: {
                        white: i("%COLOR_WHITE%"),
                        black: i("%COLOR_BLACK%"),
                        cyan: i("%COLOR_CYAN%"),
                        magenta: i("%COLOR_MAGENTA%"),
                        yellow: i("%COLOR_YELLOW%")
                    }
                },
                bg: {
                    title: i("%SUBTITLES_CC_BG_OPACITY%"),
                    items: {"0.0": "0%", .25: "25%", .5: "50%", .75: "75%", "1.0": "100%"}
                },
                bg_color: {title: i("%SUBTITLES_CC_BG_COLOR%")}
            };

            function o(t) {
                let n, r;
                return l(a, ((i, a) => {
                    n = t[a], l(i.items, ((t, i) => {
                        r = a + "_" + i.replace(".", "_"), i === n ? St(e, r) : xt(e, r)
                    }))
                })), !0
            }

            return a.bg_color.items = a.color.items, r("cc.style.changed", (e => {
                o(e.options)
            })), o(t), {styles: a, size: a.size, color: a.color, bg: a.bg, bg_color: a.bg_color}
        };
        const tn = function (e, t, n, r, i, a) {
            const o = i.playerId, {fire: s, addClick: d} = de.get(o), c = Ut.get();
            let p, u, g, m, f, h = !1, _ = !1, v = !1;
            const b = i.features, y = ke(".optionsMenu"),
                A = ke(".mainPage .header + .icon.icon-gear-clear + ul.switches + ul.quality.optionsList"),
                E = ke(".subPage .header + .content"), T = ke(".subSubPage .header + .content"),
                w = ke(".clickHandler"), S = ke(".background");
            S.appendChild(A), S.appendChild(E), S.appendChild(T), y.appendChild(w), y.appendChild(S), t.appendChild(y);
            const x = Ce(e.button), k = Ce(e.switchList), C = Ce(e.qualityList),
                L = !!e.mainPageHeader && Ce(e.mainPageHeader), R = Ce(e.subPageHeader), P = Ce(e.subPageContent),
                I = Ce(e.subSubPageHeader), M = Ce(e.subSubPageContent);
            let D, O, B, N;

            function F() {
                return S.style.width = "1000px", S.style.height = "1000px", A.style.width = "auto", A.style.height = "auto", D = A.clientWidth + 1, O = A.clientHeight, A.style.width = D + "px", A.style.height = O + "px", !0
            }

            function U() {
                S.style.width = D + "px", S.style.height = O + "px"
            }

            function H() {
                return !!v && (F(), U(), St(x, "active"), St(y, "visible"), h = !0, "function" == typeof a.onShow && a.onShow(), n && n.disableAll(), s("options.changed", {visible: !0}), !0)
            }

            function Y() {
                return xt(x, "active"), xt(y, "visible"), h = !1, xt(S, "animated"), setTimeout((() => {
                    G()
                }), 200), "function" == typeof a.onHide && a.onHide(), n && n.enableAll(), s("options.changed", {visible: !1}), !0
            }

            function G() {
                if (_) return _ = !1, S.style.width = D + "px", S.style.height = O + "px", xt(y, ["level3", "level2"]), xt(g, "active"), setTimeout((() => {
                    p.style.display = "none", E.style.height = "auto", E.style.width = "auto"
                }), 200), !0
            }

            function V() {
                return S.style.width = E.clientWidth + "px", S.style.height = E.clientHeight + "px", xt(y, "level3"), St(y, "level2"), xt(m, "active"), setTimeout((() => {
                    u.style.display = "none"
                }), 200), !0
            }

            d(x, (() => {
                h ? Y() : H()
            }), !0, !0), d(R, G, !0, !0), d(I, V, !0, !0), d(w, (() => {
                h && Y()
            })), d(document.body, (() => {
                h && Y()
            }));
            const K = {
                element: y,
                switchList: k,
                qualityList: C,
                mainPage: A,
                subPage: P,
                subSubPage: M,
                button: x,
                container: t,
                itemsCounter: 0,
                visible: () => h,
                show: H,
                showSubMenu: function (e, t, n) {
                    return _ = !0, g = t, R.innerHTML = e, n.style.display = "block", p = n, St(S, "animated"), St(t, "active"), setTimeout((() => {
                        S.style.width = E.clientWidth + "px", S.style.height = E.clientHeight + "px", St(y, "level2"), xt(y, "level3")
                    }), 0), !0
                },
                hideSubMenu: G,
                showSubSubMenu: function (e, t, n) {
                    return m = t, I.innerHTML = e, n.style.display = "block", u = n, St(S, "animated"), setTimeout((() => {
                        S.style.width = T.clientWidth + "px", S.style.height = T.clientHeight + "px", St(t, "active"), St(y, "level3"), xt(y, "level2")
                    }), 0), !0
                },
                hideSubSubMenu: V,
                recalc: F,
                hide: Y,
                hideWithTimer: function () {
                    return setTimeout((() => {
                        Y()
                    }), 200), !0
                },
                selectors: e
            };
            return x.parentNode.style.display = "block", L && (L.innerHTML = c("%OPTIONS%")), b.alternativeOptionsMenu && St(A, "alternative"), new Wt(K, r.playback.source, (e => {
                f && f.update(e)
            }), (function () {
                if (v = !0, St(x, "qualities-loaded"), 1 === K.itemsCounter && (b.qualityMenu = !1, L && (L.innerHTML = c("%QUALITY%")), St(y, "optionsMenuSingle")), n && (n.initElement(x, c("%OPTIONS%")), n.hide()), F(), b.qualityMenu || b.qualityAutoWrap) {
                    const e = parseFloat(window.getComputedStyle(y).bottom);
                    (b.qualityMenu || t.clientHeight - e < A.clientHeight) && (f || (f = new qt(K, o), F()))
                }
                k.childNodes.length || (k.style.display = "none"), U()
            }), o), K.itemsCounter++, r.hotspots && r.hotspots.enabled() && (new Xt(K, r.hotspots.get(), n, o), K.itemsCounter++), r.autoplay.available() && !b.autoplaySwitch && (new Jt(K, r.autoplay.get(), o), K.itemsCounter++), r.speed.enabled() && (new $t(K, r.speed.get(), o), K.itemsCounter++), r.cc && r.cc.enabled() && b.ccMenu && (B = new Zt(K, r.cc.get(), r.cc.getTracks(), o), N = new en(Ce(e.ccContainer), r.cc.getOptions(), o), l(["size", "color", "bg", "bg_color"], (e => {
                return t = e, new Qt(K, B.container, N, t, r.cc.getOptions(), o);
                var t
            })), K.itemsCounter++), xt(x, "hidden"), St(t, "optionsMenuVisible"), K
        };
        const nn = function (e, t, n, r) {
            const {addClick: i, fire: a, subscribe: o} = de.get(r.playerId),
                s = ["top", "left", "right", "bottom", "width", "height", "padding", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft"].concat(["font", "fontSize", "fontFamily", "fontWeight", "lineHeight", "textAlign", "color", "background", "backgroundImage"]),
                d = {
                    time: 0,
                    duration: 0,
                    label: "",
                    iframeUrl: "",
                    imageUrl: "",
                    clickUrl: "",
                    clickTrackUrl: [],
                    closeButton: !0,
                    border: !0,
                    hCentered: !1,
                    fontScale: !1
                };
            let c, u, g = [], m = [], f = !1, h = !1, _ = !1, b = n;

            function y(e, t, n) {
                n.fontScale && -1 !== n.fontScale.indexOf("%") && (t.style.fontSize = Math.round(e / 100 * parseFloat(n.fontScale)) + "px")
            }

            function A(e) {
                xt(e, "hidden")
            }

            function E(e) {
                e && St(e, "hidden")
            }

            function T() {
                l(g, (e => {
                    E(e)
                }))
            }

            function w() {
                u > 0 && (l(m, (e => {
                    clearTimeout(e.showTimer), clearTimeout(e.hideTimer)
                })), u = 0)
            }

            function S() {
                w();
                const e = b, t = (new Date).getTime();
                let n = !1;
                u = 0, l(m, ((r, i) => {
                    r.time >= e && (r.showTimer = setTimeout((() => {
                        A(g[i]), r.visible = !0;
                        const a = (new Date).getTime() - t + Math.round(1e3 * e), o = Math.round(a - 1e3 * b);
                        o > 100 && o < 500 ? M("WARN: overlays laggin " + o + "ms") : o >= 500 && (M("WARN: overlays stuck with " + o + "ms diff!, restarting..."), n = !0)
                    }), 1e3 * (r.time - e)), u++), n ? setTimeout((() => {
                        f && S()
                    }), 0) : r.endTime >= e && (r.hideTimer = setTimeout((() => {
                        E(g[i]), r.visible = !1
                    }), 1e3 * (r.endTime - e)))
                }))
            }

            function x() {
                let e;
                l(m, ((t, n) => {
                    e = g[n], t.time <= b && t.endTime > b ? (A(e), t.visible = !0) : (E(e), t.visible = !1)
                }))
            }

            function k(n) {
                w(), l(g, (n => {
                    n.type && "cc" === n.type ? t.removeChild(n) : e.removeChild(n)
                })), g = [], m = [];
                for (let e = 0; e < n.length; e++) {
                    if (!n[e].endTime) {
                        const t = n[e].time + n[e].duration;
                        n[e].endTime = Math.min(t, r.mainRoll.duration - 1)
                    }
                    n[e].time < r.mainRoll.duration && (c = e)
                }
                const o = e.clientHeight || t.clientHeight;
                for (let r = 0; r < n.length && r <= c; r++) {
                    const c = Object.assign({}, d, n[r]);
                    if ("cc" === c.type && !t || "cc" !== c.type && !e) continue;
                    m.push(c);
                    const p = ke(".overlayText.hidden");
                    Object.keys(c).filter((e => s.includes(e))).forEach((e => {
                        p.style[e] = c[e]
                    }));
                    const u = ke(".text");
                    if (Pe(c.imageUrl) ? (u.innerHTML = '<img src="' + c.imageUrl + '">', St(p, "banner")) : Pe(c.iframeUrl) ? (u.innerHTML = '<iframe src="' + c.iframeUrl + '" width="100%" height="100%"></iframe>', St(p, "iframe")) : u.innerHTML = c.label, p.appendChild(u), Pe(c.clickUrl) && (St(p, "link"), i(u, (() => {
                        ze(a, {url: c.clickUrl}), c.clickTrackUrl.length && l(c.clickTrackUrl, (e => Ge(e)))
                    }), !0, !0)), c.hCentered && St(p, "hCentered"), c.vCentered && St(p, "vCentered"), c.border || St(p, "noBorder"), y(o, p, c), c.closeButton) {
                        const e = ke(".closeButton[html=&times;]");
                        i(e, (e => {
                            St(e.target.parentNode.parentNode, "closed")
                        }), !0, !0), u.appendChild(e)
                    }
                    "cc" === c.type ? (t.appendChild(p), p.type = "cc") : e.appendChild(p), g.push(p)
                }
                return t && y(o, t, {fontScale: "5.5%"}), !0
            }

            function C() {
                T(), setTimeout((() => {
                    !function () {
                        let n;
                        const r = e.clientHeight;
                        l(m, ((e, t) => {
                            n = g[t], y(r, n, e)
                        })), t && y(r, t, {fontScale: "5.5%"})
                    }(), x()
                }), 400)
            }

            return function () {
                let e = [], t = [];

                function n(n) {
                    n.overlays && (e = n.overlays), n.cc && (t = n.cc), k(function (e) {
                        const t = e.slice(0);
                        let n;
                        for (let r = 0; r < t.length; r++) for (let e = 0; e < t.length; e++) t[r].time < t[e].time && (n = t[e], t[e] = t[r], t[r] = n);
                        return t
                    }(v([e, t], ((e, t) => e.concat(t)), []))), f && (x(), S())
                }

                o("cc.ready", n), p(r.mainRoll.overlays) && n({overlays: r.mainRoll.overlays}), o("playback.time.changed", (e => {
                    b = e.time, b < 1 && !_ && (h = !1), f || h || !e.playing || (x(), S(), f = !0)
                })), o(["playback.paused", "playback.waiting", "playback.ended", "playback.seek.started"], (function () {
                    f = !1, w()
                })), o("playback.seek.started", (() => {
                    x()
                })), o(["buttons.collapse", "buttons.expand"], (() => {
                    C()
                })), o("fullscreen.changed", (() => {
                    C()
                })), o("adroll.started", (() => {
                    _ = !0, h = !0, w(), T()
                })), o("adroll.ended", (() => {
                    _ = !1, h = !1
                })), o("nextvideo.toggle", (e => {
                    e.visible && (h = !0, f = !1, w(), T())
                })), o("playback.seek.started", (() => {
                    _ || (h = !1)
                }))
            }(), {overlays: m, elements: g, set: k, isDisabled: () => h}
        };
        const rn = function (e, t, n, r, i) {
            let o, s, l, d, c, p = 0;
            const u = ke(".screenshot"), g = document.createElement("canvas"), m = e.seekPreview;

            function f() {
                return xt(u, "hidden"), !0
            }

            function h() {
                return St(u, "hidden"), !0
            }

            function _(e) {
                let t = "";
                return e > 0 && (t = "blur(" + parseInt(e, 10) + "px)"), g.style.filter = t, g.style.mozFilter = t, g.style.webkitFilter = t, !0
            }

            function v() {
                if (!s || c) return !1;
                const e = t.videoWidth / t.videoHeight, n = g.getContext("2d"), r = g.clientWidth || t.clientWidth,
                    i = g.clientHeight || t.clientHeight, a = r / i;
                let o = r, l = i, d = 0, p = 0;
                return g.width = r, g.height = i, a < e ? (l = r / e, p = (i - l) / 2) : (o = i * e, d = (r - o) / 2), n.drawImage(t, d, p, o, l), _(0), f(), !0
            }

            return u.appendChild(g), n.appendChild(u), h(), function () {
                const {is: n} = H.get(), {subscribe: r} = de.get(e.playerId);
                let u = !1, g = !1;
                const f = () => {
                    h(), g = !1, u = !1
                };
                r("playback.playing", (() => {
                    o || s || (s = !0), n.ios || n.macos && n.safari || f()
                })), r(["playback.paused", "playback.ended"], (() => {
                    f()
                })), r("source.quality.changed", (() => {
                    u = !0, v(), g = !0
                })), r("playback.time.changed", (e => {
                    p = e.time || p, t.currentTime >= p && g && f()
                })), r("playback.seek.started", (e => {
                    if (!1 === m.showInBufferedZone && "function" == typeof i) {
                        const t = i();
                        if (t && t.zone > e.to / e.duration * 100) return
                    }
                    u || (v(), g = !0)
                })), r("layout.vertical", (e => {
                    "9x16" === e.text && e.crop && (l = !0)
                })), r(["adroll.init", "adroll.ready", "adroll.ended"], ((e, t, n) => {
                    o = "ready" === n.split(".").pop(), d = e.empty || a(e.get) && e.get("last");
                    const r = 100 === e.startPoint || a(e.get) && 100 === e.get("startPoint");
                    d && r && (c = !0)
                })), r("playback.ended", (() => {
                    !o && d && (c = !0)
                }))
            }(), {
                show: f, hide: h, setBlur: _, take: v, takeFromThumbnails: function (e) {
                    if (!r || !s || c) return !1;
                    const n = r(e);
                    let i, a;
                    if (!n) return !1;
                    i = n.thumbnail, a = n.sheet;
                    let o = a.thumbWidth;
                    const d = a.thumbHeight, p = o / d, h = g.getContext("2d"), v = u.clientWidth, b = u.clientHeight,
                        y = v / b;
                    let A = v, E = b, T = 0, w = 0, S = t.offsetWidth;
                    const x = t.videoWidth / t.videoHeight, k = t.offsetHeight;
                    S / k > x && (S = k * x), g.width = v, g.height = b, y < p ? (E = v / p, w = (b - E) / 2) : (A = S, T = (v - A) / 2);
                    let C = -1 * parseInt(i.cssLeft, 10);
                    const L = -1 * parseInt(i.cssTop, 10);
                    if (l) {
                        C += Math.floor((o - Math.floor(d * x)) / 2) - 1, o = Math.floor(d * x)
                    }
                    return h.drawImage(a.image, C, L, o, d, T, w, A, E), _(m.blur), f(), !0
                }
            }
        };
        const an = function (e, t, n) {
            const {fire: r, subscribe: i, addClick: a} = de.get(n.playerId), o = ke(".watchHD"), s = Ut.get();
            let l = 0;
            return o.innerHTML = s("%WATCH_HD%"), e.appendChild(o), i("playback.time.changed", (e => {
                l = e.time
            })), a(o, (() => {
                r("playback.pause"), r("buttons.watchhd"), ze(r, {
                    url: t,
                    medium: "embed",
                    campaign: "embed-hd-html5",
                    time: l,
                    settings: n
                })
            }), !0, !0), {button: o}
        };

        function on(e) {
            const t = e.getBoundingClientRect(), n = e.clientHeight / 2;
            return (window.innerHeight || document.documentElement.clientHeight) - parseInt(t.top, 10) - n >= 0 && parseInt(t.bottom, 10) >= n
        }

        const sn = function (e, t, n, r) {
            const {is: i, features: a} = H.get(), {addClick: o, subscribe: s, fire: l} = de.get(r);
            let d, c, p, u, g, m, h, _, v = !1, b = !1, y = !1, A = !1, E = !1, T = !1, w = !1;

            function S() {
                v && b && (L(), l("nextvideo.redirected"), ze(l, {url: n.nextUrl, target: "_self"}))
            }

            function x() {
                if (v && !b && !y) {
                    b = !0;
                    let e = 182;
                    h = setInterval((() => {
                        e > 0 ? e-- : (clearInterval(h), S()), m.setAttribute("stroke-dashoffset", e)
                    }), 1e3 * n.timeout / e)
                }
            }

            function k() {
                b && (m.setAttribute("stroke-dashoffset", 182), b = !1, clearInterval(h), h = void 0)
            }

            function C() {
                return !(!v || b || y) && (m.style.animation = "next " + n.timeout + "s linear forwards", St(e, "nextVideoMode"), t.hide(), t.disable(), on(e) && x(), l("nextvideo.toggle", {visible: !0}), !0)
            }

            function L() {
                return !!b && (xt(e, "nextVideoMode"), m.style.animation = "", k(), t.enable(), t.show(), l("nextvideo.toggle", {visible: !1}), !0)
            }

            function R() {
                v = !0, T = !0, C()
            }

            function P() {
                o(u, S, !0, !0), o(g, (() => {
                    L(), v = !1
                }), !0, !0), o(d, void 0, !0, !0), s("buttons.replay", (() => {
                    w = !0
                })), s("playback.ended", (({looped: e}) => {
                    _ || T || A || E || e || R()
                })), s("playback.playing", (() => L)), s("adroll.ready", (() => _ = !0)), s("adroll.ended", (({get: e}) => {
                    _ = !1, 100 === e("startPoint") && E && (E = !1, R())
                })), i.mobile && i.ios && s("fullscreen.changed", (e => {
                    y = e.fullscreen, C()
                })), s("nextvideo.changed", (e => {
                    if (e.action) switch (e.action) {
                        case"disable":
                            A = !0;
                            break;
                        case"enable":
                            A = !1;
                            break;
                        case"hide":
                            L();
                            break;
                        case"show":
                            C();
                            break;
                        case"start":
                            x();
                            break;
                        case"stop":
                            k()
                    }
                })), s("visibility.changed", (e => {
                    e.visible || L()
                })), s("playback.time.changed", (e => {
                    const t = e.time + .25 >= e.duration;
                    w && !t && (T = !1, w = !1)
                })), s("adroll.init", (({postRoll: e}) => E = e)), s("adroll.skipped", (({startPoint: e}) => {
                    100 === e && R()
                })), window.addEventListener("scroll", (() => {
                    v && (on(e) ? h || x() : k())
                }))
            }

            return (i.mobile && n.mobile || (i.tablet || a.iPad) && n.tablet || i.desktop && n.desktop) && "" !== n.nextUrl && "" !== n.title && (function () {
                const t = ke("i.icon.icon-next"), r = ke("div.nextVideoOverlay");
                d = ke("div.nextVideoCnt div.upNext[html=Up Next]"), c = ke("div.nextTitle"), u = ke("a.nextBtn"), g = ke("a.cancel[html=Cancel]"), c.innerHTML = n.title, d.appendChild(c), "" !== n.chanel && (p = ke("div.nextChanel"), p.innerHTML = n.chanel, d.appendChild(p)), u.innerHTML = `<svg class="${f}nextVideoTimeout" viewBox="0 0 60 60"><circle r="29" cx="30" cy="30" stroke-dashoffset="182" stroke-dasharray="182"></circle></svg>`, u.appendChild(t), d.appendChild(u), d.appendChild(g), r.appendChild(d), e.appendChild(r), m = Ce(".nextVideoTimeout circle")
            }(), P()), {show: C, hide: L}
        };
        const ln = function (e, t, n, r, i) {
            const {is: a} = H.get(), {addClick: o, fire: s, subscribe: l, unsubscribe: d} = de.get(i), {getRollProp: c, callTrackingEvent: p} = e,
                u = Ut.get(), g = c("cta") || !1, m = c("titleCta") || !1, f = c("clickableAreas") || {};
            let h, _, v, b, y, A, E = !0, T = 0;

            function w(n) {
                const r = a.macos && a.safari ? "playback.time.changed" : "playback.playing";
                A = {
                    onPlaybackTimeChanged: e => {
                        var t;
                        E && h && (t = e.time, c("skippable") && E && (T = Math.floor(c("skipDelay") - Math.floor(t)), T > 0 ? _.innerHTML = c("skipDelayMessage").replace("%", T).replace("(s)", T > 1 ? "s" : "") : (St(_.parentNode, "skipable"), setTimeout((() => {
                            _.innerHTML = c("skipMessage")
                        }), 50))), function (e, t) {
                            if (E) {
                                const n = Math.floor(e - t);
                                n >= 0 && (v.innerHTML = "Ad - " + Me(n))
                            }
                        }(e.duration, e.time))
                    }, onPlaybackPlaying: () => {
                        E && function () {
                            St(t, "adRollRunning"), e.getMultiMode() && xt(t, "embedded");
                            !function () {
                                if (!h) return;
                                const e = c("pixelTracking");
                                e && !b && (b = ke("img"), b.setAttribute("src", e), St(b, "pixelTracking"), t.appendChild(b))
                            }()
                        }()
                    }, onAdRollReady: () => E = !0, onAdRollStarted: () => h = !0, onAdRollEnded: () => {
                        h = !1, E = !1, xt(t, "adRollReady"), xt(t, "adRollRunning"), e.getMultiMode() && St(t, "embedded"), w("unsub"), y && (t.removeChild(y), y = !1)
                    }
                }, "sub" === n ? (l("playback.time.changed", A.onPlaybackTimeChanged), l(r, A.onPlaybackPlaying, !0), l("adroll.ready", A.onAdRollReady), l("adroll.started", A.onAdRollStarted), l("adroll.ended", A.onAdRollEnded)) : "unsub" === n && (d("playback.time.changed", A.onPlaybackTimeChanged), d(r, A.onPlaybackPlaying), d("adroll.ready", A.onAdRollReady), d("adroll.started", A.onAdRollStarted), d("adroll.ended", A.onAdRollEnded))
            }

            function S(t) {
                e.track("click"), setTimeout((() => {
                    ze(s, {url: t})
                }), 0)
            }

            !function () {
                const e = {
                    adRollTitle: 'span.adRollLink[html="%ADVERTISEMENT_LINK%"]',
                    adRollCTA: {image: null, ctaContainer: ".button + .title + .subtitle"},
                    adRollEventCatcher: null
                };
                a.desktop && K(e, {
                    adRollTimeElapsed: null,
                    adRollTitle: 'div.adRollTitleText[html="%ADVERTISEMENT_TITLE%"] + div.adRollLink[html="%ADVERTISEMENT_LINK%"]'
                }), c("skippable") && (e.adRollSkipButton = {content: null}), y = ke(".adRollContainer"), y.innerHTML = u(Re(e)), t.appendChild(y)
            }(), _ = Ce(n.skipButton), _ && o(_.parentNode, (() => {
                T <= 0 && (e.track("skip"), p("skip"), s("adroll.ui.hide", {get: e.getState}))
            }), !0, !0), St(t, "adRollReady"), g && function (e, n) {
                const i = Ce(n.container), s = Ce(n.image),
                    l = e.expand && ("1" === e.expand || "true" === e.expand.toLowerCase());
                if (e.title) {
                    const t = Ce(n.title);
                    if (t.style.display = "inline-block", t.innerHTML = e.title, e.subtitle) {
                        const t = Ce(n.subtitle);
                        St(i, "twoLines"), t.style.display = "inline-block", t.innerHTML = e.subtitle
                    }
                }
                if (l && a.desktop && St(i, "expand"), e.button) {
                    const t = Ce(n.button);
                    t.style.display = "inline-block", t.innerHTML = e.button
                }
                e.image && (s.style.backgroundImage = "url(" + e.image + ")", St(t, "ctaEnabled"), o(i, (() => {
                    r(!0), S(e.url ? e.url : c("clickUrl")), e.clickTrack && Ke(e.clickTrack)
                }), !0, !0))
            }(g, n.cta), f.video = !0 === f.video || "true" === f.video || "1" === f.video, f.link = !0 === f.link || "true" === f.link || "1" === f.link, function () {
                const e = Ce(n.eventCatcher);
                (function () {
                    const e = Ce(n.link);
                    if (a.mobile || a.tablet) m.mobileText && (e.innerHTML = m.mobileText); else {
                        const t = Ce(n.title);
                        m.pcText && (St(t, "clickable"), e.innerHTML = m.pcText)
                    }
                    f.link ? o(e, (() => {
                        const e = m.link ? m.link : c("clickUrl");
                        r(!0), m.tracking && Ke(m.tracking), S(e)
                    }), !0, !0) : e.parentNode.removeChild(e)
                })(), f.video && St(e, "clickable"), o(e, (() => {
                    E && (r(f.video), f.video && S(c("clickUrl")))
                }), !0, !0)
            }(), v = Ce(n.timeElapsed), w("sub")
        };
        const dn = function (e) {
            const t = e.callbacks || {};
            let n, r, i, a, o, s, d, c, p, u, g, m, f, h, _ = 0, v = 0, b = !1;

            function y() {
                return clearTimeout(c), xt(r, "hidden"), !0
            }

            function A() {
                return !b && (St(r, "hidden"), !0)
            }

            function E(e) {
                return e || (e = 200), clearTimeout(c), c = setTimeout(A, e), !0
            }

            function T() {
                b ? (document.addEventListener("mousemove", w, !0), l(p, (e => {
                    e.style.display = "block"
                }))) : (document.removeEventListener("mousemove", w, !0), l(p, (e => {
                    e.style.display = "none"
                })))
            }

            function w(e) {
                let t;
                t = e.touches && e.touches.length ? e.touches[0].pageX : e.changedTouches && e.changedTouches.length ? e.changedTouches[0].pageX : e.pageX;
                let n = t - (d[o] + window.pageXOffset);
                const r = d[s];
                n > r && (n = r), n < 0 && (n = 0), _ = v, v = function (e, t) {
                    return Math.round(100 * e / t)
                }(n, r), v !== _ && S(!0), f(e, !0, !0)
            }

            function S(e, n) {
                d = i.getBoundingClientRect();
                const o = d[s];
                n && (St(r, "animated"), setTimeout((() => {
                    xt(r, "animated")
                }), 200)), a.style.width = function (e, t) {
                    return Math.round(e * t / 100)
                }(v, o) + "px", t.onUpdate && e && t.onUpdate(v)
            }

            function x(e) {
                return !z(e) && (e > 100 && (e = 100), e < 0 && (e = 0), v = e, S(!1), v)
            }

            const k = e.selectors;
            return n = e.volumeBtn, r = Ce(k.container), i = Ce(k.zone), a = Ce(k.mask), p = Le(k.covers), v = e.startingPosition, o = "left", s = "width", S(!1), function () {
                function a(e) {
                    (0 === e.button || e.touches.length) && (f(e, !1, !0), b = !0, d = i.getBoundingClientRect(), w(e), T(), t.onDragStart && t.onDragStart())
                }

                ({
                    checkOptionsSupport: g,
                    fire: m,
                    stopOrPrevent: f,
                    subscribe: h
                } = de.get(e.playerId)), u = !!g("passive") && {passive: !1};
                let o = !0;

                function s(e) {
                    if (!b) return !1;
                    b = !1, T(), o || E(), t.onDragEnd && t.onDragEnd(e && e.type ? e.type : null), m("volume.slide"), f(e, !1, !0)
                }

                document.addEventListener("mouseup", s, u), i.addEventListener("mousedown", a, u), i.addEventListener("touchstart", a, u), i.addEventListener("touchmove", w, u), i.addEventListener("touchend", s, u), n && r && (n.addEventListener("mouseenter", (() => {
                    y()
                })), n.addEventListener("mouseleave", (() => {
                    E()
                })), r.addEventListener("mouseenter", (() => {
                    clearTimeout(c), o = !0
                })), r.addEventListener("mouseleave", (() => {
                    E(), o = !1
                }))), h("keyboard", (e => {
                    -1 !== e.action.indexOf("volume") && (y(), E(1e3))
                })), h("volume.changed", (e => {
                    x(e.volume), e.muted ? St(r, "muted") : xt(r, "muted")
                }))
            }(), {show: y, hide: A, autoHide: E, setValue: x, getValue: () => v, dragging: () => b}
        };
        const cn = function (e, t, n, r) {
            const {fire: i, addClick: a, subscribe: o} = de.get(t), s = Ce(e.button), d = Ce(e.low), c = Ce(e.full),
                p = Ce(e.mute);
            let u;

            function g() {
                i("volume.toggle", {mute: !0, manual: !0}), n && n.show(p)
            }

            function m(e) {
                const t = ["low", "medium", "full", "mute"];
                -1 !== t.indexOf(e) && (l(t, (e => {
                    xt(s, e + "Volume")
                })), St(s, e + "Volume"), u = e)
            }

            function f() {
                return s.parentNode.style.display = r ? "flex" : "block", !0
            }

            return l([c, d], (e => a(e, g))), a(p, (() => {
                i("volume.toggle", {mute: !1, manual: !0}), n && n.show(c)
            })), o("volume.changed", (e => {
                e.muted ? m("mute") : e.volume < 10 ? m("low") : e.volume < 60 ? m("medium") : m("full")
            })), f(), {
                button: s, state: u, hide: function () {
                    return s.parentNode.style.display = "none", !0
                }, show: f
            }
        };
        const pn = function (e, t) {
            const {is: n} = H.get(), r = Ut.get(), {addClick: i, fire: a} = de.get(t.playerId), o = t.features,
                s = e.keyboardShortcuts, l = Ce(e.contextMenu.shortcuts), d = Ce(s.hideShortcuts),
                c = Ce(s.shortcutInfo), p = Ce(s.container), u = n.macos ? "⌘" : "Ctrl";
            !function () {
                const e = [`<div class="${f}playPauseContainer"><div class="${f}longBtn">Space</div><span>${r("%KEY_PLAY_PAUSE%")}</span></div>`, `<div class="${f}seekContainer"><div class="${f}shortBtn">←</div><div class="${f}shortBtn">→</div><span>${r("%KEY_SEEK%")}</span></div>`, `<div class="${f}seekStartContainer"><div class="${f}shortBtn">${u}</div><div class="${f}shortBtn">←</div><span>${r("%KEY_SEEK_START%")}</span></div>`, `<div class="${f}numberSeekContainer"><div class="${f}shortBtn">0</div><div class="${f}shortBtn">9</div><span>${r("%KEY_NUMBER_SEEK%")}</span></div>`, `<div class="${f}seekEndContainer"><div class="${f}shortBtn">${u}</div><div class="${f}shortBtn">→</div><span>${r("%KEY_SEEK_END%")}</span></div></div>`];
                !n.ie && (o.fullscreen || n.ios && o.iosFullscreen) && e.push(`<div class="${f}fullScreenContainer"><div class="${f}shortBtn">F</div><span>${r("%KEY_FULLSCREEN%")}</span></div>`), o.speed && e.push(`<div class="${f}motionContainer"><div class="${f}shortBtn">S</div><span>${r("%KEY_MOTIONRATE%")}</span></div>`), o.volume && (e.push(`<div class="${f}muteContainer"><div class="${f}shortBtn">M</div><span>${r("%KEY_MUTE_UNMUTE%")}</span></div>`), e.push(`<div class="${f}volumeContainer"><div class="${f}shortBtn">↑</div><div class="${f}shortBtn">↓</div><span>${r("%KEY_VOLUME%")}</span></div>`)), c.innerHTML = e.join(""), i(l, (() => {
                    St(p, "active"), a("buttons.help")
                })), i(d, (() => {
                    xt(p, "active")
                }))
            }()
        }, un = 1500;
        const gn = function (e, t, n, r, i, a, o) {
            const {addClick: s, fire: l, stopOrPrevent: d, subscribe: c} = de.get(n), p = Ce(t.container),
                u = Ce(t.copyUrlVideo), g = Ce(t.copyUrlVideoTime), m = Ce(t.copyEmbed), h = Ce(t.loop),
                _ = Ce(t.about), v = window.document.body, b = r.copy;
            let y = !1, A = 0;

            function E() {
                y = !1, St(p, "hidden")
            }

            return v.addEventListener("contextmenu", (t => {
                let r = t.target;
                if (!r.className.indexOf || -1 !== r.className.indexOf(f)) {
                    for (; !r.className.indexOf || -1 === r.className.indexOf(`${f}container`) && "BODY" !== r.tagName;) r = r.parentNode;
                    return r.getAttribute("id") === n ? function (t) {
                        const n = p.getBoundingClientRect(), r = e.getBoundingClientRect();
                        let i = t.clientX - r.left - un, a = t.clientY - r.top - un;
                        i + n.width - un > r.width && (i -= n.width - 3e3), a + n.height - un > r.height && (a -= n.height - 3e3), p.style.top = a + "px", p.style.left = i + "px", y = !0, xt(p, "hidden")
                    }(t) : E(), d(t, !1, !0), !1
                }
                E()
            })), v.addEventListener("click", (() => {
                y && E()
            })), r.supported ? (i || m.parentNode.removeChild(m), s(u, (() => {
                l("clipboard.copy.url"), b(a)
            })), s(g, (() => {
                l("clipboard.copy.urltime"), b(w(a, A))
            })), i && s(m, (() => {
                l("clipboard.copy.embed"), b(i)
            }))) : function () {
                const e = u.parentNode;
                e.removeChild(u), e.removeChild(g), e.removeChild(m)
            }(), s(h, (() => {
                l("playback.loop")
            })), _ && s(_, (() => {
                "function" == typeof o && o()
            })), c("playback.looped", (e => {
                e.looped ? St(p, "looped") : xt(p, "looped")
            })), c("playback.time.changed", (e => {
                A = e.time
            })), {menu: p, visible: y, loopState: !1, clipboard: r.supported}
        };
        const mn = function (e, t, n, r) {
            const {subscribe: i} = de.get(t), a = e.versionsInfo, s = a.playerVersions, d = Ce(a.container),
                c = Ce(a.copyCloseDiv.hideVersionMenu), p = Ce(a.copyCloseDiv.copyMenu), u = Ce(s.versionInfo),
                g = Ce(s.streamingInfo), m = Ce(s.adRollInfo);
            let f, h, v, b = !1;

            function y() {
                const e = _.libraryName;
                return "none" === e ? De(e) : `${De(e)} (${_.libraryVersion})`
            }

            function A(e) {
                if (!e) return;
                const t = Ce(".streamingMethod");
                let n = "";
                b ? (o(e) || "" === e || (n = ` (${String(e).toUpperCase()})`), t.innerHTML = "Adaptive" + n, St(f, "active")) : (xt(f, "active"), t.innerHTML = "Progressive")
            }

            function E(e) {
                const {quality: t, auto: n} = e, r = Ce(".streamingQuality");
                if (!t || z(t)) return;
                let i = "" + t;
                n && !b && (b = !0), b && (i = j(t) ? t + "p" + (n ? " (Auto)" : " (Forced)") : "Auto"), r.innerHTML = i
            }

            return n.supported ? (r && r.initElement(p, "Copy"), p.addEventListener("click", (() => {
                !function () {
                    const e = u.innerText + "\n" + g.innerText + "\n" + m.innerText;
                    n.copy(e)
                }()
            }))) : p.parentNode.removeChild(p), function () {
                let e;
                c.innerHTML = "&times;", function () {
                    const e = [{
                        html: "Build Info",
                        class: "titleInfo"
                    }, {html: `<strong>Player: </strong>${De(_.playerName)} v.${_.playerVersion}`}, {html: `<strong>Adaptive Library: </strong>${y()}`}, {html: `<strong>Build Number: </strong>${_.buildNumber}`}, {html: `<strong>Minified: </strong>${_.minified}`}];
                    l(e, (e => {
                        const t = document.createElement("div");
                        e.class && St(t, e.class), t.innerHTML = e.html, u.appendChild(t)
                    }))
                }(), t = g, n = {
                    'titleInfo[html="Streaming Info"]': null,
                    'methodDiv[html="<strong>Method:</strong> "] > span.streamingMethod': null,
                    'qualityDiv[html="<strong>Quality:</strong> "] > span.streamingQuality': null,
                    trackDiv: null,
                    adaptiveDetails: {
                        'subTitleInfo[html="Current chunk"]': null,
                        'chunkSizeDiv[html="<strong>Chunk Size:</strong> "] > span.chunkSize': null,
                        'downloadTimeDiv[html="<strong>Download Time:</strong> "] > span.downloadTime': null,
                        'connectionSpeedDiv[html="<strong>Download Speed:</strong> "] > span.downloadSpeed': null
                    }
                }, void (n && (t.innerHTML = Re(n))), void (f = Ce(s.adaptiveInfo)) && (e = Ce(".resetTime"), e.innerHTML = undefined);
                var t, n
            }(), i("source.ready", (e => {
                b = e.adaptive, A(e.format)
            })), i("source.adaptive.fragment.changed", (e => {
                v = e, function (e, t, n) {
                    const r = Ce(".chunkSize"), i = Ce(".downloadSpeed"), a = Ce(".downloadTime");
                    if (A(t), b && !o(n)) {
                        const e = Number(n.size / 1024), t = Number(n.downloadTime);
                        let o;
                        o = n.estimatedBandwidth ? Number(n.estimatedBandwidth / 8 / 1024 / 1024) : Number(e / t / 8);
                        let s = "none";
                        z(e) || (r.innerHTML = e.toFixed(2) + " Kb", s = "block"), Ce(".chunkSizeDiv").style.display = s, s = "none", z(t) || (a.innerHTML = t.toFixed(0) + " ms", s = "block"), Ce(".downloadTimeDiv").style.display = s, s = "none", z(o) || (i.innerHTML = o.toFixed(2) + " Mbps", s = "block"), Ce(".connectionSpeedDiv").style.display = s, n.track ? function (e) {
                            const t = Ce(".trackDiv");
                            let n = "";
                            n += "Codecs : " + e.codecs + "<br>", n += "Bandwidth : " + (e.bandwidth / 1e3 / 1e3).toFixed(2) + " Mbps<br>", n += "Video : " + (e.videoBandwidth / 1e3 / 1e3).toFixed(2) + " Mbps<br>", n += "Audio : " + e.audioBandwidth / 1e3 + " kbps<br>", t.innerHTML = n
                        }(n.track) : Ce(".trackDiv").innerHTML = ""
                    }
                }(e.resolution || e.height, e.format, v)
            })), i("source.adaptive.quality.changed", (e => {
                E(e.quality)
            })), i("source.quality.changed", (e => {
                E(e)
            })), r && r.initElement(c, "Close"), c.addEventListener("click", (() => {
                xt(d, "active"), clearInterval(h)
            })), {
                show: function () {
                    return function () {
                        const e = new Date(NaN), t = new Date, n = Ce(".timeRemaining");
                        let r = 0;
                        if (e > t) {
                            const n = e - t;
                            r = Math.floor(new Date(n).getTime() / 1e3)
                        }
                        n && (n.innerHTML = Me(r), h = setInterval((() => {
                            r >= 0 && (n.innerHTML = Me(r--))
                        }), 1e3))
                    }(), St(d, "active"), !0
                }
            }
        };
        let fn = null;

        function hn() {
            function e() {
                return !!window.clipboardData || !!window.document.queryCommandSupported && window.document.queryCommandSupported("copy")
            }

            return {
                supported: e(), copy: function (t) {
                    if (!e()) return !1;
                    if (window.clipboardData) return window.clipboardData.setData("Text", t), !0;
                    const n = document.createRange();
                    let r;
                    const i = document.createElement("div");
                    i.innerText = t, i.style.position = "absolute", i.style.userSelect = "text", i.style.webkitUserSelect = "text", i.style.mozUserSelect = "text", i.style.top = "-1000px", i.style.left = "-1000px", document.body.appendChild(i), n.selectNodeContents(i);
                    const a = window.getSelection();
                    a.removeAllRanges(), a.addRange(n);
                    try {
                        r = document.execCommand("copy", !1, null)
                    } catch (o) {
                        D("copy to clipboard failed", o), r = !1
                    }
                    return document.body.removeChild(i), r
                }
            }
        }

        function _n() {
            return fn = fn || new hn, fn
        }

        const vn = function (e, t, n, r) {
            const {addClick: i, fire: a, stopOrPrevent: o} = de.get(t.playerId), {embed: s} = H.get(),
                l = t.embeds.redirect.logoUrl;

            function d() {
                return e.style.display = "block", !0
            }

            return e.addEventListener("mousemove", (e => {
                r.onMouseOver && r.onMouseOver(), o(e, !0)
            })), e.addEventListener("mouseout", (() => {
                r.onMouseOut && r.onMouseOut()
            })), i(e, (() => {
                s && Pe(l) ? (a("playback.pause"), ze(a, {
                    url: l,
                    medium: "embed",
                    campaign: "embed-share-html5",
                    time: n.currentTime,
                    settings: t
                })) : a("buttons.share")
            })), d(), {
                enable: d, disable: function () {
                    return e.style.display = "none", !0
                }
            }
        };
        const bn = function (e, t, n) {
            const r = t.mainRoll.title, i = t.embeds, a = Ce(e.container), o = Ce(e.title),
                s = i.enabled, {addClick: l, fire: d, stopOrPrevent: c, subscribe: p} = de.get(t.playerId);
            let u, g;

            function m() {
                return a.style.display = "block", !0
            }

            return u = s && i.utmRedirect.logoUrl ? i.utmRedirect.logoUrl : i.redirect.logoUrl, a.addEventListener("mousemove", (e => {
                n.onMouseOver && n.onMouseOver(), c(e, !0)
            })), a.addEventListener("mouseout", (() => {
                n.onMouseOut && n.onMouseOut()
            })), p("playback.time.changed", (e => {
                g = e.time
            })), r && (o.innerHTML = r, s && Pe(u) && i.utmRedirect.title && (St(o, "isLink"), l(o, (() => {
                d("playback.pause"), ze(d, {
                    url: u,
                    medium: "embed",
                    campaign: "embed-title-html5",
                    time: g,
                    settings: t
                })
            }), !0, !0))), m(), {
                enable: m, disable: function () {
                    return a.style.display = "none", !0
                }
            }
        };
        const yn = function (e, t, n, r) {
            const {is: i} = H.get(), {checkOptionsSupport: o, fire: s, subscribe: l, stopOrPrevent: d} = de.get(e.id),
                c = e.container, p = Ce(n.container), u = Ce(n.bar), g = Ce(n.buffer), m = Ce(n.progress),
                f = Ce(n.handle), h = new Dt({
                    movedBy: 0,
                    enabled: !0,
                    initialized: !1,
                    seeking: !1,
                    adRollReady: !1,
                    videoStarted: !1,
                    playing: !1,
                    moving: !1,
                    dragging: !1,
                    enterSeekBar: !1,
                    leaveSeekBar: !1,
                    deferredSeek: !1
                }, e.id, "SeekBarController");
            let _, v, b, y, A, E, T, w, S, x = 0, k = t;

            function C() {
                return h.set("enabled", !1), j(), !0
            }

            function L(e) {
                if (h.get("mainRollReady") && !h.get("adRollReady")) return h.set("enabled", !0), e && -1 !== e.indexOf("touch") && Q(), !0
            }

            function R(e) {
                if (!t || !e || !v) return {};
                const n = function (e) {
                    let t;
                    return t = e.touches && e.touches.length ? e.touches[0].pageX : e.changedTouches && e.changedTouches.length ? e.changedTouches[0].pageX : e.pageX, t
                }(e), r = v.width;
                let i = n - b;
                i > r && (i = r), i < 0 && (i = 0);
                const a = 100 * i / r;
                return {position: i, width: r, percentage: a, seconds: a * t / 100}
            }

            function P(e, n = !1) {
                if (h.get("dragging") && !n) return;
                const a = 100 * e / t, o = -100 + a + "%",
                    s = i.safari ? "translate(" + o + ",0)" : "translate3d(" + o + ",0,0)";
                m.style.MozTransform = s, m.style.webkitTransform = s, m.style.msTransform = s, m.style.transform = s, f.style.left = a + "%", r.onUpdate && r.onUpdate({
                    seconds: e,
                    percentage: a
                }, h.get("movedBy") > 2 && h.get("dragging"), h.get("seeking"))
            }

            function I() {
                v = u.getBoundingClientRect(), b = v.left + window.pageXOffset, Q(), h.set("enterSeekBar", !0)
            }

            function M(e) {
                h.get("enabled") && (I(), h.set("leaveSeekBar", !1), D(e))
            }

            function D(e, t) {
                h.get("enabled") && (h.get("enterSeekBar") || I(), t || (t = R(e), h.get("dragging") && F(e, t)), h.set("moving", !0), h.increment("movedBy"), r.onMove && r.onMove(t, h.get("seeking")))
            }

            function O(e) {
                if (h.set({enterSeekBar: !1, leaveSeekBar: !0}), h.get("moving")) {
                    if (h.get("dragging")) return !1;
                    h.set({
                        moving: !1,
                        movedBy: 0
                    }), e && -1 !== e.type.indexOf("touch") || j(), r.onMoveEnd && r.onMoveEnd(h.get("seeking"))
                }
            }

            function B(e) {
                if (!t) return;
                const n = e / 100 * t;
                return K(), P(n, !0), W({time: n, rollDuration: t}), !0
            }

            function N(e) {
                h.get("enabled") && t && !h.get("adRollReady") && (0 === e.button || e.touches && e.touches.length) && (h.set({
                    dragging: !0,
                    movedBy: 0
                }), K(), St(c, "seekBarDrag"), h.get("playing") && St(c, "playAfterSeek"), s("seekbar.dragstart"), r.onDragStart && r.onDragStart(h.get("seeking")), d(e, !0, !0), F(e))
            }

            function F(e, n) {
                h.get("dragging") && (n || D(e, n = R(e)), P(n.seconds, !0), W({
                    time: n.seconds,
                    rollDuration: t
                }), d(e, !0, !0))
            }

            function U() {
                xt(c, "seekBarDrag"), h.get("adRollReady") ? B(0) : V()
            }

            function Y(e) {
                if (h.get("dragging")) {
                    h.set({
                        dragging: !1,
                        movedBy: 0
                    }), ("touchend" === e.type || h.get("moving") && h.get("leaveSeekBar")) && O(e);
                    const t = R(e);
                    h.set("dragging", !1), s("seekbar.dragend"), r.onDragEnd && r.onDragEnd(t, h.get("seeking")), U()
                }
            }

            function G(e) {
                window.self !== window.top && Y(e)
            }

            function V() {
                St(u, "animated")
            }

            function K() {
                clearTimeout(E), xt(u, "animated")
            }

            function j() {
                i.tablet || xt(u, "showHandle")
            }

            function Q() {
                i.tablet || (St(u, "showHandle"), clearTimeout(T))
            }

            function W(e) {
                h.get("dragging") && s("seekbar.time.updated", e)
            }

            return l("playback.time.changed", (e => {
                h.get("seeking") || h.get("deferredSeek") || h.get("sourceLoading") || e.time + .5 >= e.duration && h.get("rollsEnded") || h.get("dragging") || (_ = e.time, P(e.time))
            })), l("playback.duration.changed", (() => {
                h.get("dragging") && (h.set("dragging", !1), U())
            })), l("source.quality.changed", (() => {
                h.get("dragging") && (h.set("dragging", !1), U())
            })), l("playback.seek.started", (() => {
                K(), h.get("dragging") && (h.set("dragging", !1), U()), h.set("seeking", !0)
            })), l("playback.seek.ended", (() => {
                h.set("seeking", !1)
            })), l("keyboard", (({action: e, metaKey: n, percentage: a}) => {
                if (!h.get("enabled") || !h.get("videoStarted") || h.get("adRollReady") || kt(c, "loadingRoll")) return !1;
                "jumpForward" === e || "jumpBackward" === e ? (y || (Q(), K(), y = _, h.set("dragging", !0), s("seekbar.dragstart"), r.onDragStart && r.onDragStart(h.get("seeking"))), "jumpForward" === e ? x += n ? t - _ : 5 : x -= n ? _ : 5, A = y + x, A > t && (A = t), A < 0 && (A = 0), P(A, !0), W({
                    time: A,
                    rollDuration: t
                })) : "jumpToPercent" === e ? (Q(), K(), P(t * a / 100)) : "keyboardJump" === e && (y = 0, i.tablet || (clearTimeout(T), T = setTimeout((() => {
                    h.get("dragging") || j()
                }), 1e3)), E = setTimeout(V, 300), x = 0, _ = A, r.onDragEnd && r.onDragEnd({seconds: A}, h.get("seeking")))
            })), l(["adroll.init", "adroll.ready"], (({getState: e, postRoll: t, preRoll: n}) => {
                S = t || S, a(e) || n ? (h.set("adRollReady", !0), C()) : L()
            })), l("adroll.ended", (({get: e}) => {
                h.set("adRollReady", !1), L(), 100 === e("startPoint") ? (h.set("rollsEnded", !0), P(t = k, !0)) : (K(), P(0, !0))
            })), l("adroll.skipped", (({startPoint: e}) => {
                h.set({adRollReady: !1, mainRollReady: !0}), 100 === e && h.set("rollsEnded", !0), L()
            })), l("autoplay.promise.changed", (e => {
                !e.autoplay && _ && (t = k, P(_))
            })), l("playback.playing", (() => {
                h.get("videoStarted") || !h.get("adRollReady") || i.macos && i.safari || P(0, !1), h.set({
                    playing: !0,
                    videoStarted: !0
                }), V(), h.get("adRollReady") && (t = w)
            })), l("playback.paused", (() => {
                h.get("dragging") || h.set("playing", !1)
            })), l("playback.ended", (() => h.set("rollsEnded", !h.get("adRollReady") && !S))), l("source.ready", (({duration: e, time: n}) => {
                h.set("sourceLoading", !1), h.get("adRollReady") ? e && (w = e) : (e && (k = e, t = e), h.set("mainRollReady", !0)), h.set("rollsEnded", !1), L(), function () {
                    if (h.get("initialized")) return;
                    const e = !!o("passive") && {passive: !1};
                    u.addEventListener("mouseenter", M), u.addEventListener("touchstart", M, e), u.addEventListener("mousemove", D), u.addEventListener("mouseleave", O), u.addEventListener("mousedown", N), u.addEventListener("touchstart", N, e), document.addEventListener("mouseup", Y), u.addEventListener("touchend", Y), document.addEventListener("mousemove", F), u.addEventListener("touchmove", F, e), document.addEventListener("mouseleave", G), h.set("initialized", !0)
                }(), n && (_ = n, P(n))
            })), l("source.loading", (() => h.set("sourceLoading", !0))), l("playback.seek.deferred", (e => {
                h.set("deferredSeek", e.state);
                const {offset: t} = e;
                t && (_ = t, P(t))
            })), l("seekbar.time.update", (({time: e}) => {
                const n = parseFloat(e);
                e && !z(n) && B(n / t * 100)
            })), {disable: C, enable: L, container: p, buffered: g, move: B, bar: u}
        };
        const An = function (e, t, n, r, i) {
            const {addClick: a, subscribe: o, fire: s} = de.get(n), l = Ut.get(),
                d = ke(".cc .btn[html=" + l("%CC%") + "]");
            i ? t.insertBefore(d, i) : t.appendChild(d);
            const c = r ? l("%SUBTITLES_CC%") : "";

            function p() {
                r && r.setText(d, l("%HIDE_CC%")), St(d, "enabled")
            }

            return r && r.initElement(d, c), e && p(), a(d, (() => {
                s("cc.toggle"), r && r.show(d)
            }), !1, !0), o("cc.changed", (t => {
                e = t.visible, t.visible ? p() : (r && r.setText(d, c), xt(d, "enabled"))
            })), {button: d}
        };
        const En = function (e, t, n) {
            let r = !1, i = !0;
            const {subscribe: a, addClick: o} = de.get(n), s = t.chromecast, l = Ce(s.container),
                d = Ce(s.overlay.container), c = Ce(s.overlay.text), p = Ce(s.overlay.logo),
                u = Ce(t.options.container || t.container), g = "googlecastEnabled";
            if (l.innerHTML = '<button class="' + f + 'chromecastBtn" is="google-cast-button"></button>', p && (p.innerHTML = '<button is="google-cast-button"></button>'), !window.chrome) return v(), m(), !1;

            function m() {
                return i = !1, !0
            }

            function h() {
                return i = !0, !0
            }

            function _() {
                i && (l.style.display = "block", St(u, g))
            }

            function v() {
                l.style.display = "none", xt(u, g), b()
            }

            function b() {
                xt(d, "visible")
            }

            function y(e, t) {
                St(d, "visible");
                let n = e.toLowerCase();
                n = n.charAt(0).toUpperCase() + n.slice(1), c.innerHTML = n + " on <b>" + t + "</b>"
            }

            return o(l, void 0, !0), a("adroll.ready", (() => {
                m(), v()
            })), a("adroll.ended", (() => {
                h(), r && _()
            })), a("cast.available", (e => {
                r = e.available, e.available && i ? _() : v()
            })), a("cast.changed", (t => {
                t.active ? (St(l, "active"), St(e, "casting"), t.castState && t.castName && y(t.castState, t.castName)) : (xt(e, "casting"), b()), t.hasError && v()
            })), {enable: h, disable: m}
        };
        const Tn = function (e, t, n, r) {
            const {browser: i} = H.get(), {fire: a, subscribe: o, addClick: s} = de.get(r), l = Ce(n.airplay.button),
                d = Ce(n.options.container || n.container), c = "airplayEnabled";
            let p = !1;
            const u = new Dt({click: !1, available: !1, state: "", wasPlaying: !1}, r, "AirplayButton");
            let g = !1, m = !1;

            function f(e) {
                e ? St(t, "airplay") : xt(t, "airplay")
            }

            function h() {
                p && (l.style.display = "block", St(d, c))
            }

            function _() {
                l.style.display = "none", xt(d, c)
            }

            return !window.WebKitPlaybackTargetAvailabilityEvent || i.version < 10 ? _() : p = !0, o("adroll.ready", (() => g = !0)), o("adroll.ended", (() => g = !1)), o("playback.playing", (() => {
                m = !0
            })), e.addEventListener("webkitplaybacktargetavailabilitychanged", (e => {
                const t = e.availability;
                "available" === t ? (u.set("available", !0), g || !m ? _() : h(), u.set("state", t)) : _(), a("airplay.changed", {state: u.get("state")}), f(!1)
            })), o("playback.playing", (() => {
                u.get("available") && h()
            })), e.addEventListener("webkitcurrentplaybacktargetiswirelesschanged", (function () {
                const t = !!e.webkitCurrentPlaybackTargetIsWireless;
                t ? (St(l, "streaming"), u.set("state", "streaming"), u.get("wasPlaying") && e.play()) : (xt(l, "streaming"), u.set("state", "not streaming")), a("airplay.changed", {
                    state: u.get("state"),
                    click: u.get("click")
                }), u.set("click", !1), f(t), u.set("wasPlaying", !1)
            })), s(l, (() => {
                u.set("wasPlaying", !e.paused), e.webkitShowPlaybackTargetPicker(), u.set("click", !0)
            }), !0, !0), {state: u}
        };
        const wn = function (e, t, n) {
            const {addClick: r, fire: i, subscribe: a} = de.get(t.playerId), o = Ce(e), {embeds: s, theme: l} = t;
            if (!(l.customLogo || l.themeCode && "player" !== l.themeCode)) return;
            const d = Ce(`#${f}skin_desktop .${f}logo_${l.themeCode}`), c = s.enabled, p = s.redirect.logoUrl,
                u = e => ze.apply(this, [i].concat(e));
            let g, m = 0;
            n || (n = "html5"), l.customLogo ? g = l.customLogo : d ? o.innerHTML = d.innerHTML : g = x.path + "assets/" + l.themeCode + ".svg", g && (o.innerHTML = `<img class="${f}${l.themeCode}" src="${g}">`), o.style.display = "block", Pe(p) && (St(o, "isLink"), r(o, (() => {
                i("playback.pause");
                u({url: p, medium: "embed", campaign: c ? "embed-logo-" + n : void 0, time: m, settings: t})
            }), !0, !1)), a("playback.time.changed", (e => {
                m = e.time
            }))
        };
        const Sn = function (e, t, n, r) {
            const {addClick: i, fire: a, stopOrPrevent: o, subscribe: s} = de.get(n), l = Ut.get();
            let d, c, p;

            function u(e) {
                a("autoplay.toggle"), o(e, !0, !0)
            }

            function g() {
                d.style.display = "block"
            }

            function m() {
                d.style.display = "none"
            }

            function f(e) {
                if (c = e, e ? St(d, "active") : xt(d, "active"), r) {
                    const e = `${l("%AUTOPLAY%")} ${l(c ? "%ON%" : "%OFF%")}`;
                    r[p ? "setText" : "initElement"](d, e), p = !0
                }
            }

            s("autoplay.changed", (e => {
                f(e.autoplay)
            })), s("adroll.started", m), s("adroll.ended", g), s("autoplay.promise.changed", ((e = {}) => {
                !1 === e.autoplay && m()
            })), d = Ce(e.autoplay.button), g(), f(t), i(d, u)
        };
        const xn = function (e, t, n, r, i) {
            let a;
            const {is: o} = H.get(), {addClick: s, fire: l, subscribe: d} = de.get(i), c = Ut.get(), p = new Dt({
                videoEnabled: function () {
                    const e = r.video;
                    if (!e) return !1;
                    return a = e.split("?")[0].split(".").pop(), ["webm"].indexOf(a) > -1 && Mt(a)
                }(), tooltipRendered: !1
            }, i, "NextVideoButton");
            "string" == typeof r.isHD && (r.isHD = "1" === r.isHD || "true" === r.isHD);
            const u = ke(".nextVideo .btn.icon.icon-next"), g = ke(".nextVideoTooltip.hidden"),
                m = {thumb: E(), text: ".next[html=" + c("%NEXT%").toUpperCase() + "] + .title[html=%TITLE%]"};
            let h = !0, _ = !0;

            function v() {
                if (h) return xt(g, "hidden"), w(!0), !0
            }

            function b() {
                u.style.display = "block"
            }

            function y() {
                return St(g, "hidden"), w(!1), !0
            }

            function A() {
                u.style.display = "none"
            }

            function E(e) {
                const t = {
                    video: 'video[loop="true"][muted="true"][preload="none"] source[type="%TYPE%"]',
                    preloadLine: null
                };
                return p.get("videoEnabled") && !e ? (t.video = t.video.replace("%TYPE%", "video/" + a), {nextVideoWrapper: t}) : null
            }

            function T(e) {
                let t = Re(e);
                return t = t.replace("%TITLE%", r.title), t
            }

            function w(e) {
                const t = S("video");
                if (!p.get("videoEnabled") || !t) return !1;
                if (!p.get("tooltipRendered")) {
                    const e = t.querySelector("source");
                    (o.ie || o.edge ? t : e).addEventListener("error", x), t.addEventListener("loadeddata", (() => {
                        St(g, "videoLoaded")
                    })), t.querySelector("source").setAttribute("src", r.video), t.load(), p.set("tooltipRendered", !0)
                }
                e ? t.play().catch((() => {
                })) : (t.pause(), t.currentTime = 0)
            }

            function S(e) {
                return e ? (e = e.replace(".", "." + f), g.querySelector(e)) : null
            }

            function x() {
                I("There was an error playing the next video webm.\n");
                const e = T({thumb: E(!0)});
                g.querySelector([".", f, "thumb"].join("")).innerHTML = e
            }

            return (o.tablet || r.thumb && r.title) && r.nextUrl ? (g.innerHTML = T(m), e.appendChild(g), r.thumb && (p.get("videoEnabled") ? S("video").setAttribute("poster", r.thumb) : S(".thumb").style.backgroundImage = 'url("' + r.thumb + '")'), t.insertBefore(u, n), s(u, (() => {
                l("buttons.nextvideo");
                const e = r.nextUrl;
                Pe(e) && ze(l, {url: e, target: "_self"})
            }), !0, !0), u.addEventListener("mouseenter", v), u.addEventListener("mouseleave", y), d("adroll.ready", A), d("adroll.ended", b)) : (h = !1, _ = !1), {
                available: _,
                show: v,
                hide: y,
                disable: function () {
                    return y(), h = !1, !0
                },
                enable: function () {
                    return h = !0, !0
                }
            }
        };
        const kn = function (e, t) {
            const {addClick: n, fire: r} = de.get(t);
            let i, a = !1;

            function o() {
                a ? (r("buttons.collapse"), xt(i, "active")) : (r("buttons.expand"), St(i, "active")), a = !a
            }

            function s() {
                return i.style.display = "block", !0
            }

            return i = Ce(e.button), i.style.display = "block", n(i, o), s(), {
                enable: s, disable: function () {
                    return i.style.display = "none", !0
                }, get: function () {
                    return a
                }
            }
        };
        const Cn = function (e, t, n, r, i, a, o, s) {
            const {is: l, os: d, embed: c, features: p} = H.get(),
                u = n.playerId, {stopOrPrevent: g, subscribe: m} = de.get(u), f = n.features, h = f.hideControlsTimeout,
                _ = new Dt({
                    visible: !1,
                    enabled: !0,
                    adRollActive: !1,
                    casting: !1
                }, n.playerId, "ControlBarController");
            let v, b;
            const y = Ce(t.container), A = Ce(t.time.container);

            function E() {
                if (!_.get("casting")) return _.get("enabled") || (_.set("enabled", !0), w(), b && b.enable()), !0
            }

            function T() {
                return _.get("enabled") && (_.set("enabled", !1), S(), b && b.disable()), !0
            }

            function w() {
                _.get("enabled") && (S(), v = setTimeout(x, 1e3 * h))
            }

            function S() {
                v && clearTimeout(v)
            }

            function x() {
                if (_.get("enabled") && _.get("visible")) return xt(e, "showControls"), St(e, "hideControls"), _.set("visible", !1), a.onHide && a.onHide(), i && i.disableAll(), !0
            }

            function k(t) {
                if (_.get("enabled") && (w(), !_.get("visible"))) return xt(e, "hideControls"), St(e, "showControls"), _.set("visible", !0), a.onShow && setTimeout((() => {
                    i && i.enableAll(), a.onShow(t && t.type ? t.type : null)
                }), 200), !0
            }

            let C;
            return m("playback.playing", (() => {
                l.tablet && x()
            })), m("playback.paused", (() => {
                l.tablet && _.get("adRollActive") && (k(), S())
            })), m("adroll.started", (() => {
                _.set("adRollActive", !0)
            })), m("adroll.ended", (() => {
                _.set("adRollActive", !1)
            })), m(["airplay.changed", "cast.changed"], (e => {
                e.active || "streaming" === e.state ? (_.set("casting", !0), k(), T()) : (_.set("casting", !1), E())
            })), m("keyboard", k), m("playback.ended", k), y.addEventListener("mousemove", (e => {
                S(), g(e, !0, !0)
            })), y.addEventListener("mouseout", w), y.addEventListener("touchend", (e => {
                g(e, !0, !0)
            })), e.addEventListener("mousemove", (e => {
                (function (e) {
                    return !(!C || C.x !== e.pageX || C.y !== e.pageY) || (C = {x: e.pageX, y: e.pageY}, !1)
                })(e) || p.touchCapable || k(e)
            })), x(), c || (f.nextVideo && (b = new xn(e, y, A, n.nextVideo, u)), f.chromecast && !n.isVr && new En(e, t, u)), f.logo && new wn(t.logo, n), f.cinema && !c && new kn(t.cinema, u), c || ((l.macos || l.ios && d.version >= 10) && new Tn(r, e, t, u), o.enabled && new An(o.visible, y, u, i, Ce(t.chromecast.container)), s.available && f.autoplay && f.autoplaySwitch && new Sn(t, s.state, u, i)), {
                show: k,
                hide: x,
                toggle: function (e) {
                    return _.get("visible") ? x() : k(e), !0
                },
                disable: T,
                enable: E,
                visible: () => _.get("visible"),
                bar: y
            }
        };
        const Ln = function (e, t = 0) {
            if (!a(e)) throw new TypeError('utils/debounce: First argument is not of type "function".');
            let n;
            return (...r) => {
                clearTimeout(n), n = setTimeout((() => {
                    e.apply(this, r)
                }), t)
            }
        };
        const Rn = function (e, t, n) {
            const r = [], i = Ce(t.container), a = Ce(t.title), o = Ce(t.arrow);
            let s, l = !1, d = 0;
            for (; d < n.length; d++) c(n[d]);

            function c(e, t) {
                if (t || (t = e.getAttribute("title"), e.removeAttribute("title")), t) return p(e, t), function (e) {
                    if (e.bindedEvents) return;
                    e.addEventListener("touchend", (() => {
                        setTimeout((() => {
                            try {
                                e.dispatchEvent(new Event("mouseleave"))
                            } catch (t) {
                                I("Tooltip Controller error:\n", t)
                            }
                        }), 500)
                    })), e.addEventListener("mouseenter", (function () {
                        u(this)
                    })), e.addEventListener("mousemove", (function () {
                        u(this)
                    })), e.addEventListener("mouseleave", g), e.addEventListener("click", g), e.bindedEvents = !0, r.push(e)
                }(e), !0
            }

            function p(e, t) {
                return e.tooltipText = t, s = !1, !0
            }

            function u(t) {
                if (t.tooltipDisabled || l) return;
                if (s == t) return;
                a.innerHTML = t.tooltipText;
                const n = t.getBoundingClientRect(), r = e.getBoundingClientRect(), d = n.left - r.left + n.width / 2,
                    c = n.top - r.top, p = i.offsetWidth, u = c - (i.offsetHeight + o.offsetHeight - 4);
                let g, m = d - p / 2;
                return m - 5 < 0 ? (m = 5, g = d - 5) : m + p - r.width - 5 > 0 ? (m = r.width - 5 - p, g = d - m) : g = p / 2, o.style.transform = "translate3d(" + g + "px,0,0)", i.style.transform = "translate3d(" + m + "px," + u + "px,0)", xt(i, "hidden"), s = t, !0
            }

            function g() {
                return St(i, "hidden"), s = !1, !0
            }

            function m(e) {
                return e.tooltipDisabled = !1, !0
            }

            function f(e) {
                return e.tooltipDisabled = !0, g(), !0
            }

            return {
                elements: r,
                initElement: c,
                setText: p,
                show: u,
                hide: g,
                enable: m,
                disable: f,
                disabled: l,
                delay: function (e, t) {
                    return f(e), Ln((() => {
                        m(e)
                    }), t)(), !0
                },
                enableAll: function () {
                    return i.style.visibility = "visible", l = !1, !0
                },
                disableAll: function () {
                    return i.style.visibility = "hidden", l = !0, !0
                }
            }
        };
        const Pn = function (e, t) {
            const {fire: n, addClick: r, subscribe: i} = de.get(t), a = Ce(e.play), o = Ce(e.replay), s = Ce(e.pause),
                l = Ce(e.bigPlay);
            let d = !1;

            function c() {
                return !!d && (St(l, "animate"), setTimeout((() => {
                    xt(l, "animate")
                }), 500), !0)
            }

            return r(a, (() => {
                M("PlaybackControls play"), n("playback.play"), n("buttons.play")
            }), !0, !0), r(o, (() => {
                n("playback.seek", {offset: 0, playAfter: !0}), n("buttons.replay")
            }), !0, !0), r(s, (() => {
                n("playback.pause", {isManual: !0}), n("buttons.pause")
            }), !0, !0), r(l, (() => {
                M("PlaybackControls big play"), n("playback.toggle", {isManual: !0}), n("buttons.bigplay")
            }), !0, !0), i("keyboard", (e => {
                "playPause" === e.action && c()
            })), i("playback.playing", (() => {
                d = !0
            })), {animate: c}
        };

        function In(e) {
            let t, n, r, i, a, o, s, l, d, c, p, u, g, m, f, h, _, v, b, y, A, E, T, w = !1, S = !1;
            return {
                init: function (x, k) {
                    a = x, o = a.settings, l = o.playerId;
                    const C = o.features, L = o.embeds, R = L.enabled, P = L.redirect.logoUrl, I = e.controls,
                        M = k.autoplay.get();
                    ({is: t, features: n} = H.get()), ({
                        fire: i,
                        subscribe: r
                    } = de.get(l)), d = (...e) => ze.apply(this, [i].concat(e)), s = a.container;
                    const D = k.playback;
                    !function (t) {
                        r("adroll.ready", (n => {
                            new ln(n, s, e.adRoll, (() => {
                                t.toggle(), setTimeout((() => {
                                    c.animate()
                                }), 50)
                            }), o.playerId)
                        })), r("playback.playing", (() => {
                            w = !0
                        })), r("cast.changed", (e => {
                            S = e.active
                        })), o.autoPause.desktop && r("visibility.changed", (e => {
                            e.visible || w || S || t.pause(!0)
                        }))
                    }(D);
                    const O = Ce(e.eventCatcher);
                    let B;
                    if (new Lt(a.element, o, M), o.isVr ? B = k.vr.canvas : (B = O, B.style.display = "block"), p = new _t(B, {
                        onClick(e) {
                            if (R && L.redirect.videoArea) return D.pause(), void (L.utmRedirect.videoArea ? d({
                                url: P,
                                medium: "embed",
                                campaign: "embed-html5",
                                time: D.getTime(),
                                settings: o
                            }) : d({url: P}));
                            e && -1 !== e.type.indexOf("touch") ? m.toggle(e) : (D.toggle({preventPauseRoll: !1}), c.animate())
                        }, onDoubleClick: () => {
                            i("fullscreen.toggle", {area: "area"})
                        }
                    }, l), R || o.isVr || p.enableDouble(), new Ct(s, l), c = new Pn(I, l), a.element) {
                        new ht(a.container, a.id, k.speed.enabled(), o, e);
                        const r = new Rt(I.time, l, o.mainRoll.duration);
                        C.grid && (u = new Ot(o, s, e.gridMenu, {
                            open: e => {
                                d({url: e, medium: R ? "embed" : void 0, campaign: R ? "embed-related-html5" : void 0})
                            },
                            openEmbed: () => !R || !L.redirect.videoArea || (L.utmRedirect.videoArea ? d({
                                url: P,
                                medium: "embed",
                                campaign: "embed-html5",
                                time: D.getTime()
                            }) : d({url: P}), !1)
                        })), n.touchCapable && C.grid && new vt(l), C.tooltips && (g = new Rn(s, e.tooltip, Le("#" + a.id + " [title]")));
                        let c = {enabled: !1, visible: !1};
                        k.cc && (c = {
                            enabled: k.cc.enabled(),
                            visible: k.cc.visible()
                        }), m = new Cn(s, I, o, a.element, g || !1, {
                            onShow(e) {
                                f.enable(e), h.enable(), e && -1 !== e.indexOf("touch") && _ && (t.macos || _.show())
                            }, onHide() {
                                f.disable(), h.disable(), _ && _.autoHide(200), g && g.hide(), b && b.hide()
                            }
                        }, c, {available: k.autoplay.available(), state: M});
                        let w = !1;
                        f = new yn({container: s, id: l}, o.mainRoll.duration, I.seekBar, {
                            onMove(e) {
                                v && v.update(e), h.update(e), y && !y.visible() && m.disable()
                            }, onMoveEnd() {
                                h.hide(), v && v.deselect(), y && !y.visible() && m.enable()
                            }, onDragStart(e) {
                                u && u.disable(), e || (w = D.isPlaying()), o.isVr || p.disable(), m.disable()
                            }, onUpdate(e, t, n) {
                                A && A.update(e), t && D.isPlaying() && (n || (w = D.isPlaying()))
                            }, onDragEnd(e) {
                                D.seek(e.seconds, w), o.isVr || p.enable(), o.isVr || p.enable(), m.enable(), u && u.enable()
                            }
                        }), h = new Bt(f.container, l, e, k.thumbnails.get, R), E = new Kt(f.buffered, l);
                        const S = k.hotspots;
                        if (S.enabled() && (A = new zt(S.get(), e.hotspots, f.bar, o)), C.topBar && new bn(e.topBar, o, {
                            onMouseOver: () => {
                                m.disable()
                            }, onMouseOut: () => {
                                m.enable()
                            }
                        }), C.share && new vn(Ce(e.share), o, a.element, {
                            onMouseOver: () => {
                                m.disable()
                            }, onMouseOut: () => {
                                m.enable()
                            }
                        }), C.mute) {
                            const e = k.volume;
                            T = new cn(I.volume, l, g), C.volume && e && (_ = new dn({
                                volumeBtn: T.button,
                                selectors: I.volume.slider,
                                startingPosition: e.get(),
                                callbacks: {
                                    onDragStart: () => {
                                        f.disable(), m.disable(), p.disable()
                                    }, onDragEnd: e => {
                                        f.enable(e), m.enable(), p.enable()
                                    }, onUpdate: e => {
                                        i("volume.set", {volume: e, manual: !0})
                                    }
                                },
                                playerId: l
                            }))
                        }
                        if (C.fullscreen) {
                            let e, t = !1;
                            R && L.redirect.onFullscreen && (t = P), e = T ? T.button.parentNode : r.container, new jt(m.bar, e, {
                                container: a.container,
                                element: a.element,
                                id: l
                            }, t, g || !1)
                        }
                        C.options && !R && (y = new tn(I.options, s, g || !1, k, o, {
                            onShow: () => {
                                h.disable(), m.disable()
                            }, onHide: () => {
                                h.enable(), m.enable()
                            }
                        })), o.mainRoll.actionTags && (new Vt(o.playerId, e.controls.actionTags, Ce(e.controls.container), o.embeds.enabled), v = new Ht(l, f.buffered, Ce(e.thumbnails.actionTagTitle), o), R || (b = new Gt(a.container, e, l, o, {
                            onShowOverlay: () => {
                                y && y.hide(), m.disable()
                            }, onHideOverlay: () => {
                                m.enable()
                            }
                        })));
                        const x = new _n, B = new mn(e, l, x, g || !1);
                        new gn(s, e.contextMenu, l, x, C.embedCode, o.mainRoll.videoUrl, B.show), new nn(O, Ce(I.options.ccContainer), D.getTime(), o), o.seekPreview.enabled && !o.isVr && k.thumbnails && new rn(o, a.element, a.wrapper, k.thumbnails.get, E.getBuffered || !1), R && L.watchHD && new an(s, P, o), R || new sn(s, m, o.nextVideo, l)
                    }
                    new pn(e, o)
                }
            }
        }

        const Mn = function e(n, i = !0) {
            if (!t(n)) return void I("Helpers/cloneDeep: First argument should be an object");
            const a = v(n, ((a, o, s) => {
                if (t(o)) r(a) ? a.add(e(o)) : a[s] = e(o); else if (r(a)) a.add(o); else {
                    const e = i ? Object.getOwnPropertyDescriptor(n, s) : {value: o};
                    Object.defineProperty(a, s, e)
                }
                return a
            }), be(n));
            return fe(n, a), a
        };
        const Dn = function (e) {
            return t(e) ? r(e) ? new Set(e) : s(e) ? Object.assign([], e) : Object.assign({}, e) : e
        }, On = function (e, n, r, i, {startPoint: a}) {
            const {fire: s} = de.get(i), d = {status: "empty", error: 0, version: 0}, c = {rolls: []};

            function u(e) {
                l(e, ((n, r) => {
                    t(n) ? u(n) : Ie(n) && (e[r] = function (e = "") {
                        if (!E(e)) return !1;
                        try {
                            return new URL(e).href
                        } catch (t) {
                            return I(`Passed invalid url '${e}' to URL encodeUrl() function.`), !1
                        }
                    }(n.trim()))
                }))
            }

            function g(e) {
                const i = function (e) {
                    const r = {}, i = [];
                    let a;
                    if (p(e.mediaFiles) && e.mediaFiles.length) {
                        if (l(e.mediaFiles, (e => {
                            "video/mp4" !== e.type || o(e.height) || (r[e.height] = e.uri, i.push(parseInt(e.height, 10)))
                        })), i.length) {
                            if (i.sort(((e, t) => e - t)), a = i[i.length - 1], t(n)) {
                                const e = parseInt(n.quality, 10);
                                l(i, (t => {
                                    e - t <= 0 && Math.abs(e - t) <= Math.abs(e - a) && (a = t)
                                }))
                            }
                            return String(r[a]).trim()
                        }
                        return m(402), !1
                    }
                    return m(403), !1
                }(e);
                if (!Pe(i)) return !1;
                const a = Dn(e);
                return u(a), a.videoUrl = i, a.campaign = function (e) {
                    let t = 0;
                    if (!E(e) || 0 === e.length) return t;
                    for (let n = 0, r = e.length; n < r; n++) t = (t << 5) - t + e.charCodeAt(n), t &= t;
                    return Math.abs(t)
                }(a.title).toString(), a.clickUrl = a.clickThrough, a.clickTrackUrl = a.clickTracking, a.clickTrackUrl.push(r), a.impressionUrl.push(r), a
            }

            function m(e) {
                I("Error parsing json adroll. Code: " + e), e = e || 900, d.status = "error", d.error = e
            }

            return function () {
                const n = t(e) ? e : function (e) {
                    let t = !1;
                    try {
                        t = JSON.parse(e)
                    } catch (n) {
                        throw s("adroll.parser.error", {startPoint: a}), new SyntaxError("json.parser.error")
                    }
                    return t
                }(e);
                let r;
                o(n.ad) || (r = g(n.ad), r.parsed = !0, r && (c.rolls.push(r), d.status = "parsed", c.id = r.campaign || r.id))
            }(), {rolls: c.rolls, getState: e => e ? d[e] : d, campaignId: c.id || ""}
        };
        const Bn = function (e, n, r, a, s, {startPoint: d}) {
            const {fire: c} = de.get(s), u = new Dt({status: "empty", version: 0}, s, "AdRollVastParser"), g = [],
                m = [];
            let f = "", h = "";

            function _(e) {
                const s = e.getElementsByTagName("Ad");
                let d = [], c = [], u = [], f = [], h = [];
                l(s, (e => {
                    !function (e) {
                        parseInt(e.getAttribute("sequence"), 10) > 0 && A("Ad Pods");
                        e.getAttribute("conditionalAd") && A("Conditional Ads");
                        (e.getElementsByTagName("Icons").length || e.getElementsByTagName("Icon").length) && A("Icon")
                    }(e);
                    const t = [].slice.call(e.getElementsByTagName("Linear")),
                        n = [].slice.call(e.getElementsByTagName("NonLinear")),
                        r = [].slice.call(e.getElementsByTagName("Companion")),
                        i = [].slice.call(e.getElementsByTagName("Impression")),
                        a = [].slice.call(e.getElementsByTagName("AdTitle")), o = function (e) {
                            const t = e.getElementsByTagName("Extension"), n = {
                                adweight: "weight",
                                titlecta: "titleCta",
                                mobiletext: "mobileText",
                                pctext: "pcText",
                                pixeltracking: "pixelTracking",
                                clickableareas: "clickableAreas",
                                clicktrack: "clickTrack"
                            };
                            let r = {};

                            function i(e) {
                                let t = {};
                                return 3 !== e.nodeType && 4 !== e.nodeType || (t = e.nodeValue ? e.nodeValue.trim() : ""), e.hasChildNodes() && l(e.childNodes, (e => {
                                    const r = i(e);
                                    if (!r || "object" == typeof r && 0 === Object.keys(r).length) return !1;
                                    void 0 === e.tagName ? "string" == typeof r && r.trim().length > 0 && (t = r) : n[e.tagName.toLowerCase()] ? t[n[e.tagName.toLowerCase()]] = r : t[e.tagName.toLowerCase()] = r
                                })), t
                            }

                            t.length > 0 && l(t, (e => {
                                r = K(r, i(e))
                            }));
                            return r
                        }(e);
                    let s = "";
                    s = p(i) ? i.map((e => e.textContent)).join("|") : i[0].textContent, i.length && l(t, (e => {
                        e.setAttribute("impression", s)
                    })), f = f.concat(a[0].textContent), d = d.concat(t), c = c.concat(n), u = u.concat(r), h = h.concat(o)
                })), l(d, ((e, s) => {
                    let d = function (e) {
                        const s = e.getElementsByTagName("Duration"), d = v(e.getAttribute("skipoffset") || ""),
                            c = function (e, t) {
                                const n = e.getElementsByTagName("MediaFile"), r = [];
                                let a = [], o = null;
                                return n.length ? (l(n, (e => {
                                    if ("video/mp4" === e.getAttribute("type")) {
                                        const t = e.getAttribute("height");
                                        r[t] = e.textContent
                                    }
                                })), r.length ? void 0 !== r[t] ? String(r[t]).trim() : (a = i(r), o = parseInt(a[a.length - 1], 10), t = parseInt(t, 10), l(a, (e => {
                                    e = parseInt(e, 10), t - e < 0 && Math.abs(t - e) <= Math.abs(t - o) && (o = e)
                                })), String(r[o]).trim()) : (y(403), !1)) : (y(403), !1)
                            }(e, !!t(r) && r.quality);
                        if (!Ie(c)) return !1;
                        let u = {};
                        u.videoUrl = c, u = b(e, u), u = function (e, t) {
                            let n = String(e.getAttribute("impression") || "").trim();
                            const r = a;
                            n = n.indexOf("|") > -1 ? n.split("|") : n, p(n) ? (t.impressionUrl = n, t.impressionUrl.push(r)) : t.impressionUrl = [n, r];
                            return t
                        }(e, u), u.tracking = function (e) {
                            const t = {}, n = e.getElementsByTagName("TrackingEvents");
                            if (n[0]) {
                                const e = n[0].getElementsByTagName("Tracking");
                                l(e, (e => {
                                    const n = e.getAttribute("event"), r = e.textContent;
                                    n && Ie(r) && (o(t[n]) && (t[n] = []), t[n].push(r))
                                }))
                            }
                            return t
                        }(e), n && d > 0 && (u.skipDelay = d);
                        s.length && (u.duration = v(String(s[0].textContent).trim()));
                        return u
                    }(e);
                    d && (d.title = f[s], d.parsed = !0, d = K({}, d, h[s]), g.push(d))
                })), l(c, (e => {
                    const t = function (e) {
                        const t = e.getElementsByTagName("StaticResource"), n = e.getElementsByTagName("HTMLResource"),
                            r = e.getElementsByTagName("IFrameResource");
                        let i, a, o = {
                            hCentered: !0,
                            border: !0,
                            closeButton: !0,
                            top: "10px",
                            width: e.getAttribute("width") || "0px",
                            height: e.getAttribute("height") || "0px",
                            time: 0,
                            duration: v(e.getAttribute("minSuggestedDuration") || "24:00:00")
                        };
                        if (t.length) i = String(t[0].textContent).trim(); else if (n.length) a = String(n[0].textContent).trim(); else {
                            if (!r.length) return !1;
                            a = String(r[0].textContent).trim()
                        }
                        if (Ie(i)) o.imageUrl = i, o = b(e, o, "NonLinear"); else {
                            if (!Ie(a)) return !1;
                            o.iframeUrl = a
                        }
                        return o
                    }(e);
                    t && m.push(t)
                }))
            }

            function v(e) {
                const t = String(e).split(":");
                let n = 0;
                return t.length ? (n = parseInt(t[t.length - 1], 10), t.length > 1 && (n += 60 * parseInt(t[t.length - 2], 10)), t.length > 2 && (n += 60 * parseInt(t[t.length - 3], 10) * 60)) : n = parseInt(e, 10), n
            }

            function b(e, t, n = "") {
                const r = a, i = e.getElementsByTagName(n + "ClickThrough"),
                    o = e.getElementsByTagName(n + "CustomClick"),
                    s = [].slice.call(e.getElementsByTagName(n + "ClickTracking"));
                let d = i.length ? i[0].textContent : "";
                return (o.length || s.length) && (d || (d = "#"), t.clickTrackUrl = [], o.length && t.clickTrackUrl.push(String(o[0].textContent).trim()), s.length && l(s, (e => {
                    t.clickTrackUrl.push(String(e.textContent).trim())
                })), t.clickTrackUrl.push(r)), t.clickUrl = d, t
            }

            function y(e) {
                e || (e = 900), f && Ge(f.replace("[ERRORCODE]", e))
            }

            function A(e, t) {
                D('VAST Parser: No "' + e + '" support yet.'), t && y(t)
            }

            function T(e) {
                const t = e.documentElement;
                u.set("version", parseFloat(t.getAttribute("version")) || 0);
                const n = t.querySelector("Ad");
                n && (h = n.getAttribute("id")), function (e) {
                    const t = e.getElementsByTagName("Error");
                    t.length && (f = t[0].textContent || "")
                }(t), _(t), function (e) {
                    e.getElementsByTagName("Wrapper").length && A("Wrapper", 300), (e.getElementsByTagName("AdVerifications").length || e.getElementsByTagName("Verification").length) && A("AdVerifications"), (e.getElementsByTagName("CompanionAds").length || e.getElementsByTagName("Companion").length) && A("CompanionAds", 600)
                }(t), u.set("status", "parsed")
            }

            function w(t) {
                const n = (new window.DOMParser).parseFromString(t, "text/xml");
                -1 !== (new window.XMLSerializer).serializeToString(n).indexOf("parsererror") ? function () {
                    throw c("adroll.parser.error", {
                        startPoint: d,
                        xml: e
                    }), y(100), u.set("status", "error"), new SyntaxError("vast.parser.error")
                }() : (u.set("status", "created"), T(n))
            }

            return function () {
                if (E(e) && e.length) {
                    w(e.replace(/\>\s+/gm, ">").replace(/\s+\</gm, "<"))
                }
            }(), {rolls: g, overlays: m, getState: e => u.get(e), campaignId: h}
        };
        const Nn = function (e) {
            const t = {commonTime: 0, views: 0, timeouts: {attempt: 0, time: 0, report: !0}}, n = "adrolls";
            let r, i;

            function a(e, t, n = !1) {
                i = i || {}, i[e] && !i[e] !== t || (i[e] = t, n && s())
            }

            function o() {
                i.timeouts = Mn(t.timeouts)
            }

            function s() {
                const t = st.get(n) || {};
                t[e] = i, st.set(n, t)
            }

            return j(e, !1) ? (function (a) {
                if (c(i) || a) {
                    r = st.get(n) || {};
                    const a = c(r[e]) ? {} : r[e];
                    i = ye({}, t, a)
                }
            }(), {
                get views() {
                    return i.views
                }, get commonTime() {
                    return i.commonTime
                }, set commonTime(e) {
                    i.commonTime = e
                }, get timeouts() {
                    return i.timeouts
                }, save: s, update: a, resetTimeouts: o
            }) : (D("*** MGP Adroll Storage ***\n", "Invalid adroll start point provided for initialization"), !1)
        };
        const Fn = function (e, n, r) {
            const {fire: i} = de.get(e.playerId), a = e.embeds.enabled || !1,
                s = {campaignName: "TJ Campaign", delay: [900, 2e3, 3e3], skipDelay: 0, skippable: !1, roll: {}},
                l = new Dt({timeout: !1, parserError: !1, noAdsFound: !1, tier: 0}, e.playerId, "AdRollModelErrors"),
                d = new Nn(n.startPoint);
            let u, g, m = {}, f = !1, h = "", _ = !1, v = !1, b = !1;

            function y() {
                b || o(g) && (g = {
                    onAdRollParserError: t => {
                        if (l.set("parserError", !0), T("parsingerror"), _ = !0, "function" == typeof window.btoa && Math.random() < .1) {
                            Ge(e.vastParserErrorReportURL + window.btoa(t.xml))
                        }
                    }
                })
            }

            function A(e, t = {}) {
                v || (e(m), v = !0)
            }

            function E() {
                if (b) return;
                const a = Math.floor((new Date).getTime() / 1e3);
                let v, E, w = !1;
                return n && (n.vast || n.json) ? (f = !0, v = n, v.delay && !p(v.delay) && (v.delay = [v.delay]), v.skippable = v.skipDelay > 0, E = a - d.commonTime, w = E >= 0) : (T("noconfig"), _ = !0), new Promise(((p, _) => {
                    if (!w) return T("onwait"), void A(_, {message: `Ad rolls disabled until ${new Date(1e3 * d.commonTime)}.`});
                    let b, E;
                    m = K({}, s, v);
                    const S = m.delay[d.timeouts.attempt];
                    y(), h = v.json ? "json" : "vast";
                    const x = Ve(v[h], {"Accept-Language": n.user_accept_language}, !0);
                    setTimeout((() => {
                        o(b) && (b = !0, f = !1, d.timeouts.report && (l.set({
                            timeout: S,
                            tier: d.timeouts.attempt + 1
                        }), T("timeout", l.get("tier"))), d.timeouts.attempt === m.delay.length - 1 ? (d.commonTime = a + 7200, d.resetTimeouts()) : d.timeouts.attempt++, d.save(), A(_, {message: `Ad roll request timed out at ${S}ms.`}))
                    }), S), x.then((({data: a}) => {
                        let s;
                        if (c(a) || t(a)) s = a; else try {
                            s = JSON.parse(a)
                        } catch (w) {
                            s = a
                        }
                        if (!0 === b) return void A(_, {message: `Ad roll request timed out at ${S}ms.`});
                        b = !1;
                        let h = "";
                        const y = s.noadroll || s.nopreroll || s.nopostroll;
                        if (c(s)) f = !1, h = "empty"; else if ("frequencyCap" === s) f = !1, h = s; else if (j(y, !1)) f = !1, d.update("commonTime", y, !0), h = "noadroll"; else if (v.json || v.vast) try {
                            v.json ? E = new On(s, r, e.htmlSettings.adsTrackUrl, e.playerId, n) : v.vast && (E = new Bn(s, m.vastSkipDelay, r, e.htmlSettings.adsTrackUrl, e.playerId, n))
                        } catch (w) {
                            g.onAdRollParserError(), A(_, {message: `${w}`})
                        }
                        f ? "parsed" === E.getState("status") && E.rolls.length ? (o(E.rolls[0].skipDelay) || (m.skipDelay = E.rolls[0].skipDelay), m.skippable = m.skipDelay > 0, m.roll = E.rolls[0], d.save(), h = "campaign", u = E.campaignId) : (f = !1, l.set("noAdsFound", !0), h = "noads", i("adroll.empty")) : A(_, {message: `Preroll response was empty or not a campaign.\nResponse type received: ${h}`}), h && T("response", h), p(m)
                    })).catch((e => {
                        A(_, {message: `Error loading or parsing ${v.json ? "json" : "vast"} file.`, error: e})
                    }))
                }))
            }

            function T(e, t = 1) {
                if (b) return;
                if (_) return;
                const r = {feature: `adroll_${e}`, value: t, startPoint: n.startPoint};
                (h || u) && (r.data = [], h && r.data.push({
                    name: "format",
                    value: h
                }), u && r.data.push({name: "campaignId", value: u})), i("adroll.tracking", r)
            }

            return {
                errors: l,
                getRolls: () => b ? null : [m.roll],
                rolls: [m.roll],
                campaigns: [m],
                requestData: E,
                load: E,
                isAvailable: () => f && !b,
                multiMode: a,
                storage: d,
                getCookie: () => d,
                set: (e, t) => !(!m.roll || b) && (o(m[e]) ? o(m.roll[e]) || (m.roll[e] = t) : m[e] = t, !0),
                getCampaign: () => !c(m.roll) && !b && m,
                getRoll: () => !c(m.roll) && !b && m.roll,
                incrementViews: () => {
                },
                destroy: function () {
                    y(), b = !0
                }
            }
        };

        function Un(e, t, n) {
            const r = t.getCampaign(), i = new Dt({
                    enabled: !1,
                    active: !1,
                    played: !1,
                    deferred: !1,
                    muted: !1,
                    time: 0,
                    duration: 0,
                    playerPaused: !1,
                    firstQuartile: !1,
                    midpoint: !1,
                    thirdQuartile: !1,
                    startOffset: 0,
                    ended: !1,
                    startPoint: t.startPoint,
                    last: t.last,
                    destroyed: !1
                }, n.playerId, "AdRollController"),
                a = Ut.get(), {is: s} = H.get(), {fire: d, subscribe: c, unsubscribe: p} = de.get(n.playerId);
            let u, g;

            function m(e) {
                const n = s.macos && s.safari;
                o(g) && (g = {
                    onPlaybackEnded: () => {
                        i.get("ended") || (i.set("ended", !0), i.get("active") && (i.set("deferred", !1), _("finish"), y("complete"), f())), i.get("enabled") && f()
                    }, onSourceError: () => {
                        i.get("enabled") && (f(), i.set("enabled", !1))
                    }, onPlaybackBeforePlay: () => {
                        if (!i.get("enabled")) return;
                        const e = (new Date).getTime(), n = t.getCookie();
                        !i.get("active") && e - n.commonTime < 1e3 * r.forgetUserAfter && (t.incrementViews(), f())
                    }, markAsStated: () => {
                        const e = t.getCookie();
                        if (!i.get("played")) {
                            _("play", {timeout_tier: (e && e.timeouts && e.timeouts.attempt || 0) + 1}), y("start"), t.incrementViews(), d("adroll.started", i), i.set("played", !0)
                        }
                        i.get("enabled") && !i.get("active") && (i.set({
                            deferred: !1,
                            active: !0
                        }), t.incrementViews(!0))
                    }, onPlaybackPlaying: () => {
                        !i.get("enabled") || n && !i.get("played") || (g.markAsStated(), i.get("playerPaused") && y("resume"), i.set("playerPaused", !1), u = setInterval((() => {
                            i.set("time", i.get("time") + .1), function () {
                                const e = i.get("time"), t = i.get("duration");
                                e > 25 * t / 100 && !i.get("firstQuartile") && (y("firstQuartile"), i.set("firstQuartile", !0));
                                e > 50 * t / 100 && !i.get("midpoint") && (y("midpoint"), i.set("midpoint", !0));
                                e > 75 * t / 100 && !i.get("thirdQuartile") && (y("thirdQuartile"), i.set("thirdQuartile", !0))
                            }()
                        }), 100))
                    }, onPlaybackPaused: () => {
                        i.get("enabled") && i.get("played") && (i.set("playerPaused", !0), parseInt(i.get("time"), 10) < parseInt(i.get("duration"), 10) && y("pause"), clearInterval(u))
                    }, onPlaybackWaiting: () => {
                        i.get("enabled") && clearInterval(u)
                    }, onFullscreenChanged: e => {
                        i.get("enabled") && !0 === i.get("played") && e.fullscreen && (y("fullscreen"), _("fullscreen"))
                    }, onVolumeChanged: e => {
                        i.get("enabled") && !0 === i.get("played") && i.get("muted") !== e.muted && (i.set("muted", e.muted), e.muted ? y("mute") : y("unmute"))
                    }, onPlaybackDurationChanged: e => {
                        i.get("enabled") && i.set("duration", e.duration)
                    }
                }), "sub" === e ? (c("playback.ended", g.onPlaybackEnded), c("source.error", g.onSourceError), c(["adroll.parser.error", "adroll.empty", "adroll.ui.hide"], f), c("playback.beforeplay", g.onPlaybackBeforePlay), n && c("playback.time.changed", g.markAsStated, !0), c("playback.playing", g.onPlaybackPlaying), c("playback.paused", g.onPlaybackPaused), c("playback.waiting", g.onPlaybackWaiting), c("fullscreen.changed", g.onFullscreenChanged), c("volume.changed", g.onVolumeChanged), c("playback.duration.changed", g.onPlaybackDurationChanged)) : "unsub" === e && (p("playback.ended", g.onPlaybackEnded), p("source.error", g.onSourceError), p(["adroll.parser.error", "adroll.empty", "adroll.ui.hide"], f), p("playback.beforeplay", g.onPlaybackBeforePlay), n && p("playback.time.changed", g.markAsStated), p("playback.playing", g.onPlaybackPlaying), p("playback.paused", g.onPlaybackPaused), p("playback.waiting", g.onPlaybackWaiting), p("fullscreen.changed", g.onFullscreenChanged), p("volume.changed", g.onVolumeChanged), p("playback.duration.changed", g.onPlaybackDurationChanged))
            }

            function f() {
                if (!i.get("destroyed")) return u && clearTimeout(u), i.set({
                    active: !1,
                    enabled: !1,
                    deferred: !1
                }), clearInterval(u), d("adroll.ended", i), !0
            }

            function _(e, a = {}) {
                if (i.get("destroyed")) return;
                let o;
                a.startPoint = t.startPoint, r ? (o = r.roll.trackUrl, i.get("enabled") && (o = "play" === e && r.roll.impressionUrl ? r.roll.impressionUrl : "click" === e && r.roll.clickTrackUrl ? r.roll.clickTrackUrl : [n.htmlSettings.adsTrackUrl])) : o = [n.htmlSettings.adsTrackUrl];
                for (let t = 0, n = o.length; t < n; t++) if (Pe(o[t])) {
                    let n = o[t];
                    if (n.indexOf("etahub.com") > -1 && (n = S(n, a)), n = v(e, n), r && r.roll.parsed) n = b(e, n); else if ("play" !== e && -1 === n.indexOf("etahub.com")) continue;
                    Ge(n)
                }
                return !0
            }

            function v(e, t) {
                const i = encodeURIComponent(n.env || n.mainRoll.siteName || n.quickSetup || "undefined"),
                    a = s.desktop ? "PC" : "Mobile";
                let o, l, d, c = n.mainRoll.appId;
                r ? (c = r.roll.appId || c, o = encodeURIComponent(r.roll.clickUrl), l = encodeURIComponent(r.roll.title ? r.roll.title : "undefined"), d = encodeURIComponent(r.campaignName)) : (o = "", l = "undefined", d = encodeURIComponent("TJ campaign"));
                let p = t ? t.replace("%APPID%", c).replace("%ACTION%", e).replace("%SITE%", o).replace("%CAMPAIGN%", d).replace("%PLAYER%", "").replace("%PLATFORM%", a).replace("%ADTITLE%", l) : "";
                return i.length > 0 && (p = p.replace("%SITENAME%", i)), p
            }

            function b(e, t) {
                return t
            }

            function y(e) {
                if (!r || i.get("destroyed")) return !1;
                if (r.roll.tracking && r.roll.tracking[e] && i.get("enabled")) {
                    const n = r.roll.tracking[e];
                    return l(n, ((e, r) => n[r] = S(e, {startPoint: t.startPoint}))), Ke(n), !0
                }
                return !1
            }

            function A(e) {
                return i.get(e) || !1
            }

            const E = {
                model: t,
                getSourceUrl: function () {
                    return !(!i.get("enabled") || !Pe(r.roll.videoUrl)) && r.roll.videoUrl
                },
                track: _,
                callTrackingEvent: y,
                hide: f,
                getMultiMode: () => t.multiMode,
                getState: A,
                enabled: () => A("enabled"),
                active: () => A("active"),
                deferred: () => A("deferred"),
                getRollProp: e => !(!r || i.get("destroyed")) && (o(r[e]) ? !o(r.roll[e]) && r.roll[e] : r[e]),
                togglePlay: function () {
                    return !!i.get("enabled") && (e.paused ? e.play() : e.pause(), !0)
                },
                destroy: function () {
                    i.get("destroyed") || (t.destroy(), m("unsub"), i.set("destroyed", !0))
                }
            };
            return i.set("muted", !1), M("...AdRoll controller campaign", r), r ? (i.set({
                enabled: !0,
                url: r.roll.videoUrl
            }), n.adsCampaign = r, r.skippable && (r.roll.skipMessage || (r.roll.skipMessage = a(n.htmlSettings.skipMessage)), r.roll.skipDelayMessage || (r.roll.skipDelayMessage = a(n.htmlSettings.skipDelayMessage))), m("sub"), d("adroll.ready", E)) : (t.errors.get("timeout") && _("timeout", {
                timeout_ms: t.errors.get("timeout"),
                videoUrl: window.location.href,
                playerVersion: h
            }), t.errors.get("parserError") && _("parserError"), t.errors.get("noAdsFound") && _("noAdsFound")), E
        }

        function Hn(e, t) {
            const n = t.adRolls, {fire: r, subscribe: i} = de.get(t.playerId), a = t.mainRoll.duration,
                s = n.map((({startPoint: e}) => parseFloat(e))), l = st.get("quality") || !1, d = {};
            let p, u, g = a, m = !1, f = !c(n), h = s.includes(0), _ = s.includes(100);

            function v() {
                u = s.map((e => 0 === e ? e : 100 === e ? g : Math.floor(e * g / 100)))
            }

            function b() {
                r("adroll.init", f ? {times: u, startPoints: s, preRoll: h, postRoll: _, empty: !1} : {empty: !0})
            }

            function y(i) {
                if (!s.includes(i)) return;
                const a = n[s.indexOf(i)], c = K(new Fn(t, a, l || p), {startPoint: i, last: o(s[s.indexOf(i) + 1])});
                c.load().then((() => {
                    r("source.unload", {
                        destroy: !0, callback: () => {
                            d[i] = new Un(e, c, t)
                        }
                    })
                }), (() => {
                    !function (e) {
                        0 === e ? h = !1 : 100 === e && (_ = !1), h || _ || (f = !1), A(e), r("adroll.skipped", {startPoint: e})
                    }(i)
                }))
            }

            function A(e) {
                const t = d[e];
                t && t.destroy()
            }

            f && (v(), i("playback.duration.changed", (({duration: e}) => {
                e !== g && (g = e, v(), b())
            }), !0), i("playback.time.changed", (() => {
            })), i(["adroll.started", "adroll.ended"], ((e, t, n) => {
                m = "started" === n.split(".").pop(), m || A(e.get("startPoint"))
            })), i("adroll.ended", (({get: e}) => {
                const t = e("startPoint");
                0 === t ? h = !1 : 100 === t && (_ = !1)
            })), i("adroll.load", (({startPoint: e}) => {
                m || s.includes(e) && y(e)
            })), i("playback.ended", (() => {
                _ && !m && (d[100] || y(100))
            })), i("skin.ready", b, !0), i("source.loaded", (e => {
                p = e, s.includes(0) && !d[0] && y(0)
            }))), b()
        }

        const Yn = function (e) {
            const t = e.eventTracking || !1, n = t.customData, r = e.env || e.quickSetup || window.location.host,
                i = e.embeds && e.embeds.enabled ? "embed" : "videoPage", s = "Unknown", d = {
                    error: 10938,
                    feature: 10896
                }, {os: u, browser: f, platform: _} = H.get(), {subscribe: v} = de.get(e.playerId);
            let b, y, A, T, w, x = {}, L = !1, R = !1, P = "", I = {}, M = !1;
            if (!t || !t.enabled) return {};
            if (!t.url || !Pe(t.url)) return {};

            function D(e, t, n = !1, r = []) {
                if (!(e && (M || b && R))) return;
                const a = d[n ? "error" : "feature"];
                let o = y.replace("%NAME%", e).replace("%APPID%", a), s = [{name: "eventName", value: e}];
                return p(t) && (o = F(o, t)), o = n || "boolean" != typeof t && !t ? o.replace("&sfeatureValue=%VALUE%", "") : o.replace("%VALUE%", t), p(r) && !c(r) && (s = s.concat(r)), n || (s = s.concat([{
                    name: "player_source",
                    keys: ["player_source", "playersource", "source"],
                    value: i
                }, {name: "osName", value: De(u.name)}, {
                    name: "osVersion",
                    value: u.version
                }])), o = F(o, s), Ge(o), M = !1, !0
            }

            function O() {
                return b = !0, !0
            }

            function B({quality: e, auto: t}) {
                if (M = !0, c(I) || e !== I.quality || t !== I.auto) {
                    const n = t && !E(e);
                    I = {quality: e, auto: t};
                    D("QualityChange" + (n ? "Adaptive" : ""), e)
                }
            }

            function N(e) {
                if (w) return;
                const t = e.url || e.src;
                if (!t) return;
                const n = C(t);
                A !== n && (A = n), T = k(t), P = T.split(".").pop()
            }

            function F(e, t) {
                if (!p(t)) return e;
                let n, r;
                return l(t, (t => {
                    t.keys && (n = t.keys.filter((t => new RegExp("%" + t + "%", "i").test(e)))[0]), r = encodeURIComponent(t.value || s), e = n ? e.replace(new RegExp(n, "i"), r) : [e, "&", t.name, "=", r].join("")
                })), e
            }

            return y = t.url.replace("%SITENAME%", r).replace("%PLATFORM%", _ || s), O(), function () {
                v("source.ready", (i => {
                    if (x = i, R) return;
                    R = !0, y = S(t.url.replace("%SITENAME%", r).replace("%PLATFORM%", _ || s), {playerName: m});
                    const a = [{name: "date", value: (new Date).getTime()}, {
                        name: "videoId",
                        value: t.videoId
                    }, {name: "videoTitle", value: e.mainRoll.title}];
                    if (n) {
                        const e = ["source_page", "section", "recommender", "recommender_info"];
                        l(Object.keys(n), (t => {
                            e.includes(t) && a.push({name: t, value: n[t]})
                        }))
                    }
                    D("playerLoaded", m, !1, a)
                }));
                const i = {
                    "buttons.pause": "btnPause",
                    "buttons.play": "btnPlay",
                    "buttons.bigplay": "btnBigPlay",
                    "buttons.replay": "btnReplay",
                    "buttons.nextvideo": "nextVideo",
                    "buttons.watchhd": "watchHd",
                    "buttons.help": "help"
                };
                v(["buttons.pause", "buttons.play", "buttons.bigplay", "buttons.replay", "buttons.nextvideo", "buttons.watchhd", "buttons.help"], ((e, t, n) => {
                    D(i[n] || n)
                })), v("forwardrewind.seeking", (e => {
                    D("seek" + (e.seekDelta > 0 ? "Forward" : "Rewind"))
                })), v(["source.quality.changed", "source.adaptive.quality.changed"], B), v("airplay.changed", (e => {
                    e.click && D("airplay", "streaming" === e.state)
                })), v("cast.changed", (e => {
                    D("chromecast", e.active)
                })), v("buttons.expand", (() => {
                    D("largePlayer", !0)
                })), v("buttons.collapse", (() => {
                    D("largePlayer", !1)
                })), v("cc.changed", (({manual: e, visible: t}) => {
                    o(e) || D("closedCaptions", t)
                })), v("playback.speed.changed", (e => {
                    e.manual && D("speed", e.playbackRate)
                })), v("autoplay.changed", (e => {
                    D("autoplay", e.autoplay)
                })), v("hotspots.changed", (e => {
                    D("hotspots", e.hotspots)
                })), v("cc.style.changed", (e => {
                    switch (e.newStyle) {
                        case"color":
                            D("fontColor", e.newValue);
                            break;
                        case"bg_color":
                            D("BGcolor", e.newValue);
                            break;
                        case"bg":
                            D("BGopacity", e.newValue);
                            break;
                        case"size":
                            D("fontSize", e.newValue)
                    }
                })), v("grid.clicked", (e => {
                    D("RelatedGrid", "video" + parseInt(e.num, 10))
                })), v("fullscreen.changed", (e => {
                    let t = "fullscreen";
                    "landscape" === e.event || "portrait" === e.event ? t = "autoFullscreen" : "area" === e.event ? t = "fullscreenArea" : "button" === e.event ? t = "fullscreenBtn" : "esc" === e.event && (t = "fullscreenEsc"), D(t, e.fullscreen)
                })), v("volume.slide", (() => {
                    D("volumeSlider")
                })), v("volume.muted", (() => {
                    D("volumeMute")
                })), v("volume.unmuted", (() => {
                    D("volumeUnmute")
                })), v("clipboard.copy.embed", (() => {
                    D("CopyEmbed")
                })), v("playback.looped", (e => {
                    L = !L, D("looped", e.looped)
                })), v("actiontags.screen.clicked", (e => {
                    const t = e.id + 1;
                    t && !z(t) && D("actionTagsItem", function (e) {
                        const t = ["th", "st", "nd", "rd"], n = e % 100;
                        return e + (t[(n - 20) % 10] || t[n] || t[0])
                    }(t))
                })), v("actiontags.screen.changed", (e => {
                    e.visible && D("actionTagsOpen", !0)
                })), v(["source.error", "svvt.error"], (e => {
                    !1 !== e.track && function (e) {
                        if (e.url) {
                            const t = k(e.url);
                            t && (T = t, A = C(e.url))
                        }
                        const n = w ? k(w) : T, r = w ? C(w) : A, i = function (e) {
                            if (!e || "string" != typeof e) return s;
                            e = e.toLowerCase();
                            const t = [{name: "haproxy", variants: ["htrn", "rf", "hp", "proxy"]}, {
                                name: "highwinds",
                                variants: ["hw", "high", "wind"]
                            }, {
                                name: "edgecast",
                                variants: ["edge", "cast"]
                            }].filter((t => t.name === e || e.indexOf(t.name) > -1 || t.variants.filter((t => e.indexOf(t) > -1)).length));
                            return t.length ? t[0].name : s
                        }(t.cdn), a = [{name: "errorMessage", value: e.message}, {
                            name: "videoId",
                            value: t.videoId
                        }, {name: "requestFilename", value: n}, {name: "requestDomain", value: r}, {
                            name: "host",
                            value: window.location.hostname
                        }, {name: "cdnHostname", value: i}, {name: "playerType", value: m}, {
                            name: "playerVersion",
                            value: h
                        }, {name: "adaptiveLibrary", value: De(g)}, {name: "platform", value: _}, {
                            name: "osName",
                            value: De(u.name)
                        }, {name: "osVersion", value: u.version}, {
                            name: "browserName",
                            value: De(f.name)
                        }, {name: "browserVersion", value: f.version}, {
                            name: "sourceModel",
                            value: e.model || x.model
                        }, {name: "adaptive", value: o(e.adaptive) ? x.adaptive : e.adaptive}, {
                            name: "streamType",
                            value: e.format || x.format || P
                        }, {name: "quality", value: e.quality || x.quality || I.quality}];
                        t.geo && a.push({name: "geo", value: t.geo}), t.isp && a.push({
                            name: "isp",
                            value: t.isp
                        }), M = !0, D("html5-performance", a, !0)
                    }(e), w && (w = "")
                })), v("adroll.tracking", (e => {
                    M = !0, D(e.feature, e.value, e.data || null)
                })), v(["source.ready", "source.quality.ready", "source.quality.changed", "source.adaptive.quality.changed", "source.fragment.changed", "source.adaptive.fragment.changed"], N), v("source.hanging", (e => {
                    D("hangingCdnRequest", void 0, Object.entries(e).map((e => ({name: e[0], value: e[1]}))))
                })), v("adroll.ready", (({getState: e}) => {
                    a(e) && (w = e("url"))
                })), v("adroll.ended", (() => w = "")), v("svvt.success", (e => D("svvt_success", encodeURIComponent(e.url)))), v("player.redirected", (({source: e}) => D("redirect", encodeURI(e))))
            }(), {
                disable: function () {
                    return b = !1, !0
                }, enable: O, send: D
            }
        };

        function Gn(e) {
            const t = e.playbackTracking, n = "playbackTracking", {subscribe: r, unsubscribe: i} = de.get(e.playerId);
            let a, s, l, d = !1, p = e.mainRoll.duration, u = 0, g = 0, m = 0, f = !1, h = !1, _ = !1;

            function v(t) {
                d = "sub" === t, o(s) && (s = {
                    adRollCallback: (e, t, n) => h = "ready" === n.split(".").pop(),
                    playbackDisableTracking: () => f = !1,
                    playbackEnableTracking: () => f = !h,
                    playbackTimeChanged: ({time: t}) => {
                        if (!f) return;
                        const n = Math.abs(t - g);
                        g = t;
                        const r = n <= a.frequency ? n : 0;
                        u += r;
                        if (parseInt(u / a.frequency, 10) > m && !_) {
                            m++, function (t) {
                                const n = S(a.trackingUrl, {
                                    app_id: a.appId,
                                    nvideo_duration: Math.round(p),
                                    nvideo_id: a.videoId || e.playerId || "",
                                    nvideo_timestamp: a.videoTimestamp,
                                    nplayer_timestamp: Math.round(t),
                                    seventName: "timewatched",
                                    shostname: window.location.hostname || "",
                                    smunged_session_id: a.mungedSessionId,
                                    swatch_session: a.watchSession
                                });
                                y(), Ge(n)
                            }(t);
                            const n = (new Date).getTime();
                            _ = n > l, _ && d && v("unsub")
                        }
                    },
                    playbackDurationChanged: ({duration: e}) => {
                        h || p === e || (p = e)
                    }
                }), "sub" === t ? (r(["adroll.ready", "adroll.ended", "adroll.skipped"], s.adRollCallback), r(["playback.ended", "playback.paused", "playback.waiting", "playback.seek.started", "adroll.ready"], s.playbackDisableTracking), r(["playback.playing", "playback.seek.started", "adroll.ended", "adroll.skipped"], s.playbackEnableTracking), r("playback.time.changed", s.playbackTimeChanged), r("playback.duration.changed", s.playbackDurationChanged), r("playback.playing", (() => {
                    l || (l = (new Date).getTime() + 1e3 * a.maxDuration)
                }))) : "unsub" === t && (i(["adroll.ready", "adroll.ended", "adroll.skipped"], s.adRollCallback), i(["playback.ended", "playback.paused", "playback.waiting", "playback.seek.started", "adroll.ready"], s.playbackDisableTracking), i(["playback.playing", "playback.seek.started", "adroll.ended", "adroll.skipped"], s.playbackEnableTracking), i("playback.time.changed", s.playbackTimeChanged), i("playback.duration.changed", s.playbackDurationChanged))
            }

            function b() {
                let e = !1;
                return (st.get(n) || {}).watchSession === a.watchSession ? e = !0 : (st.remove(n), e = Math.floor(100 * Math.random() + 1) <= a.sampleSize, e && y()), e
            }

            function y() {
                st.set(n, {watchSession: a.watchSession})
            }

            return {
                enabled: !(c(t) || e.embeds.enabled || (a = V({}, {
                    appId: 10948,
                    frequency: 5,
                    maxDuration: 7200,
                    mungedSessionId: void 0,
                    sampleSize: 10,
                    trackingUrl: void 0,
                    videoId: "",
                    videoTimestamp: void 0,
                    watchSession: void 0
                }, t), Object.values(a).includes(void 0) && (D("*** MGP Playback Tracking ***\n", "A required playback tracking parameter is missing."), 1) || !b() || (v("sub"), 0))),
                config: a
            }
        }

        const Vn = {
            controlBar: {
                front: {
                    playPause: '.btn.play.icon.icon-play.test-PlayButtonOverlay[title="%PLAY%"] + .btn.pause.icon.icon-pause[title="%PAUSE%"] + .btn.replay.icon.icon-replay[title="%REPLAY%"]',
                    time: "span.elapsed[html=00:00] + span.sep[html=/] + span.total[html=00:00]",
                    sound: {
                        "volume.fullVolume": '.btn.volume-low.icon.icon-volume-low[title="%MUTE%"] + .btn.volume-full.icon.icon-volume-full[title="%MUTE%"] + .btn.volume-mute.icon.icon-volume-mute[title="%UNMUTE%"]',
                        "volumeSlider.hidden": {
                            volumeBar: {
                                front: ".handle",
                                background: null,
                                extraZone: ".left + .right"
                            }
                        }
                    },
                    cinema: '.btn.normal.icon.icon-size-large[title="%LARGE_PLAYER%"] + .btn.large.icon.icon-size-medium[title="%SMALL_PLAYER%"]',
                    options: '.btn.icon.icon-quality[title="%OPTIONS_LOADING%"] + .popup.optionsPopup > div.switchers + ul',
                    autoplay: ".thumb > .thumbIcon",
                    actionTags: 'i.btn.icon.icon-action-tags[title="%JUMP_TO_ACTION%"]',
                    airplay: '.btn.airplayBtn[title="%AIRPLAY%"] > .icon.airplay-icon',
                    'chromecast[title="%CHROMECAST%"]': null,
                    logo: null,
                    cover: null,
                    leftVolumeBarCover: null,
                    rightVolumeBarCover: null
                },
                background: null,
                seekBar: {progressPadding: {progressOverflow: {background: null, progress: null}, handle: null}}
            },
            forwardRewind: {
                fastForwardCont: ".forwardText + button.fastForward > i.icon.icon-play + i.icon.icon-play + i.icon.icon-play",
                rewindCont: ".rewindText + button.rewind > i.icon.icon-play + i.icon.icon-play + i.icon.icon-play"
            },
            actionTagsScreen: null,
            eventCatcher: null,
            ccContainer: null,
            playerStateIcon: {
                play: ".icon.icon-play",
                pause: ".icon.icon-pause",
                buffering: `svg[viewBox=0 0 850 850] > g[html='${'<path class="' + f + 'normal" d="M164,661c-53-59-87-136-90-220H0c4,105,45,200,112,272L164,661z"></path><path class="' + f + 'normal" d="M186,167c58-54,135-89,220-93V0C301,5,205,48,134,115L186,167z"></path><path class="' + f + 'normal" d="M74,410c4-85,37-161,90-220l-52-52C45,209,4,305,0,410H74z"></path><path class="' + f + 'faded1" d="M437,0v74c86,3,164,37,224,90l52-52C640,45,543,3,437,0z"></path><path class="' + f + 'faded3" d="M776,440c-4,86-39,164-94,224l52,52C803,644,846,547,850,440H776z"></path><path class="' + f + 'faded2" d="M683,186c55,59,90,137,94,224H850c-4-107-47-203-115-276L683,186z"></path><path class="' + f + 'normal" d="M406,776c-85-5-162-39-220-93l-52,52c72,68,167,110,272,115V776z"></path><path class="' + f + 'normal" d="M661,686c-60,54-138,87-224,90V850c106-3,203-45,276-112L661,686z"></path>'}']`,
                background: null
            },
            castOverlay: {castText: null, castLogo: null},
            share: '.btn.icon.icon-share-round[title="%SHARE%"][tooltipPosition=left]',
            "thumbnails.hidden": {
                rect: {
                    actionTagTitle: null,
                    crop: {sprite: "img.image", shadow: null},
                    selectedTime: "span"
                }, arrow: null
            },
            "tooltip.hidden": {title: null, arrow: null},
            topBar: {content: {title: "span"}, background: null},
            contextMenu: {
                content: {
                    'copyUrlVideo[html="%COPY_URL%"]': null,
                    'copyUrlVideoTime[html="%COPY_URL_CURRENT_TIME%"]': null,
                    'copyEmbed[html="%COPY_EMBED_CODE%"]': null,
                    'loop[html="%LOOP%"]': null,
                    'shortcuts[html="%KEYBOARD_HELP%"]': null,
                    'about[html="%ABOUT%"]': null
                }
            },
            versionsInfo: {
                copyCloseDiv: '.title[html="Debug Info"] + .hideVersionMenu + .copyMenu .btn.icon.icon-copy',
                playerVersions: ".playerVersionContainer.debugContainer + .streamingInfoContainer.debugContainer + .adRollInfoContainer.debugContainer"
            },
            keyboardShortcuts: {hideShortcuts: 'span[html="&times;"]', shortcutInfo: null},
            videoWrapper: 'video source[type="video/mp4"]'
        }, Kn = {
            controls: {
                bar: ".controlBar",
                container: ".controlBar .front",
                play: ".play",
                pause: ".pause",
                replay: ".replay",
                bigPlay: ".playerStateIcon",
                nextVideoTooltip: ".nextVideoTooltip",
                autoplay: {button: ".autoplay"},
                time: {container: ".time", elapsed: ".elapsed", total: ".total"},
                fullscreen: {button: ".fullscreen", on: ".fullscreenOn", off: ".fullscreenOff"},
                chromecast: {
                    container: ".chromecast",
                    button: ".chromecast .chromecastBtn",
                    overlay: {container: ".castOverlay", text: ".castOverlay .castText", logo: ".castLogo"}
                },
                actionTags: {button: ".actionTags", icon: "i.icon.icon-action-tags"},
                airplay: {button: ".airplay", icon: ".airplay .icon"},
                cinema: {button: ".cinema", normal: ".cinema .normal", large: ".cinema .large"},
                volume: {
                    button: ".volume",
                    low: ".btn.volume-low",
                    full: ".btn.volume-full",
                    mute: ".btn.volume-mute",
                    slider: {
                        container: ".volumeSlider",
                        zone: ".volumeBar",
                        mask: ".volumeBar .front",
                        handle: ".handle",
                        extraClickZone: ".left, .right",
                        covers: ".leftVolumeBarCover, .rightVolumeBarCover"
                    }
                },
                seekBar: {
                    container: ".seekBar",
                    bar: ".seekBar .progressPadding",
                    buffer: ".seekBar .progressOverflow",
                    background: ".seekBar .progressOverflow .background",
                    progress: ".seekBar .progressOverflow .progress",
                    handle: ".seekBar .handle"
                },
                options: {
                    button: ".options .btn",
                    qualityList: ".optionsMenu .quality",
                    qualityListItems: ".optionsMenu .quality li",
                    switchList: ".optionsMenu .switches",
                    subPageHeader: ".optionsMenu .subPage .header",
                    subSubPageHeader: ".optionsMenu .subSubPage .header",
                    subPageContent: ".optionsMenu .subPage .content",
                    subSubPageContent: ".optionsMenu .subSubPage .content",
                    ccContainer: ".ccContainer"
                },
                logo: ".controlBar .logo"
            },
            actionTag: ".actionTag",
            adRoll: {
                container: ".adRollContainer",
                title: ".adRollContainer .adRollTitle",
                titleText: ".adRollContainer .adRollTitleText",
                skipButton: ".adRollContainer .adRollSkipButton div",
                timeElapsed: ".adRollContainer .adRollTimeElapsed",
                link: ".adRollContainer .adRollLink",
                eventCatcher: ".adRollEventCatcher",
                cta: {
                    image: ".adRollContainer .adRollCTA .image",
                    container: ".adRollContainer .adRollCTA .ctaContainer",
                    title: ".adRollContainer .adRollCTA .title",
                    subtitle: ".adRollContainer .adRollCTA .subtitle",
                    button: ".adRollContainer .adRollCTA .button"
                }
            },
            eventCatcher: ".eventCatcher",
            share: ".share",
            thumbnails: {
                container: ".thumbnails",
                rect: ".thumbnails .rect",
                image: ".thumbnails img.image",
                sprite: ".thumbnails .sprite",
                arrow: ".thumbnails .arrow",
                selectedTime: ".thumbnails .selectedTime",
                actionTagTitle: ".thumbnails .actionTagTitle"
            },
            videoErrorMessage: {container: ".videoErrorMessage", text: ".videoErrorMessage p"},
            topBar: {container: ".topBar", title: ".topBar .title span", share: ".topBar .share"},
            tooltip: {container: ".tooltip", title: ".tooltip .title", arrow: ".tooltip .arrow"},
            contextMenu: {
                container: ".contextMenu",
                copyUrlVideo: ".contextMenu .copyUrlVideo",
                copyUrlVideoTime: ".contextMenu .copyUrlVideoTime",
                copyEmbed: ".contextMenu .copyEmbed",
                loop: ".contextMenu .loop",
                about: ".contextMenu .about",
                shortcuts: ".contextMenu .shortcuts"
            },
            versionsInfo: {
                container: ".versionsInfo",
                copyCloseDiv: {
                    container: ".copyCloseDiv",
                    hideVersionMenu: ".copyCloseDiv .hideVersionMenu",
                    copyMenu: ".copyCloseDiv .copyMenu"
                },
                playerVersions: {
                    container: ".playerVersions",
                    versionInfo: ".playerVersions .playerVersionContainer",
                    streamingInfo: ".playerVersions .streamingInfoContainer",
                    adRollInfo: ".playerVersions .adRollInfoContainer",
                    adaptiveInfo: ".playerVersions .adaptiveDetails"
                }
            },
            keyboardShortcuts: {
                container: ".keyboardShortcuts",
                hideShortcuts: ".keyboardShortcuts .hideShortcuts",
                shortcutInfo: ".keyboardShortcuts .shortcutInfo"
            },
            hotspots: {
                container: ".seekBar .hotspots",
                svg: ".hotspots svg",
                polygon: ".hotspots polygon",
                progress: ".hotspots .hotspotsFill"
            },
            bufferingWheel: ".playerStateIcon .buffering",
            forwardRewind: {
                container: ".forwardRewind",
                fastForwardCont: ".forwardRewind .fastForwardCont",
                rewindCont: ".forwardRewind .rewindCont",
                fastForward: ".fastForwardCont .fastForward",
                forwardText: ".fastForwardCont .forwardText",
                rewind: ".rewindCont .rewind",
                rewindText: ".rewindCont .rewindText"
            },
            actionTagsScreen: {container: ".actionTagsScreen", pills: ".actionTagPill"},
            gridMenu: {
                thumbnailsContainer: ".gridContainer",
                thumbnailsGrid: ".thumbnailsGrid",
                thumbnailsWrapper: ".gridWrapper",
                thumbnailsItem: ".thumbnailsGrid .gridItem .info",
                buttonContainer: ".controlBar .front",
                gridHeader: ".gridContainer .gridHeader",
                controls: {button: ".grid"}
            },
            videoPoster: {
                container: ".videoPoster",
                source: ".videoPoster picture source",
                image: ".videoPoster picture img"
            },
            videoWrapper: {
                container: ".videoWrapper",
                video: ".videoWrapper video",
                source: ".videoWrapper video source"
            }
        };
        var zn = n(163), jn = n.n(zn);
        const Qn = [{
            selectors: [".controlBar .cc.enabled .btn", ".controlBar .options .btn.HD:after", ".controlBar .options .btn.K2:after", ".controlBar .options .btn.K4:after", ".controlBar .volumeBar .front", ".versionsInfo .playerVersions::-webkit-scrollbar-thumb", ".nextVideoTooltip .thumb .preloadLine", ".seekBar .progress", ".optionsMenu .switch.enabled span", ".controlBar .autoplay.active .thumb"],
            styles: ["background-color: MGP_themeColor"]
        }, {
            selectors: [".actionTagsScreen .actionTagPill span.tagTime", ".nextVideoTooltip .text .title", "body .debugPanel .consoleTerminalWrapper:before"],
            styles: ["color: MGP_themeColor"]
        }, {
            selectors: [".controlBar .chromecast .chromecastBtn"],
            styles: ["--connected-color: MGP_themeColor"]
        }, {
            selectors: [".playerStateIcon .buffering svg path.normal"],
            styles: ["fill: MGP_themeColor"]
        }, {
            selectors: [".playerStateIcon .buffering svg path.faded1"],
            styles: ["fill: MGP_themeColor(-0.3)"]
        }, {
            selectors: [".playerStateIcon .buffering svg path.faded2"],
            styles: ["fill: MGP_themeColor(-0.5)"]
        }, {selectors: [".playerStateIcon .buffering svg path.faded3"], styles: ["fill: MGP_themeColor(-0.7)"]}], Wn = {
            player: "#0080ff",
            pornhub: "#f6921e",
            modelhub: "#ff9000",
            redtube: "#af1820",
            youporn: "#ec567c",
            tube8: "#c01b27",
            thumbzilla: "#1bbc9d",
            xtube: "#ff0102"
        }, qn = `${f}theme-styles`;
        let Xn, Jn;

        function $n(e) {
            return e.replace(/MGP_themeColor(\(([\d-.]+)\))?/g, ((...e) => o(e[2]) || z(e[2]) ? Xn : function (e, t) {
                (e = String(e).replace(/[^0-9a-f]/gi, "")).length < 6 && (e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2]), t = t || 0;
                let n, r = "#";
                for (let i = 0; i < 3; i++) n = parseInt(e.substr(2 * i, 2), 16), n = Math.round(Math.min(Math.max(0, n + n * t), 255)).toString(16), r += ("00" + n).substr(n.length);
                return r
            }(Xn, e[2])))
        }

        function Zn(e) {
            let t = "\n";
            return Qn.length ? (l(Qn, (n => {
                l(n.selectors, ((r, i) => {
                    const a = 1 === n.selectors.length || i === n.selectors.length - 1;
                    t += `${r.includes("body") ? "" : "#" + e} ${r}${a ? "" : ","}\n`
                })), t += `{\n\t${n.styles.join("\n\t")};\n}\n`
            })), $n(t).replace(/\.([a-zA-Z_][0-9a-zA-Z_-]+)/g, (e => "." + f + e.substring(1)))) : ""
        }

        const er = {
            init: function (e, t = {}) {
                Xn = function (e) {
                    return e.customColor || Wn[e.themeCode] || Wn.player
                }(t), Jn || (Jn = ke(`style[id="${qn}"]`), document.head.appendChild(Jn)), -1 === Jn.innerHTML.indexOf(e) && (Jn.innerHTML += Zn(e))
            }, getColors: () => Wn, getThemeColor: () => Xn
        };
        const tr = function (e, t, n) {
            const {is: r, os: i, browser: a, platform: s} = H.get(),
                d = new Ut(n.extendedLocales, n.locale), {subscribe: c} = de.get(e);
            let p, u, g, m;
            return function () {
                er.init(e, n.theme);
                const h = `${f}skin_${t}`;
                if (!document.getElementById(h)) {
                    const e = document.createElement("div"), t = document.body;
                    e.id = h, e.style.display = "none", e.innerHTML = jn().replace(/(class=['"]+)(.+?)(['"]+)|(class=)([a-zA-Z_][0-9a-zA-Z-_]+)/g, ((e, t, n, r, i, a) => "class=" === i ? i + f + a : t + f + n.split(" ").join(` ${f}`) + r)), t.insertBefore(e, t.firstChild)
                }
                !function () {
                    if (p = document.getElementById(e), !p) return void I('You need to create a container element for the player with ID "#' + e + '".');
                    (function () {
                        if (St(p, s), !a) return !1;
                        r.tablet && St(p, "tablet");
                        o(a.name) || St(p, a.name);
                        a.version || St(p, a.name + Math.floor(a.version));
                        o(i.name) || St(p, i.name);
                        n.mainRoll.live && St(p, "livestream");
                        St(p, "container")
                    })(), n.embeds.enabled || r.mobile || St(p, "hideControls");
                    n.embeds.enabled && St(p, "embedded")
                }(), p.innerHTML = function () {
                    let e = Re(Vn);
                    return e = d(e), e
                }(), function () {
                    const t = {
                        disableRemotePlayback: "",
                        preload: n.videoPreload,
                        playsinline: "",
                        controlslist: "nodownload"
                    };
                    if (u = Ce(`#${e} .videoWrapper`), g = p.getElementsByTagName("video")[0], m = g.getElementsByTagName("source")[0], n.isVr) {
                        const e = document.createElement("canvas");
                        e.innerHTML = "This feature is not supported on your browser!", u.appendChild(e), t.style = "display:none;", t.crossorigin = "anonymous"
                    }
                    n.embeds.enabled && r.ios && i.version < 10 && (t["x-webkit-airplay"] = "deny");
                    l(t, ((e, t) => {
                        g.setAttribute(t, e)
                    }))
                }(), c("player.destroyed", (() => {
                    p.innerHTML = "", xt(p, p.getAttribute("class").split(" "))
                }))
            }(), {
                selectors: bt(Kn, e),
                playerContainerElement: p,
                videoWrapper: u,
                playerElement: g,
                playerElementSource: m
            }
        };

        function nr(e) {
            const {is: t, os: n, features: r} = H.get(e);
            return function () {
                const t = e.theme;
                !t.themeCode && e.quickSetup && (t.themeCode = e.quickSetup), !t.customLogo && e.features.customLogo && (t.customLogo = e.features.customLogo), !t.customColor && e.features.featureColor && (t.customColor = e.features.featureColor)
            }(), function () {
                if ((e.features.minIosForPreroll || e.features.minAndroidForPreroll) && (e.features.minIosForAdRoll = e.features.minIosForPreroll, e.features.minAndroidForAdRoll = e.features.minAndroidForPreroll, delete e.features.minIosForPreroll, delete e.features.minAndroidForPreroll), l(Object.entries({
                    minIosForAdRoll: 8,
                    minAndroidForAdRoll: 4.4
                }), (([t, n]) => {
                    parseFloat(e.features[t]) < n && (e.features[t] = n)
                })), e.preroll) {
                    e.preroll.startPoint = 0;
                    const t = Ae({}, e.preroll);
                    e.adRolls = p(t) ? t : [t], delete e.preroll
                }
                p(e.adRolls) && !c(e.adRolls) ? e.adRolls = Y(e.adRolls, (({startPoint: e}) => 0 == e || 100 == e)) : e.adRolls = []
            }(), function () {
                const r = ["mp4", "mp4x2"];
                r.unshift("hls"), e.mainRoll.fallbackOrder = r;
                const i = e.mainRoll.fallbackOrder.filter((e => "hls" !== e && "dash" !== e));
                (t.android && n.version <= 4 || t.windows && n.version < 6 && (t.firefox || t.ie)) && (e.mainRoll.fallbackOrder = i)
            }(), e.env = e.env || e.quickSetup || "undefined", e.startOffset = j(e.startOffset, !1) ? parseFloat(e.startOffset) : 0, t.ie && t.desktop && e.startOffset && (e.autoplay = !1), e.embeds.enabled && (e.hotspots.enabled = !1, Ae(e.features, {
                ignorePreferences: !0,
                topBar: !0,
                share: !1,
                cinema: !1,
                options: !1,
                hotspots: !1,
                chromecast: !1
            })), t.tablet && !t.live && (Ae(e.features, {
                ignorePreferences: !0,
                cinema: !1,
                tooltips: !1,
                volume: !1
            }), e.features.mute = e.features.autoplay && t.macos && r.iPad, e.videoPreload = "none"), t.mobile && (e.features.qualityMenu = !0, e.features.ignorePreferences = !0, e.shakaConfig.defaultBandwidthEstimate = 75e4, e.seekPreview.blur = 1, e.videoPreload = "none"), function () {
                const {overlays: t, overlayTextAd: n} = e.mainRoll;
                n && n.displayText.length && (K(n, {
                    label: n.displayText,
                    time: n.showDelay,
                    duration: n.displayDuration,
                    bottom: "60px",
                    fontScale: "5%",
                    hCentered: !0
                }), t && t.push(n))
            }(), t.desktop && t.safari && K(e, {videoPreload: "none"}), t.uc && (e.preroll = {}), e.mainRoll.title = Be(e.mainRoll.title), function () {
                if (t.live) {
                    const t = ["fullscreen", "options", "volume"];
                    delete e.startOffset, e.mainRoll.live = !0, l(e.features, ((n, r) => {
                        he(n) && (e.features[r] = t.includes(r))
                    }))
                }
            }(), e.mainRoll.closedCaptions && "string" == typeof e.mainRoll.closedCaptions && (e.mainRoll.closedCaptions = {
                en: {
                    url: e.mainRoll.closedCaptions,
                    label: "English"
                }
            }), e
        }

        const rr = function (e, t) {
            const {addClick: n} = de.get(t), r = ".videoErrorMessage", i = ".videoErrorMessage p",
                a = {videoErrorMessage: {centered: "span.icon.icon-error + p"}};
            let o = !1;
            return {
                show: function (t) {
                    const s = Re(a), l = Ce(r);
                    e.insertAdjacentHTML("beforeend", s), Ce(i).innerHTML = t, St(e, "videoUnavailable"), o = !0, n(l, void 0, !0, !0)
                }, visible: () => o
            }
        };
        const ir = function (e, t) {
            const {subscribe: n} = de.get(t.playerId), r = t.mainRoll.videoUnavailableMessages,
                i = new rr(e, t.playerId);
            let a = !1;
            n("nextvideo.redirected", (() => {
                a = !0
            })), n("source.unavailable", (e => {
                let t = e.message || "";
                t = t && t in r ? t : "default", setTimeout((() => {
                    a || i.visible() || i.show(r[t])
                }), 1e3)
            }))
        };
        const ar = function (e, t) {
            const {fire: n, subscribe: r} = de.get(t.playerId);
            let i = !1;

            function a() {
                return !t.features.speed || t.embeds.enabled
            }

            function o() {
                if (a()) return !1;
                {
                    const e = st.get("playbackRate");
                    return void 0 !== e ? e : 1
                }
            }

            function s(t) {
                e.playbackRate = t
            }

            function l(t, n = !1) {
                return !a() && (e.playbackRate !== t && (i = n, s(t)), st.set("playbackRate", t), !0)
            }

            function d() {
                return .5 === o() ? l(1, !0) : l(.5, !0), !0
            }

            return e.onratechange = () => {
                const t = Math.max(.5, Math.round(2 * e.playbackRate) / 2);
                n("playback.speed.changed", {playbackRate: t, manual: i}), i = !1
            }, r("adroll.started", (() => {
                s(1)
            })), r("adroll.ended", (() => {
                l(o(), !0)
            })), r("source.ready", (() => {
                const e = o() || 1;
                1 !== e && l(e)
            })), r(["playback.speed.set"], (e => l(e.playbackRate, e.manual))), r("playback.speed.toggle", (e => {
                e.manual, d()
            })), {get: o, set: l, enabled: () => !a(), disabled: a, toggle: d}
        };
        const or = function (e) {
            const {fire: t, stopOrPrevent: n, subscribe: r} = de.get(e);
            let i, a, o = !1;

            function s(e) {
                const n = function (e) {
                    const t = {description: "An unknown error occurred.", name: "VIDEO_ERROR"};
                    return e && j(e) && Object.keys(Array.from(Array(5))).includes(e) && [{
                        code: 1,
                        name: "MEDIA_ERR_ABORTED",
                        description: "Video playback aborted by user."
                    }, {
                        code: 2,
                        name: "MEDIA_ERR_NETWORK",
                        description: "A network error caused the video download to fail part-way."
                    }, {
                        code: 3,
                        name: "MEDIA_ERR_DECODE",
                        description: "The video playback was aborted due to a corruption problem or because the video used features your browser did not support."
                    }, {
                        code: 4,
                        name: "MEDIA_ERR_SRC_NOT_SUPPORTED",
                        description: "The video could not be loaded, either because the server or network failed or because the format is not supported."
                    }].find((t => t.code === e)) || t
                }((this.error || e.target.error || {}).code).name;
                t("source.error", {e, adaptive: o, fatal: !0, message: n, model: a, format: i})
            }

            function d(e) {
                if (n(e, !0, !0), !Pe(r = this.src) || window.location.href === r || -1 === ["chk", "m3u8", "m4s", "mp4", "mpd", "ts", "webm"].indexOf(r.split("?")[0].split(".").pop())) return !1;
                var r;
                t("source.error", {
                    e,
                    adaptive: o,
                    fatal: !0,
                    label: "sourceError",
                    message: "SOURCE_ERROR",
                    model: a,
                    format: i
                })
            }

            function c(e) {
                if ("stalled" !== e.type) return;
                M("MGP: video " + e.type, e), t("source.stalled", {stalled: !0});
                const n = () => {
                    this.readyState >= 3 && t("source.stalled", {stalled: !1}), this.removeEventListener("canplay", n)
                };
                this.addEventListener("canplay", n)
            }

            return r("source.ready", (e => {
                i = e.format, a = e.model, o = e.adaptive
            })), {
                init: function (e, t) {
                    G(e) && (e.removeEventListener("error", d), e.addEventListener("error", d)), G(t) && (t.removeEventListener("error", s), t.addEventListener("error", s), l(["abort", "stalled", "suspend"], (e => {
                        t.removeEventListener(e, c), t.addEventListener(e, c)
                    })))
                }, fire: function (e, n, r) {
                    t("source.error", r)
                }
            }
        };
        const sr = function (e, n, o = !0) {
            if (!t(e)) throw new TypeError('utils/sort: First argument is not of type "Function".');
            let l;
            E(n) ? l = (e, t) => e[n] === t[n] ? 0 : e[n] > t[n] ? 1 : -1 : a(n) && (l = n);
            const d = o ? Mn(e) : e;
            return s(d) ? Array.prototype.sort.call(d, l) : r(d) ? new Set(Array.from(d).sort(l)) : v(i(d).sort(l), ((e, t) => (e[t] = d[t], e)), new Object)
        };
        const lr = class {
            constructor(e, t) {
                this.time = (new Date).getTime(), this.hasSources = 0, this.format = t, this.resolutions = [], this.mediaDefinition = e || [], this.remote = [], this.sources = {}, this.defaultQuality = {}, this.loading = !1
            }

            getDefaultQualityFromConfig() {
                const e = {auto: !1};
                return l(this.sources, (n => {
                    p(n.quality) || "auto" === n.quality ? n.defaultQuality && (j(n.defaultQuality, !1) && t(this.sources[n.defaultQuality]) && (e.quality = n.defaultQuality), e.auto = !0) : n.format === this.format && !0 === n.defaultQuality && (e.quality = n.quality)
                })), e.quality || (e.auto = !0), e
            }

            getMaxResolution() {
                return (e => {
                    const t = e => parseFloat(String(e.quality).replace(/[_p]/gi, "."));
                    return e.sort(((e, n) => {
                        const r = t(e), i = t(n);
                        return r < i ? 1 : r > i ? -1 : 0
                    }))[0]
                })(Object.values(this.sources)).quality || !1
            }

            getMaxQuality() {
                return {auto: !1, quality: this.getMaxResolution()}
            }

            getDefaultQuality() {
                return this.getDefaultQualityFromConfig() || this.getMaxQuality()
            }

            getRemotes() {
                let e = "";
                const t = this.format;
                return l(this.mediaDefinition, (n => {
                    n.format === t && !0 === n.remote && n.videoUrl && (e = n.videoUrl)
                })), e
            }

            filterUnsupportedFormats(e) {
                const t = this.format;
                for (let n = e.length - 1; n >= 0; n--) {
                    const r = e[n];
                    (r.format !== t || r.format === t && r.remote) && e.splice(n, 1)
                }
            }

            getQualityNumber(e) {
                return "number" == typeof e ? e : 0
            }

            sortSourcesByQuality(e) {
                return sr(e, ((e, t) => {
                    const n = this.getQualityNumber(e.quality);
                    return this.getQualityNumber(t.quality) - n
                }))
            }

            filterSources(e) {
                return new Promise((t => {
                    this.sanitizeSources(e), this.filterUnsupportedFormats(e), t(e)
                }))
            }

            sanitizeSources(e) {
                return l(e, ((t, n) => {
                    t.format || (t.format = "mp4"), "object" == typeof t.quality ? ([!0, "true"].includes(t.defaultQuality) ? t.defaultQuality = !0 : [!1, "false"].includes(t.defaultQuality) ? t.defaultQuality = !1 : t.defaultQuality = parseFloat(t.defaultQuality) || !1, l(t.quality, ((e, n) => {
                        t.quality[n] = parseFloat(e)
                    }))) : t.quality = parseFloat(`${t.quality}`.replace(/[^0-9]+/g, ".")) || void 0, e[n] = t
                })), e
            }

            createSourcesObject() {
                return new Promise((e => {
                    const t = Object.isFrozen(this.mediaDefinition),
                        n = t ? JSON.parse(JSON.stringify(this.mediaDefinition)) : this.mediaDefinition;
                    this.filterSources(Mn(n)).then((n => {
                        const r = this.sortSourcesByQuality(n), i = [], a = {};
                        let o = 0;
                        t || (this.mediaDefinition = O(Mn(this.mediaDefinition))), r.length && l(r, (e => {
                            o++, a[p(e.quality) ? "auto" : e.quality] = e, i.push(e.quality)
                        })), this.hasSources = o, this.resolutions = i.filter(((e, t, n) => n.indexOf(e) === t)), this.sources = a, e(a)
                    }))
                }))
            }

            getSource({quality: e, auto: n} = {}) {
                if (!this.sources) return !1;
                const r = this.sources[e] ? e : this.defaultQuality.quality, i = this.sources[n ? "auto" : r];
                if (!t(i)) return i;
                const {videoUrl: a, params: o} = i;
                return K(i, {urlWithParams: S(a, o), params: S("", o), url: a}), i
            }

            getUrl(e) {
                e = e || this.defaultQuality;
                let t = this.getSource(e);
                return t && "object" == typeof t.quality && (t = this.getSource(this.defaultQuality)), t.videoUrl || ""
            }

            getSources() {
                return this.sources
            }

            getResolutions() {
                return this.resolutions
            }

            getHasSources() {
                return this.hasSources
            }

            load() {
                const e = this;
                return new Promise(((t, n) => {
                    function r() {
                        e.hasSources ? t(!0) : n(!1)
                    }

                    if (e.remote = e.getRemotes(), !e.remote) return void e.createSourcesObject().then((() => {
                        e.defaultQuality = e.getDefaultQuality(), r()
                    }));
                    if (e.loading) return void n(!1);
                    e.loading = !0;
                    const i = Ve(e.remote, {}, !0), a = () => {
                        e.loading = !1
                    };
                    i.then((t => {
                        try {
                            const n = JSON.parse(t.data);
                            if (!p(n)) throw new TypeError("Failed to parse remote media data as array.");
                            e.mediaDefinition = n, a()
                        } catch (i) {
                            return void n(!1)
                        }
                        e.createSourcesObject().then((() => {
                            e.defaultQuality = e.getDefaultQuality(), r()
                        }))
                    })).catch((e => {
                        n(!1), a()
                    }))
                }))
            }
        };
        const dr = class extends lr {
            getMaxQuality() {
                return {auto: !0}
            }

            isAutoQuality(e) {
                return "auto" === e.quality || p(e.quality)
            }

            createAdditionalQualities(e) {
                return l(e, (t => {
                    p(t.quality) && t.quality.length && Pe(t.videoUrl) && (!function (t) {
                        l(t.quality, (n => {
                            e.push({
                                quality: n,
                                auto: !1,
                                format: t.format,
                                videoUrl: t.videoUrl,
                                params: t.params || !1,
                                defaultQuality: t.defaultQuality === n
                            })
                        }))
                    }(t), t.quality = "auto")
                })), e
            }

            convertSingleQualities(e) {
                const t = this, n = It(e, (e => t.isAutoQuality(e))), r = Y(e, (e => !t.isAutoQuality(e)));
                l(r, ((t, r) => {
                    e[r] = ye(t, {auto: !1, videoUrl: n ? n.videoUrl : t.videoUrl})
                })), n && (n.quality = "auto", n.auto = !0)
            }

            filterSources(e) {
                return new Promise(((n, r) => {
                    const i = () => {
                        1 === e.length ? this.createAdditionalQualities(e) : this.convertSingleQualities(e), n(e)
                    }, a = It(e, (e => this.format === e.format && ("auto" === e.quality || c(e.quality))));
                    1 === e.length && t(a) ? (D("*** MGP - Adaptive Model ***\nFetching qualities from manifest."), Ve(a.videoUrl).then((({data: t}) => {
                        a.quality = function (e, t) {
                            let n;
                            if ("hls" === t) n = [...e.matchAll(/#EXT-X-STREAM-INF.+RESOLUTION=\d+x(\d+)/gim)]; else {
                                if ("dash" !== t) return [];
                                n = [...e.matchAll(/<Representation.*?height="(\d+).*\/>/gim)]
                            }
                            return [...new Set(n.map((e => parseFloat(e[1]))))]
                        }(t, a.format), e = [a], i()
                    })).catch((() => {
                        r(e)
                    }))) : super.filterSources(e).then(i)
                }))
            }

            sanitizeSources(e) {
                const t = It(e, (e => this.isAutoQuality(e)));
                t && (t.quality = e.map((e => e.quality)).filter((e => j(e, !1)))), super.sanitizeSources(e)
            }
        };
        const cr = class extends dr {
            constructor(e) {
                super(e, "hls")
            }

            convertSingleQualities(e) {
                const t = It(e, (e => p(e.quality)));
                return t && (t.quality = "auto"), e
            }
        }, pr = [{rules: {browser: {name: "ie"}}, max: 1080}, {
            rules: {browser: {name: "edge", version: 18}},
            max: 1080
        }, {rules: {os: {name: "ios", version: 9.5}}, max: 1080}];
        const ur = class extends lr {
            constructor(e, t) {
                super(e, t || "mp4"), this.mediaDefinition = this.mediaDefinition || e
            }

            filterSourcesByMaxQuality(e) {
                const t = this.getVideoQualityCap();
                return t ? (l(e, ((n, r) => {
                    p(n.quality) ? n.quality = n.quality.filter((e => this.getQualityNumber(e) <= t)) : this.getQualityNumber(n.quality) > t && e.splice(r, 1)
                })), e) : e
            }

            getVideoQualityCap() {
                if (!pr.length) return null;
                let e, t;
                const n = H.get(), r = Y(pr, (r => (e = !0, t = r.rules, Object.keys(t).forEach((r => {
                    e = n[r].name === t[r].name && n[r].version <= (t[r].version || 1e4)
                })), e)));
                return r.length ? r[0].max : null
            }

            filterSources(e) {
                return new Promise((t => {
                    super.filterSources(e).then((() => {
                        this.filterSourcesByMaxQuality(e), t(e)
                    }))
                }))
            }
        };
        var gr = n(319), mr = n.n(gr);
        window.Hls = mr();
        const fr = function (t, n, r, i, o) {
            const s = !1, l = ["hls"], c = n.mainRoll.live, {fire: p, subscribe: u} = de.get(n.playerId), g = new Dt({
                error: !1,
                errorCount: 0,
                lastErrorTime: 0,
                levelsLoaded: !1,
                seeking: !1,
                videoReady: !1,
                videoStarted: !1
            }, n.playerId, "HlsPlayer"), m = {}, f = {bufferStalledError: 3}, h = {};
            let _, v, b, y, A, E = !1, T = !1, w = !1, x = -1, k = null, C = n.hlsConfig;
            if (!window.Hls.isSupported()) return I("Hls: browser not supported!"), !1;

            function L(e) {
                st.set("adaptive", {hlsLevel: e.level})
            }

            function R(e) {
                return function (e, t, n = "height", r = 20) {
                    const i = parseInt(t, 10);
                    return j(i) && Y(e, ((e, a) => (e.level || (e.level = a), i < 50 ? a === i : e.height === i || e[n] < t + r && e[n] > t - r)))[0] || null
                }(v.levels, e)
            }

            function P(e) {
                d(e) || (v.config.xhrSetup = (t, n) => {
                    n = S(n, e), t.open("GET", n, !0)
                })
            }

            function M(t, n, r = "", o) {
                const l = R(t.quality) || !1;
                if (k = e(k) && j(i) ? R(i) : k, l) {
                    s, T = !1, P(r);
                    const e = l.level;
                    if (g.get("levelsLoaded") && (b.height !== l.height ? v.nextLevel = e : B(l.height)), x < 0 && k) {
                        const t = e > k.level ? e : k.level;
                        s, v.autoLevelCapping = t
                    }
                    return v.loadLevel = e, L(l), a(o) && o(), !0
                }
                return !1
            }

            function D(e, t = !1, n = "", r) {
                const {init: i, quality: o} = e;
                if (T = !0, P(n), i && j(o, !1) && x < 0 && o <= v.levels[v.levels.length - 1].height) {
                    const e = R(o).level;
                    s, v.autoLevelCapping = e
                }
                return b && g.get("levelsLoaded") && B(b.height), v.nextLevel = -1, v.loadLevel = -1, a(r) && r(), !0
            }

            function O() {
                return !0
            }

            function B(e) {
                e = j(e, !1) ? parseFloat(e) : e, p("source.adaptive.quality.changed", {quality: e, auto: T})
            }

            function N(e, t, n) {
                return {
                    errorReport: {
                        message: e,
                        name: "Hls Player",
                        errorData: {
                            type: t,
                            fatal: void 0 === (n = n || {}).fatal || n.fatal,
                            message: n.response && n.response.text || n.details || t,
                            library: "hls.js",
                            time: n.frag && n.frag.start || 0
                        }
                    }
                }
            }

            return function () {
                const e = st.get("adaptive");
                T = "auto" === st.get("quality"), e && e.hlsLevel && (C.startLevel = e.hlsLevel);
                j(C.autoLevelCapping, !1) && (x = parseInt(C.autoLevelCapping, 10));
                C.debug = s, o && (C = K(C || {}, {
                    backBufferLength: 0,
                    enableWorker: !0,
                    highBufferWatchdogPeriod: 1,
                    lowLatencyMode: !0,
                    maxBufferLength: 1,
                    liveBackBufferLength: 0,
                    liveDurationInfinity: !0,
                    liveMaxLatencyDuration: 5,
                    liveSyncDuration: 0
                }))
            }(), v = new window.Hls(C), v.attachMedia(t), function () {
                (function () {
                    const e = () => {
                        !function () {
                            p("source.adaptive.ready", {url: A}), !g.get("videoReady") && E && B(E.height);
                            g.set("videoReady", !0)
                        }(), t.removeEventListener("canplay", e)
                    };
                    t.addEventListener("canplay", e)
                })(), u("playback.playing", (() => {
                    g.set("videoStarted", !0)
                })), u(["playback.playing", "playback.paused", "playback.ended", "playback.seek.ended"], (() => {
                    g.set("seeking", !1), _ && (clearTimeout(_), _ = void 0)
                })), c && (u("playback.paused", (() => {
                    w = !0, v.stopLoad()
                })), u("playback.playing", (() => {
                    w && (w = !1, v.startLoad())
                })));
                v.on(window.Hls.Events.MANIFEST_LOADED, ((e, t) => {
                    g.set("videoReady", !0), 0 === v.autoLevelCapping && (v.autoLevelCapping = -1, y.quality = v.levels[0].height), y.auto ? D({
                        ...y,
                        init: !0
                    }, !1, r) : M(y, !1, r), v.startLoad(-1), g.set("levelsLoaded", !0), p("source.adaptive.fragment.changed", {url: t.url})
                })), v.on(window.Hls.Events.MANIFEST_PARSED, ((e, t) => {
                    x > -1 && t.levels && (v.autoLevelCapping = Math.max.apply(Math, t.levels.map(((e, t) => e.height && e.height <= x ? t : -1))))
                })), v.on(window.Hls.Events.ERROR, ((e, t) => {
                    if ("otherError" === t.type) return !1;
                    p("source.adaptive.waiting");
                    const n = () => {
                        A = void 0, g.set("error", !0), function (e, t, n) {
                            p("source.adaptive.error", N(e, t, n))
                        }("Fatal error during adaptive playback", e, t)
                    }, r = () => {
                        _ || (_ = setTimeout((() => {
                            n()
                        }), 1e3 * C.maxWaitingTime))
                    };
                    if (t.fatal) n(); else {
                        if (!t.details) return;
                        h[t.details] = h[t.details] || {count: 0};
                        const e = h[t.details];
                        switch (e.count++, e.time = (new Date).getTime(), t.details) {
                            case"bufferStalledError":
                                if (e.count < f[t.details]) return;
                                r()
                        }
                    }
                })), v.on(window.Hls.Events.LEVEL_SWITCHING, ((e, t) => {
                    b = v.levels[t.level], L(b), g.get("videoReady") ? B(b.height) : E = b
                })), v.on(window.Hls.Events.FRAG_CHANGED, ((e, t) => {
                    const n = m[t.frag.sn] || {begin: 0, end: 0};
                    p("source.adaptive.fragment.changed", {
                        quality: v.levels[t.frag.level].height,
                        id: t.frag.sn,
                        size: t.frag.loaded,
                        isAuto: t.frag.autoLevel,
                        downloadTime: n.end - n.begin,
                        bandwidth: 8 * t.frag.loaded / (n.end - n.begin) * 1e3,
                        url: t.frag._url || t.frag.relurl
                    })
                })), v.on(window.Hls.Events.FRAG_LOADING, ((e, t) => {
                    m[t.frag.sn] = {begin: (new Date).getTime(), end: 0}
                })), v.on(window.Hls.Events.FRAG_LOADED, ((e, t) => {
                    m[t.frag.sn].end = (new Date).getTime()
                })), s
            }(), {
                name: "hlsjs", supportedFormats: l, setAutoQuality: D, setQuality: M, getQuality: function () {
                    return void 0 !== b && b.height
                }, load: function (e, t, n) {
                    return new Promise(((r, i) => {
                        if (!e || A === e || l.indexOf(n) < 0) {
                            return i(N("HLS controller failed to load source.", "hlsError_" + (e ? "sourceAlreadyLoaded" : "missingSource")))
                        }
                        return A = e, v.loadSource(e), y = t, r(!0)
                    }))
                }, unload: O, destroy: function () {
                    return new Promise((e => (v.destroy(), e(!0))))
                }
            }
        };

        function hr(e, t, n, r) {
            const s = ["hls", "dash"],
                d = ["hls", "dash", "hlsNative"], {is: p, os: u, browser: g, embed: m, features: f, stream: h} = H.get(), {subscribe: _, fire: v} = de.get(n.playerId),
                b = new or(n.playerId);
            let y, A, E, T, w, S, x, k, C, L, R, P, O, B, N = m ? 0 : n.startOffset, F = hr.states.NOT_READY, U = 1,
                Y = !1, G = !1, V = !1, z = !1, Q = !1, W = !1, q = !1, X = !n.autoplay || !n.features.autoplay,
                J = n.mainRoll.duration, $ = {}, Z = "";
            const ee = new Dt({
                    started: !1,
                    playing: !1,
                    fallbacking: !1,
                    videoStalled: !1,
                    deferred: !1,
                    mainRollPlayed: !1,
                    changingQuality: !1
                }, n.playerId, "SourceController"), te = n.mainRoll, ne = te.videoUrl, re = n.eventTracking.videoId,
                ie = te.cdnTimeLimit;
            let ae = !1;
            const oe = {dash: dr, hls: dr, hlsNative: cr, mp4: ur, mp4x2: ur}, se = {};
            let le, ce, pe = m || !r, ue = !1;

            function ge(e, t, n) {
                q = !0, v("source.loading");
                const r = te.mediaDefinition, i = new oe[e](r, e);
                return se[e] = i, i.load().then(t, (() => {
                    n(), q = !1
                })), i
            }

            function me() {
                let e = (t = te.mediaDefinition, Array.from(new Set(t.map((e => e.format || "mp4")))).sort());
                var t;
                p.bot && (e = e.filter((e => e.includes("mp4")))), le = te.fallbackOrder.filter(((t, n) => e.includes(t) && te.fallbackOrder.indexOf(t) === n)), D("Fallback order: " + le.join(" -> "));
                let n = le[0] || !1;
                return "hls" === n && (p.ios || p.safari || f.iPad) && (n = "hlsNative"), "mp4" === n && -1 !== le.indexOf("mp4x2") && 2 === U && (n = "mp4x2"), n
            }

            function fe() {
                v("source.loaded", {...y.defaultQuality}), z = !0, M("sourceController - mainRollReadyCallback"), ke()
            }

            function he(e) {
                I("sourceController -" + y.format + " failed"), ve(), z = !1;
                const t = Oe();
                t ? (ee.set("fallbacking", !0), ue = t, y = ge(t, fe, (e => {
                    I("sourceController - Failed to load model: " + t), e && M("Error:", e), he()
                }))) : He("noSources"), v("source.fallback", {model: t})
            }

            function _e(e) {
                if (te.mediaDefinition = e || te.mediaDefinition, ue = me(), !ue) return v("source.empty"), void he();
                c($) || !1 !== $.deferred || (pe = !1), y = ge(ue, fe, (e => he())), ce = !Be(ue) && !pe, M("sourceController - Initial model:", y.format)
            }

            function ve(n = !1, r = !1, i) {
                ee.get("playing") && v("playback.pause"), l([t, e], (e => e.removeAttribute("src")));
                const o = () => {
                    v("source.unloaded"), r && _e(), a(i) && i()
                };
                n && De() ? Ee().then(o) : o()
            }

            function be(r, i, a = !1) {
                D("sourceController - setQuality", r, i, a);
                const s = y.getSource(r);
                if (pe) return Pe(s), void ye(r, a);
                if (!s) return void b.fire("Source Controller", "Requested source is not available", {
                    adaptive: Ne(),
                    fatal: !0,
                    type: "sourceController"
                });
                const l = Ae({}, s, r);
                F = hr.states.SWITCHING_SOURCE, v("source.quality.changed", r), x = [x, e.currentTime, 0].find((e => !o(e))), ee.set("changingQuality", !0), ye(r, a);
                const d = () => {
                    "function" == typeof i && i()
                };
                !Be() || p.ios || p.safari ? (ce = !0, function (t, n) {
                    M("sourceController - setSource", t), w = t, x = [k, x, N, e.currentTime, 0].find((e => !o(e)));
                    we(t.urlWithParams, (() => {
                        "function" == typeof n && n()
                    }))
                }(s, d)) : function (r, i, a = !1) {
                    D("sourceController - setAdaptiveSource", r, typeof i, a);
                    const o = r.params;
                    if (k = void 0, c(P)) !function (r) {
                        D("sourceController - initAdaptiveSourceController", r);
                        const i = (e, t = {}) => {
                            I(e, t), Ce(t)
                        };
                        if (c(P)) {
                            const t = !!j(O.quality) && O.quality;
                            if (P = new fr(e, n, r.params, t, h), c(P)) return void i("Error initializing adaptive controller:\n")
                        }
                        P.load(r.url, E, ue).then((() => {
                            D("sourceController - Adaptive Library: hlsjs"), t.src = ""
                        })).catch((e => {
                            i("Error loading source in hlsjs controller:\n", e)
                        }))
                    }(r); else {
                        const e = {auto: "auto" === r.quality, quality: r.quality};
                        "auto" === r.quality ? (B = Se(), e.quality = j(B.quality) ? B.quality : r.quality, P.setAutoQuality(e, a, o, i)) : P.setQuality({
                            auto: !1,
                            quality: r.quality
                        }, a, o, i)
                    }
                    F = hr.states.READY, "function" == typeof i && i()
                }(l, d, a)
            }

            function ye(e, t = !1) {
                if (m || !t) return !1;
                const {quality: n, auto: r = !1} = e, i = {auto: r};
                r || (i.quality = n), st.set("quality", i)
            }

            function Ee(e) {
                return P.destroy().then((() => (D("sourceController - adaptive controller was successfully destroyed!"), "function" == typeof e && e(), P = {}, !0))).catch((e => (I(["Error destroying adaptive controller", e]), !1)))
            }

            function Te(e, t = !0) {
                if (!e) return w || (w = y.getSource(E)), w;
                const n = y.getSource(e);
                return t && (w = n), n
            }

            function we(n, r) {
                var i, a;
                pe || n === S || (!function (t, n) {
                    M("sourceController - watchCanplayEvent", t, S, typeof n);
                    const r = p.edge && p.mobile ? "durationchange" : "canplay", i = () => {
                        ee.set("deferred", !1), Le(t), "function" == typeof n && n(), e.removeEventListener(r, i)
                    };
                    c(P) && e.addEventListener(r, i)
                }(n, r), t.src = n, S = n, p.bot || (i = !0, a = !0, b.init.call(null, !!i && t, !!a && e)), e.load(), function () {
                    if (!p.firefox || !y.format.includes("mp4") && !L) return;
                    const t = setTimeout((() => {
                        e.load()
                    }), 1e3);
                    _("playback.buffering", (() => {
                        clearTimeout(t)
                    }), !0)
                }())
            }

            function Se(e = y) {
                const t = st.get("quality"), n = {};
                if (m || !t) return n;
                const r = e.getSource(t);
                return r ? {quality: r.quality, auto: r.auto || !1} : n
            }

            m && !n.embeds.whitelisted && He("siteDisabled"), _("adroll.init", (({empty: e, preRoll: t, postRoll: n}) => {
                Q = e || !t, G = n, ke()
            })), _(["adroll.skipped", "adroll.empty"], (({startPoint: e}) => {
                Q = !0, e && 0 !== e ? 100 === e && (G = !1) : ke()
            })), _("adroll.ready", (e => {
                Q = !0, c(e) || (L = !0, Z = e.getSourceUrl(), ke())
            })), _("adroll.started", (() => {
                R = !0, ee.get("mainRollPlayed") || (pe = !0), ee.set({started: !0, playing: !0})
            })), _("adroll.ended", (({get: e}) => {
                R = !1, L = !1, pe = !1, e("last") && (W = !0, x = J, G = !1), 100 !== e("startPoint") && Re(E)
            })), _("playback.playing", (() => {
                L || (N > 0 && (N = 0), ee.set("mainRollPlayed", !0))
            })), _("playback.paused", (() => {
                ee.set("playing", !1)
            })), _("playback.ended", (() => {
                ee.set("playing", !1), Y = !(!L || !R) || G
            })), _("source.error", (e => {
                L ? ke() : ae && Be(y.format) || (k = e.time || 0, "chromecast" !== e.type && ce && (Oe() ? he() : He(e.label)))
            })), _("playback.speed.changed", (e => {
                function t() {
                    if (se.mp4 && !se.mp4.loading && se.mp4x2 && !se.mp4x2.loading) {
                        if ("mp4" === y.format && 2 === e.playbackRate && se.mp4x2.hasSources) y = se.mp4x2; else {
                            if (!("mp4x2" === y.format && e.playbackRate < 2 && se.mp4.hasSources)) return;
                            y = se.mp4
                        }
                        Te(), be({auto: !1, quality: w.quality})
                    }
                }

                U = e.playbackRate, "mp4" !== y.format && "mp4x2" !== y.format || (se.mp4 = se.mp4 || ge("mp4", t, (() => {
                })), se.mp4x2 = se.mp4x2 || ge("mp4x2", t, (() => {
                })), t())
            })), _("source.adaptive.ready", (e => {
                ee.set("deferred", !1), Le(e.url)
            })), _("source.adaptive.error", (e => {
                Ce(Ae(e, {errorReport: {errorData: {nextModel: Oe()}}}))
            })), _("source.adaptive.quality.changed", (e => {
                T = e.quality
            })), _("autoplay.promise.changed", (e => {
                !1 === e.autoplay && (Ie(), X = !0, ee.set("started", !1))
            })), _("visibility.changed", Ue), _("source.quality.set", (({quality: e, auto: t, manual: n}, r, i) => {
                D(i, e, t, n), be({quality: e, auto: t}, null, n)
            })), _("source.load", (e => {
                _e(e.sources)
            })), _("playback.seek.deferred", (e => {
                const {offset: t, playAfter: n} = e;
                V = !!t && {offset: t, playAfter: n}
            })), _("source.stalled", (e => {
                ee.set("videoStalled", e.stalled), p.ie && Me()
            })), _("playback.loadstart", (() => {
                Me()
            })), _("playback.loadeddata", (() => {
                Ie()
            })), _("playback.waiting", (() => {
                4 !== e.readyState && Me()
            })), _("playback.canplay", (() => {
                Ie()
            })), _("source.unload", (({destroy: e, reload: t, callback: n}) => ve(e, t, n))), _("source.ready.options", (e => {
                c(e) || ($ = e)
            })), te.mediaDefinition.length > 0 ? _e() : h ? setTimeout((() => {
                v("skin.offline")
            }), 1e3) : He("noSources");
            let xe = !1;

            function ke() {
                Q && z && !Ye() && (O = Ae({}, y.getDefaultQuality()), B = Se(), c(B) ? E = O : (E = Ae({}, O, B), E.auto && (E.quality = B.quality <= O.quality ? Math.max(O.quality, B.quality) : E.quality)), D("sourceController - init", E, y), v("source.quality.ready", {
                    url: y.getSource(E).url,
                    currentQuality: E,
                    isAdaptiveNative: Fe(),
                    resolutions: y.getResolutions()
                }), Re(E), xe || (v("player.ready"), xe = !0))
            }

            function Ce(t = {}) {
                k = t.time || k || e.currentTime;
                const n = t.errorReport || {}, r = K(n.errorData || {}, {adaptive: !0, model: ue, time: k}), i = () => {
                    r.track = !ae, b.fire(n.name, n.message, r), ae = !1, ce = !0, he()
                };
                c(P) ? i() : Ee().then(i)
            }

            function Le(t) {
                if (!t) return;
                L || J === e.duration || (J = e.duration), A = W ? J || te.duration : e.duration || 0, S = "", F = hr.states.READY, Te();
                const {offset: n, playAfter: r} = V, i = ee.get("playing") || ee.get("started") || r || Y;
                let a = {
                    url: t,
                    quality: w.quality,
                    format: w.format,
                    model: ue,
                    adaptive: Ne(ue),
                    started: ee.get("started"),
                    playing: i,
                    time: L || ee.get("mainRollPlayed") && !ee.get("changingQuality") ? 0 : n || x || N || 0,
                    duration: A,
                    fallbacking: ee.get("fallbacking"),
                    deferred: ee.get("deferred"),
                    wasDeferred: ee.get("wasDeferred"),
                    initialSeek: !ee.get("started") && N > 0
                };
                c($) || (a = Ae({}, a, $), $ = {}), q = !1, v("source.ready", a), x = void 0, k = void 0, ee.set("changingQuality", !1), ee.set("fallbacking", !1), M("sourceController - source.ready:", a)
            }

            function Re(n) {
                if (D("sourceController - setInitialQuality:", n), x = N || 0, pe) return l([e, t], (e => {
                    e.setAttribute("preload", "none")
                })), void Pe(n);
                Z ? (we(Z), Z = "") : be(n)
            }

            function Pe(e, t) {
                if (M("sourceController - setDeferredSource", e, typeof t), ee.get("mainRollPlayed")) return;
                const n = Te(e || E);
                v("source.deferred", n), ee.set("deferred", !0), E = e, S = "", ce = !1, Le(n.url), "function" == typeof t && t()
            }

            function Ie() {
                clearTimeout(C)
            }

            function Me() {
                !ee.get("started") && X || (Ie(), C = setTimeout((() => {
                    v("source.hanging", {videoUrl: ne, videoId: re, seconds: ie})
                }), 1e3 * ie))
            }

            function De() {
                return !c(P) && P
            }

            function Oe() {
                return y.format && le[le.indexOf(y.format) + 1]
            }

            function Be(e) {
                return e = e || y.format, s.indexOf(e) > -1
            }

            function Ne(e = ue) {
                return d.indexOf(e) > -1
            }

            function Fe() {
                return "hlsNative" === ue
            }

            function Ue(t) {
                t.visible && "hlsNative" === ue && !ee.get("playing") && ee.get("stalled") && !L && (p.ios && u.version >= 14 || p.tablet && p.macos || !p.tablet && p.macos && p.safari && g.version >= 14) && (D("Recover player!"), v("source.recover", {offset: e.currentTime - .01}))
            }

            function He(t) {
                e.pause(), v("source.unavailable", {message: t})
            }

            function Ye() {
                return !(!t.getAttribute("src") && !e.getAttribute("src"))
            }

            return {
                destroyAdaptiveController: Ee,
                getAdaptiveController: De,
                getAdaptiveQuality: () => T,
                getCurrent: () => Te(),
                getFormat: () => y.format,
                getModel: () => y,
                getProgressiveSource: function (e) {
                    return new Promise(((t, n) => {
                        function r() {
                            e = j(e) ? e : se.mp4.getMaxQuality().quality;
                            const r = se.mp4.getSource({auto: !1, quality: e});
                            r ? t(r) : n("sourceController - could not get progressive quality")
                        }

                        se.mp4 ? r() : se.mp4 = ge("mp4", r, (() => {
                            n(!1)
                        }))
                    }))
                },
                getQuality: function () {
                    return E
                },
                getSource: Te,
                getSourceTag: () => t,
                getState: function (e) {
                    if (e) {
                        const e = hr.states;
                        return i(e).find((t => e[t] === F))
                    }
                    return F
                },
                getStoredQuality: Se,
                getVideoTag: () => e,
                isAdaptive: Be,
                isAdaptiveNative: Fe,
                isSourceDeferred: () => ee.get("deferred"),
                isSourceSet: Ye,
                load: _e,
                loadDeferredSource: function (e) {
                    return !q && (M("sourceController - loadDeferredSource", e), x = e || N, v("source.waiting"), pe = !1, ee.set({
                        started: !0,
                        deferred: !1,
                        wasDeferred: !0
                    }), ee.set("deferred", !1), Re(E), !0)
                },
                setQuality: be,
                unload: ve
            }
        }

        hr.states = {NOT_READY: 1, READY: 2, SWITCHING_SOURCE: 3, WAITING: 4, DEFERRED_SOURCE: 5};
        const _r = hr;
        const vr = function (e, n, r) {
            const {is: i, embed: a} = H.get(), {subscribe: o, fire: s} = de.get(n.playerId), l = new Dt({
                started: !1,
                playing: !1,
                playbackAttempted: !1,
                seeking: !1,
                videoReady: !1,
                ended: !1,
                looped: !1,
                deferredSeek: !1,
                deferredPause: !1,
                initialSeek: !1,
                playAfterSeek: !1,
                autoplayFailed: !1,
                casting: !1,
                mainRollEnded: !1,
                adRollReady: !1,
                adRollsPlayed: !1,
                adRollStarted: !1,
                hasPostRoll: !1,
                postRollEnded: !1,
                inPostRollOverState: !1
            }, n.playerId, "PlaybackController"), d = n.mainRoll.duration;
            let p, u, g, m, f, h, _, v = !1;

            function b() {
                return l.get("inPostRollOverState") ? y() : l.get("casting") ? r.chromecast.currentTime : e.currentTime
            }

            function y() {
                return (l.get("adRollReady") ? g : u) || d || 0
            }

            function A() {
                return m.getCurrent().videoUrl
            }

            function E() {
                return l.get("casting") ? r.chromecast : (e.seek || (e.seek = t => {
                    e.currentTime = t
                }), e)
            }

            function T(e) {
                const t = {deferred: !1};
                c(e) || (e = K({}, t, e), s("source.ready.options", e))
            }

            function S(e = 0) {
                return !h() && !l.get("loadingSource") && (l.get("mainRollEnded") || f() && e + 1 < y())
            }

            function x(e) {
                l.set("loadingSource", !0), l.set("mainRollEnded", !1), c(e) || T(e), m.load(null)
            }

            function k(e) {
                l.set("loadingSource", !0), c(e) || T(e), _()
            }

            function C(e) {
                if (l.get("started") || s("playback.beforeplay"), s("playback.waiting"), l.set("playbackAttempted", !0), f()) return k(e), !0;
                {
                    if (S()) return void x();
                    l.set("playing", !0);
                    const e = E().play();
                    e ? e.then((() => {
                    })).catch((() => {
                        l.set("playing", !1)
                    })) : l.set("playing", !0)
                }
                return l.set("deferredPause", !1), !0
            }

            function L(e = !0) {
                if (l.get("playing")) {
                    E().pause(), a || l.get("adRollStarted") || e || s("player.rolls.pause")
                } else U(!1), l.set({deferredPause: !0, playAfterSeek: !1});
                return !0
            }

            function R(t) {
                (l.get("casting") ? r.chromecast.playing : !e.paused && l.get("started")) ? L(t && t.preventPauseRoll) : C()
            }

            function P() {
                if (f()) return k(), !0;
                !i.desktop && r.autoplay.get() && s("volume.toggle", {mute: !0});
                const e = E().play();
                l.set("playbackAttempted", !0);
                return !e || (e.then((() => {
                    r.benchmark.stop("autoplay_started"), s("autoplay.promise.changed", {autoplay: !0})
                })).catch((() => {
                    l.set("playAfterSeek", !1), l.get("autoplayFailed") || (l.set("autoplayFailed", !0), l.set("started", !1), l.set("playing", !1), l.set("seeking", !1), s("autoplay.promise.changed", {autoplay: !1}))
                })).finally((() => {
                    r.benchmark.print()
                })), !0)
            }

            function I(e, t = !1) {
                if (M("MGP - Seek:", e = parseFloat(e), t), z(e)) return !1;
                const n = t => (U({offset: e, playAfter: t}), !1);
                if (S(e)) return l.set("seeking", !0), void x({time: e, playing: t});
                if (!l.get("videoReady")) return n(r.autoplay.get());
                if (l.get("adRollStarted")) return C(), !1;
                if (l.get("seeking") && !l.get("loadingSource")) return n(t);
                const i = b();
                v = l.get("playing"), l.set("deferredPause", !1);
                const a = y();
                if (a && e + .5 >= a && (C({time: e = a - .05}), t = !1), !l.get("casting") && f()) return k({
                    time: e,
                    playing: t
                }), !0;
                l.set("seeking", !0), l.set("playAfterSeek", t), s("playback.seek.started", {
                    from: i,
                    to: e,
                    duration: a,
                    playAfter: t
                });
                return E().seek(e, t), s("player.rolls.hide"), !0
            }

            function D() {
                return l.get("looped")
            }

            function O() {
                const e = !l.get("looped");
                return l.set("looped", e), s("playback.looped", {looped: e}), e
            }

            function B(e) {
                if (!l.get("seeking")) return;
                l.set("seeking", !1), e || s("playback.seek.ended");
                const t = b();
                l.get("recovering") && (l.set("recovering", !1), s("playback.paused", {time: t}), s("player.rolls.pause")), l.get("playing") || l.get("initialSeek") && (l.set("playing", !1), s("playback.paused", {time: t})), !1 !== l.get("deferredSeek") ? (I(l.get("deferredSeek").offset, l.get("deferredSeek").playAfter), U(!1)) : l.get("deferredPause") ? (L(), s("playback.paused", {time: t})) : l.get("playAfterSeek") ? l.get("started") ? C() : P() : l.get("initialSeek") ? (l.set("initialSeek", !1), l.get("started") && i.ios && C()) : v || (l.set("playing", !1), s("playback.paused", {time: t}))
            }

            function N(t) {
                l.get("postRollEnded") || (l.set("inPostRollOverState", t), l.set("postRollEnded", !0), l.set("adRollsPlayed", !0), l.set("adRollReady", !1), t && (e.currentTime = u, m.unload()), t || s("player.rolls.post"), l.set("hasPostRoll", !1))
            }

            function F() {
                e.ondurationchange = () => {
                }, e.ontimeupdate = () => {
                }, e.onprogress = () => {
                }, e.onwaiting = () => {
                }, e.onpause = () => {
                }, e.onplaying = () => {
                }, e.onseeked = () => {
                }, e.oncanplay = () => {
                }, e.onended = () => {
                }
            }

            function U(e) {
                l.set("deferredSeek", e);
                let n = {state: t(e)};
                n.state && (n = K(n, e)), s("playback.seek.deferred", n)
            }

            return p = r.autoplay.get(), o("adroll.skipped", (({startPoint: e}) => {
                0 !== e || l.get("hasPostRoll") || l.set("adRollsPlayed", !0), 100 === e && N(!1)
            })), o("cast.changed", (e => l.set("casting", e.active))), o("adroll.ready", (({getRollProp: e}) => {
                g = e("duration"), l.set("adRollReady", !0), r.benchmark.stop("adroll_loaded")
            })), o("adroll.started", (({get: e}) => {
                l.set("adRollsPlayed", e("last")), l.set("adRollStarted", !0)
            })), o("adroll.ended", (({get: e}) => {
                l.set({adRollStarted: !1, adRollReady: !1}), 100 === e("startPoint") && N(!0)
            })), o("cast.playing", (() => {
                l.set("playing", !0), s("playback.playing")
            })), o("cast.paused", (() => {
                l.set("playing", !1), s("playback.paused")
            })), o("cast.time.changed", (e => {
                s("playback.time.changed", e)
            })), o("cast.seek.ended", (() => {
                B(!0)
            })), o("fullscreen.toggle", (e => {
                !0 === e.pause && L(!0)
            })), o("playback.toggle", (({isManual: e}) => {
                R(e ? {preventPauseRoll: l.get("adRollReady")} : {})
            })), o("playback.play", C), o("playback.pause", (({isManual: e}) => {
                L(!e)
            })), o("playback.seek", (e => {
                I(e.offset || 0, e.playAfter || !1)
            })), o("playback.loop", O), o("source.ready", (e => {
                l.set("videoReady", !0), l.set("seeking", !1), r.benchmark.stop("video_ready"), !l.get("adRollReady") && e.duration && (u = e.duration || d), p || l.get("started") || r.benchmark.print();
                const t = (!l.get("playbackAttempted") || l.get("adRollReady")) && p,
                    i = l.get("playbackAttempted") && (l.get("playing") || e.playing);
                if (e.deferred && j(n.mainRoll.duration, !1) && s("playback.duration.changed", {duration: parseFloat(n.mainRoll.duration)}), l.get("deferredSeek") && I(0), l.get("inPostRollOverState") && l.set("inPostRollOverState", !1), !e.time || e.deferred || l.get("adRollStarted")) i ? C() : t && P(); else {
                    const n = i || t || e.fallbacking;
                    I(e.time, n)
                }
            })), o("source.fallback", (() => {
                l.set("seeking", !1)
            })), o("source.recover", (({offset: e}) => {
                l.set("recovering", !0), I(e, !1)
            })), o("adroll.init", (({empty: e, postRoll: t}) => {
                l.set("adRollsPlayed", e), l.set("hasPostRoll", t)
            })), o("player.destroyed", F), e.addEventListener("durationchange", (e => {
                l.get("adRollReady") ? g = e.target.duration : u = e.target.duration, s("playback.duration.changed", {duration: y()})
            })), e.addEventListener("playing", (() => {
                l.set("ended", !1);
                const e = l.get("started");
                if (e || l.set("started", !0), l.get("deferredPause")) return l.set("deferredPause", !1), void L();
                l.set("playing", !0), (l.get("initialSeek") || l.get("seeking")) && e || (s("playback.playing", {
                    playAfterSeek: l.get("playAfterSeek"),
                    time: b()
                }), s("player.rolls.hide"), l.set("loadingSource", !1))
            })), e.addEventListener("pause", (() => {
                l.set("playing", !1), l.get("seeking") || s("playback.paused", {time: b()}), l.set("playAfterSeek", !1)
            })), e.onseeked = () => {
                B()
            }, e.ontimeupdate = e => {
                if (s("playback.buffering", {
                    buffered: e.target.buffered,
                    duration: y()
                }), (i.ios || i.macos && i.safari) && !l.get("playing") && l.set("playing", !0), "SWITCHING_SOURCE" !== m.getState(!0)) {
                    const e = y();
                    let t = b() || 0;
                    t < 0 && (t = 0), t > e && (t = e), s("playback.time.changed", {
                        time: t,
                        duration: e,
                        playing: l.get("playing")
                    })
                }
            }, e.onprogress = ({target: e}) => {
                s("playback.buffering", {buffered: e.buffered, duration: y()})
            }, e.onloadstart = () => {
                s("playback.loadstart")
            }, e.onloadeddata = () => {
                s("playback.loadeddata")
            }, e.onwaiting = () => {
                s("playback.waiting"), l.get("seeking") || l.set("playing", !1)
            }, e.oncanplay = () => {
                s("playback.canplay")
            }, e.onended = () => {
                const e = D();
                l.set("ended", !0), l.set("playing", !1), l.set("deferredPause", !1), l.get("mainRollEnded") || l.set("mainRollEnded", !l.get("adRollReady")), s("playback.ended", {looped: e}), l.get("adRollsPlayed") && (l.set("playAfterSeek", !1), l.get("hasPostRoll") ? N(!0) : e ? C() : l.get("mainRollEnded") && !l.get("inPostRollOverState") && s("player.rolls.post"))
            }, function () {
                const t = e.getElementsByTagName("source")[0];
                m = new _r(e, t, n, p), ({isSourceDeferred: f, isSourceSet: h, loadDeferredSource: _} = m)
            }(), {
                autoplay: P,
                getDuration: y,
                getTime: b,
                getUrl: A,
                getUrlWithTime: function () {
                    return w(A(), b())
                },
                isLooped: D,
                isPlaying: () => l.get("playing"),
                pause: L,
                play: C,
                seek: I,
                source: m,
                state: l,
                toggle: R
            }
        };
        const br = function (e, t, n) {
            const r = window.document, i = t.playerId, {is: a} = H.get(), {fire: o, subscribe: s} = de.get(i),
                d = new Dt({enabled: !1, active: !1}, i, "FullscreenController"),
                c = ["webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange", "fullscreenchange"];
            let p, u, g = "";

            function m(e) {
                return !(!d.get("enabled") || !d.get("active")) && (g = e || "", r.cancelFullScreen ? r.cancelFullScreen() : r.mozCancelFullScreen ? r.mozCancelFullScreen() : r.webkitCancelFullScreen ? r.webkitCancelFullScreen() : r.msExitFullscreen && r.msExitFullscreen(), !0)
            }

            function f() {
                const t = r.fullscreenElement || r.webkitFullscreenElement || r.mozFullScreenElement || r.msFullscreenElement || !1;
                t ? t.id === i && (d.get("active") || (d.set("active", !0), o("fullscreen.changed", {
                    fullscreen: !0,
                    event: g
                }), St(e, "fullscreen"), g = "")) : function () {
                    if (d.get("active") && (d.set("active", !1), g || (g = "esc"), e && xt(e, "fullscreen"), o("fullscreen.changed", {
                        fullscreen: !1,
                        event: g
                    }), a.ios && e.paused)) {
                        const t = 1e3, n = 100, r = () => clearInterval(a);
                        let i = 0;
                        const a = setInterval((() => {
                            if (e.webkitDisplayingFullscreen) return i += n, void (i >= t && r());
                            r(), o("playback.play")
                        }), n)
                    }
                }()
            }

            function h() {
                (e.requestFullScreen || e.mozRequestFullScreen || e.webkitRequestFullScreen || e.msRequestFullscreen || e.webkitEnterFullscreen) && (d.set("enabled", !0), l(c, (e => {
                    r.addEventListener(e, f)
                })), a.ios && l(c, (t => {
                    e.addEventListener(t, f)
                })), s(["buttons.collapse", "buttons.expand", "buttons.share", "player.redirected"], m), e.addEventListener("webkitendfullscreen", (() => {
                    d.set("active", !0), f()
                })), e.addEventListener("webkitbeginfullscreen", (() => {
                    o("fullscreen.changed", {fullscreen: !0, event: ""})
                })))
            }

            function _() {
                const r = {navigationUI: "hide"}, i = () => {
                    t.features.iosFullscreen && e.webkitSupportsFullscreen ? e.webkitEnterFullscreen() : e.requestFullScreen ? e.requestFullScreen(r) : e.mozRequestFullScreen ? e.mozRequestFullScreen(r) : e.webkitRequestFullScreen ? e.webkitRequestFullScreen(r) : e.msRequestFullscreen && e.msRequestFullscreen()
                };
                p || !a.ios && !a.tablet ? i() : a.firefox ? (i(), n.play()) : (u = !0, n.play())
            }

            function v(e) {
                return !(!d.get("enabled") || d.get("active")) && (g = e || "", _(), !0)
            }

            function b(e) {
                return !!d.get("enabled") && (g = e || "", d.get("active") ? m(e) : v(e), !0)
            }

            return s("fullscreen.toggle", (e => {
                b(e.area || "")
            })), s("playback.playing", (() => {
                p = !0, u && (_(), u = !1)
            })), h(), {
                element: e, get enabled() {
                    return d.get("enabled")
                }, get active() {
                    return d.get("active")
                }, enter: v, exit: m, toggle: b
            }
        };
        const yr = function (e, t, n) {
            const {is: r, embed: i} = H.get(), {fire: a, stopOrPrevent: o, subscribe: s} = de.get(n.playerId);
            let l, d, c = on(e);
            if (!i && !r.desktop && !r.tablet) return s("preroll.ready", (() => d = !0)), s("preroll.ended", (() => d = !1)), window.addEventListener("scroll", Ln((() => {
                c = on(e)
            }), 200)), "orientation" in window.screen && n.features.autoFullscreen ? window.screen.orientation.addEventListener("change", (e => {
                "landscape-primary" === window.screen.orientation.type || "landscape-secondary" === window.screen.orientation.type ? p() : u(), o(e, !0, !0)
            })) : "orientation" in window && n.features.iosAutoFullscreen && (l = !0, window.addEventListener("orientationchange", (e => {
                const t = Math.abs(window.orientation);
                t > 0 && t < 180 ? p() : u(), o(e, !0, !0)
            }))), {};

            function p() {
                c && (a("orientation.changed", {orientation: "landscape"}), l && d || t.enter("landscape"))
            }

            function u() {
                a("orientation.changed", {orientation: "portrait"}), t.exit("portrait")
            }
        };
        const Ar = function (e) {
            const {fire: t, subscribe: n} = de.get(e.playerId);
            let r = !1;

            function i() {
                if (!r) return !1;
                const e = st.get("hotspots");
                return void 0 === e || e
            }

            function a(e) {
                e = !!e, r && e !== i() && (st.set("hotspots", e), t("hotspots.changed", {hotspots: e}))
            }

            function s(e) {
                o(e) ? a(!i()) : a(e)
            }

            return !e.embeds.enabled && e.hotspots && e.hotspots.enabled && e.hotspots.data && e.hotspots.data.length && e.features.hotspots && (r = !0), n("hotspots.toggle", (e => {
                s(e.enabled)
            })), {get: i, set: a, toggle: s, enabled: () => r}
        };
        const Er = function (e) {
            const {fire: t, subscribe: n} = de.get(e.playerId);

            function r() {
                return !e.features.autoplay || (!1 === e.autoplay || e.embeds.enabled)
            }

            function i() {
                if (r()) return !1;
                const e = st.get("autoplay");
                return !!o(e) || e
            }

            function a(e) {
                return !r() && i() !== e && (st.set("autoplay", e), t("autoplay.changed", {autoplay: e}), !0)
            }

            return n("autoplay.toggle", (() => {
                a(!i())
            })), {get: i, set: a, available: () => !r()}
        };
        const Tr = function (e, t) {
            const {is: n} = H.get(), {subscribe: r, fire: i} = de.get(t.playerId);
            let a, s, l = !1;

            function d() {
                return t.features.ignorePreferences || !t.features.volume
            }

            function c() {
                const e = {volume: 100, muted: false};
                if (d()) return s || e;
                return st.get("volume") || s || e
            }

            function p(e) {
                l = he(e) ? e : l || !1
            }

            function u(t, n, r) {
                e.changingVolume = !0, p(r), t > 100 && (t = 100), t < 0 && (t = 0), n !== e.muted && (e.muted = n), t !== 100 * e.volume && (e.volume = t / 100)
            }

            function g() {
                return c().muted
            }

            function m() {
                return c().volume
            }

            function f(e) {
                u(m(), !0, e), i("volume.muted")
            }

            function h(e) {
                u(m(), !1, e), i("volume.unmuted")
            }

            function _(e) {
                g() ? h(e) : f(e)
            }

            function v(e) {
                u(m() + 10, !1, e)
            }

            function b(e) {
                u(m() - 10, !1, e)
            }

            return e.onvolumechange = t => {
                e.changingVolume || p(!n.desktop), function (e, t) {
                    if (s = {volume: e, muted: t}, i("volume.changed", s), d()) return !1;
                    l && (st.set("volume", s), l = !1)
                }(100 * t.target.volume, t.target.muted)
            }, r("source.ready", (() => {
                a = c(), u(a.volume, a.muted), e.changingVolume = !1
            }), !0), r("autoplay.promise.changed", (e => {
                e.autoplay || n.desktop || h()
            })), r("volume.toggle", (e => {
                const {manual: t} = e;
                o(e) || o(e.mute) ? _(t) : !0 === e.mute ? f(t) : h(t)
            })), r("volume.increase", (({manual: e}) => {
                v(e)
            })), r("volume.decrease", (({manual: e}) => {
                b(e)
            })), r("volume.set", (({volume: e, manual: t}) => {
                j(e) && u(e, !1, t)
            })), {
                get: m,
                set: function (e) {
                    u(e, g())
                },
                increase: v,
                decrease: b,
                mute: f,
                unmute: h,
                muted: g,
                toggle: _,
                enabled: () => !d(),
                disabled: d,
                delta: 10
            }
        };
        const wr = function (e, t) {
            const {is: n} = H.get(), {subscribe: r, fire: i} = de.get(t),
                a = new Dt({verticalPlayer: !1, checked: !1}, t, "VerticalVideosDetector");
            let o = !1;
            const s = Ce(".videoWrapper video");
            return r("adroll.ready", (() => o = !0)), r("adroll.ended", (() => o = !1)), r("source.ready", (e => {
                if (e.started) return;
                if (o) return;
                const t = s.videoWidth / s.videoHeight;
                let n;
                n = t < .6125 && t > .5125 ? "9x16" : t < 1.8277777777777777 && t > 1.7277777777777776 ? "16x9" : t < .8 && t > .7 ? "3x4" : t < 1.3833333333333333 && t > 1.2833333333333332 ? "4x3" : "other", i(t > 1 ? "layout.horizontal" : "layout.vertical", {
                    aspect: t,
                    text: n,
                    width: s.videoWidth,
                    height: s.videoHeight
                })
            })), {
                checked: () => a.get("checked"), check: function (t, r) {
                    if (n.ie || n.edge) return !1;
                    const o = document.createElement("canvas"), s = document.createElement("img");
                    return e.appendChild(o), e.appendChild(s), s.style.position = "absolute", s.style.zIndex = "-1", s.style.visibility = "hidden", s.width = r.width, s.height = r.height, o.style.position = "absolute", o.style.zIndex = "-1", o.style.visibility = "hidden", o.width = r.width, o.height = r.height, s.onload = () => {
                        const t = o.getContext("2d"), n = Math.floor(r.width / r.thumbWidth),
                            l = Math.floor(r.height / r.thumbHeight);
                        let d, c, p, u, g, m, f, h, _, v, b, y, A, E, T, w;
                        t.drawImage(s, 0, 0, r.width, r.height);
                        let S = !0, x = !0, k = !0, C = !0;

                        function L(e) {
                            return e % 2 == 0
                        }

                        for (d = 0; d < n; d++) for (c = 0; c < l; c++) p = d * r.thumbWidth, u = c * r.thumbHeight, g = r.thumbWidth / r.thumbHeight, m = g > 1.3 && g < 1.35 ? Math.round(p + r.thumbWidth * (L(d) ? .14 : .86)) : Math.round(p + r.thumbWidth * (L(d) ? .3125 : .6875)), f = Math.round(p + r.thumbWidth * (L(d) ? .9375 : .0625)), h = Math.round(u + r.thumbHeight * (L(d) ? .888 : .111)), _ = Math.round(u + r.thumbHeight / 2), v = Math.round(p + r.thumbWidth / 2), S && (b = t.getImageData(m, _, 1, 1).data, E = Math.round((b[0] + b[1] + b[2]) / 3), E > 18 && (S = !1, C = !1)), x && (y = t.getImageData(f, _, 1, 1).data, T = Math.round((y[0] + y[1] + y[2]) / 3), T > 18 && (x = !1, S = !1, C = !1)), x || S || (k && (A = t.getImageData(v, h, 1, 1).data, w = Math.round((A[0] + A[1] + A[2]) / 3)), k && w > 18 && (k = !1, C = !1));
                        e.removeChild(o), e.removeChild(s), C ? S ? i("layout.thumbnails.vertical", {
                            text: "9x16",
                            crop: !0,
                            aspect: 9 / 16
                        }) : x ? i("layout.thumbnails.horizontal", {
                            text: "4x3",
                            crop: !0,
                            aspect: 4 / 3
                        }) : k && i("layout.thumbnails.horizontal", {
                            text: "16x9",
                            zoom: !0,
                            aspect: 16 / 9
                        }) : a.get("verticalPlayer") && i("layout.thumbnails.vertical", {
                            text: "9x16",
                            crop: !1,
                            aspect: 9 / 16
                        })
                    }, s.crossOrigin = "Anonymous", s.src = r.url, a.set("checked", !0), !0
                }
            }
        };
        const Sr = function (e, t, n) {
            const r = n.playerId, {subscribe: i} = de.get(r), a = new wr(e, r), o = n.mainRoll, s = o.duration,
                l = o.thumbs, d = /{(\d+)}/, c = [], p = [];
            let u, g;

            function m(e) {
                for (let t = 0; t < c.length; t++) if (!c[t].cached) {
                    if (!e) {
                        f(c[t], m);
                        break
                    }
                    f(c[t])
                }
                return !0
            }

            function f(e, t) {
                const n = document.createElement("img"), r = l.format.split("x"), i = parseInt(r[0], 10),
                    a = parseInt(r[1], 10);
                n.crossOrigin = "Anonymous", n.onload = function () {
                    e.loaded = !0, e.ready = !0, "centro" === e.cdnType || this.naturalWidth === e.width && this.naturalHeight === e.height || (e.width = this.naturalWidth, e.height = this.naturalHeight, e.thumbWidth = this.naturalWidth / i, e.thumbHeight = this.naturalHeight / a), e.url = n.src, t && t()
                }, n.onerror = () => {
                    e.error = !0, t && t()
                }, n.src = e.url, e.cached = !0, e.image = n, l.progressive && t && h(n, e, t)
            }

            function h(e, t, n) {
                e.naturalWidth > 0 && e.naturalHeight > 0 && (t.ready = !0, n()), t.loaded || t.ready || t.error || setTimeout((() => {
                    h(e, t)
                }), 100)
            }

            return function () {
                const e = l.urlPattern;
                let t, n = null, r = 1, i = 1, a = 1;
                if (!e.length) return;
                if (u = parseInt(l.samplingFrequency, 10), "centro" === l.cdnType) {
                    if (s || I("ThumbnailsLoader: no mainRoll video duration available"), g = parseInt(s / l.samplingFrequency, 10), !g) return;
                    r = g + 1, i = 1, l.thumbWidth = 168
                } else {
                    if (n = l.format.split("x"), r = parseInt(n[0], 10), i = parseInt(n[1], 10), 2 !== n.length || z(r) || z(i)) return void I("ThumbnailsLoader: format (" + l.format + ") is not valid");
                    const t = e.match(d);
                    if (null === t) return void I("ThumbnailsLoader: urlPattern is not valid");
                    if (a = parseInt(t[1], 10) + 1, z(a) || 0 === a) return
                }
                for (let s = 0; s < a; s++) t = "centro" === l.cdnType ? e : e.replace(d, s), c[s] = {
                    index: s,
                    url: t,
                    thumbWidth: l.thumbWidth,
                    thumbHeight: l.thumbHeight,
                    width: l.thumbWidth * r,
                    height: l.thumbHeight * i,
                    cached: !1,
                    ready: !1,
                    loaded: !1,
                    error: !1,
                    cdnType: l.cdnType
                };
                let o = 0;
                for (let s = 0; s < a; s++) for (let e = 0; e < i; e++) for (let t = 0; t < r; t++) p[o] = {
                    index: o,
                    sheet: s,
                    row: e,
                    col: t,
                    cssLeft: -1 * t * l.thumbWidth + "px",
                    cssTop: -1 * e * l.thumbHeight + "px"
                }, o++
            }(), l.preload && i("source.ready", (() => {
                m(l.async)
            })), {
                preload: m, sheets: c, thumbnails: p, get: function (e, t) {
                    const n = window.Math.floor(e / u), r = p[n];
                    let i;
                    return r ? (i = c[r.sheet], !!i && (i.error ? (t && t(!1, !1, !1, {error: "error loading spritesheet"}), !1) : i.cached ? !!i.ready && (t && t(r, i, e), {
                        thumbnail: r,
                        sheet: i,
                        seconds: e
                    }) : (f(i, (() => {
                        a && !a.checked() && i.ready && a.check(r, i), t && t(r, i, e)
                    })), !1))) : (t && t(!1, !1, !1, {error: "out of time"}), !1)
                }, settings: l, samplingFrequency: u, slides: g
            }
        };
        const xr = function (e) {
            const {fire: t, subscribe: n} = de.get(e);
            let r, i = !1;
            n("adroll.started", (() => i = !0)), n("adroll.ended", (() => i = !1)), n("playback.time.changed", (e => {
                const n = Math.floor(e.duration) - Math.floor(e.time);
                n < 4 && i ? (!r && n || n === r - 1) && (r = n, t("adroll.countdown", {count: n})) : r > 0 && (r = 0)
            }))
        };
        const kr = function (e) {
            const {subscribe: t} = de.get(e.playerId);
            let n, r, i = !1, a = 0, o = 0, s = !1;

            function l(e) {
                s && (s = !1, clearTimeout(n), o += Math.floor(e) - Math.floor(a))
            }

            t("adroll.started", (() => {
                i = !0
            })), t("adroll.ended", (() => {
                i = !1
            })), t("playback.duration.changed", (e => {
                r = e.duration
            })), t("playback.playing", (t => {
                const r = e.viewedRequestURL || "", l = e.viewedRequestTimeout;
                !i && r && (a = Math.floor(t.time) || 0, o < l && (s = !0, n = setTimeout((() => {
                    o = l, Ge(r)
                }), 1e3 * l - 1e3 * o)))
            })), t("playback.ended", (() => {
                i || l(r)
            })), t("playback.paused", (e => {
                i || l(e.time)
            })), t("playback.seek.started", (e => {
                i || l(e.from)
            }))
        };
        const Cr = function (e, t) {
            const {fire: n, subscribe: r} = de.get(t.playerId), i = t.mainRoll.closedCaptions,
                a = t.closedCaptionsStyle, s = {};
            let d, c = !0, p = !1, u = t.features.ccVisible, g = 0, m = Object.keys(i)[0];

            function f() {
                return {lang: m, visible: p}
            }

            function h(e) {
                const t = f();
                return n("cc.changed", {...t, manual: e}), u ? (u = !1, !1) : (o(e) || st.set("closedCaptions", t), !0)
            }

            function _(e) {
                return c && n("cc.ready", {cc: d}), p = !0, h(e), !0
            }

            function v(t, n) {
                return s[t] || (t = f().lang), "string" == typeof t && e.load(s[t].url, (e => {
                    m = t, d = e.overlays, _(n)
                }))
            }

            function b() {
                return c = !0, p && _(), !0
            }

            function y() {
                return c = !1, !0
            }

            function A(e) {
                return p && (n("cc.ready", {cc: []}), p = !1, h(e)), !0
            }

            function E(e) {
                return !!c && (p ? A(e) : v(m, e), p)
            }

            function T() {
                return st.get("closedCaptions")
            }

            function w() {
                return K({}, a, T() || {})
            }

            function S(e, t) {
                const r = w();
                return r[e] = t, st.set("closedCaptions", r), n("cc.style.changed", {
                    options: r,
                    newStyle: e,
                    newValue: t
                }), !0
            }

            return l(i, ((e, t) => {
                e && e.url && Pe(e.url) && (e.label || (e.label = String(t).toUpperCase()), s[t] = e, g++)
            })), function () {
                const e = T();
                e ? (u = !1, e.visible && v(e.lang)) : u && v(m)
            }(), function () {
                let e = !0;
                r("playback.playing", (() => {
                    e && (e = !1)
                })), r("adroll.started", (() => {
                    y()
                })), r("adroll.ended", (() => {
                    b()
                })), r("cc.toggle", (() => {
                    E(!0)
                })), r("cc.hide", (() => {
                    A(!0)
                })), r("cc.set", (e => {
                    v(e.track, !0)
                })), r("cc.style.set", (e => {
                    S(e.name, e.val)
                }))
            }(), {
                tracks: s,
                count: g,
                elements: [],
                enabled: () => c,
                visible: () => p,
                enable: b,
                disable: y,
                set: v,
                get: f,
                getTracks: function () {
                    return s
                },
                show: _,
                hide: A,
                toggle: E,
                getOptions: w,
                setOptions: S
            }
        };
        let Lr = !1;
        const Rr = function (e) {
            const {firePublic: t} = de.get(e);
            let n, r;

            function i() {
                return !document[n]
            }

            return Lr || (Lr = !0, void 0 !== document.hidden ? (n = "hidden", r = "visibilitychange") : void 0 !== document.webkitHidden && (n = "webkitHidden", r = "webkitvisibilitychange"), document.addEventListener(r, (() => {
                t("visibility.changed", {visible: i()})
            }))), {isVisible: i}
        };
        const Pr = function (e) {
            const t = window.chrome.cast.ErrorCode;
            switch (e.code) {
                case t.API_NOT_INITIALIZED:
                    return "The API is not initialized." + e.description;
                case t.CANCEL:
                    return "The operation was canceled by the user" + e.description;
                case t.CHANNEL_ERROR:
                    return "A channel to the receiver is not available." + e.description;
                case t.EXTENSION_MISSING:
                    return "The Cast extension is not available." + e.description;
                case t.INVALID_PARAMETER:
                    return "The parameters to the operation were not valid." + e.description;
                case t.RECEIVER_UNAVAILABLE:
                    return "No receiver was compatible with the session request." + e.description;
                case t.SESSION_ERROR:
                    return "A session could not be created, or a session was invalid." + e.description;
                case t.TIMEOUT:
                    return "The operation timed out." + e.description
            }
        };
        const Ir = function (e, t, n, r) {
                const {subscribe: i} = de.get(e.playerId);
                let a = !1;
                t && t.enabled() && n.canControlVolume && (i("cast.changed", (e => {
                    a = e.active
                })), i("volume.changed", (e => {
                    a && (e.muted && !n.isMuted || !e.muted && n.isMuted ? r.muteOrUnmute() : (n.volumeLevel = e.volume / 100, r.setVolumeLevel()))
                })))
            }, Mr = "IDLE", Dr = "LOADING", Or = "PLAYING", Br = "PAUSED", Nr = "STOPPED", Fr = "ERROR",
            Ur = [Or, Br, Dr, "BUFFERING"], Hr = {};
        const Yr = function (e, t) {
            const {browser: n, is: r} = H.get(), {fire: i, subscribe: a} = de.get(e.playerId), o = t.playback,
                s = o.source;
            let l, d, c, p, u, g, m, h, _, v, b, y, A, E, T = Hr[e.quickSetup], w = Mr;

            function S() {
                "NO_DEVICES_AVAILABLE" !== u.getCastState() ? i("cast.available", {available: !0}) : i("cast.available", {available: !1})
            }

            function x() {
                return -1 !== Ur.indexOf(w)
            }

            function k(e) {
                w !== e && (E && e !== Fr || (w = e, i("cast.changed", {
                    active: x(),
                    castState: w,
                    castName: g,
                    hasError: e === Fr
                })))
            }

            function C() {
                i("cast.playing")
            }

            function L() {
                i("cast.paused", {time: b})
            }

            let R = () => {
                if (!h) return;
                let e = !h.isPaused;
                h.isConnected && (p.endSession(!0), e = !0), k(Nr), o.seek(b, e)
            };

            function P() {
                h.isPaused ? L() : C()
            }

            function M(e) {
                i("cast.seek.started"), h.currentTime = e, _.seek(), i("cast.seek.ended"), h.isPaused && i("cast.paused")
            }

            function D(t, n) {
                k(Fr), R();
                new or(e.playerId).fire("Chromecast Controller", t, n), I("MGP - Chromecast error:", t, n)
            }

            function O(t) {
                b = o.getTime(), y = o.getDuration(), k(Dr), s.getProgressiveSource(t).then((n => {
                    const r = c.MetadataType.GENERIC, i = [{url: e.mainRoll.poster}], a = e.mainRoll.title, o = t + "p",
                        s = new c.MediaInfo(n.url);
                    s.metadata = new c.GenericMediaMetadata, K(s.metadata, {
                        metadataType: r,
                        title: a,
                        subtitle: o,
                        images: i
                    });
                    const l = new c.LoadRequest(s);
                    l.autoplay = !h.isPaused, p.loadMedia(l).then((() => {
                        !function (e) {
                            b > 0 && M(b), E = !1, e.autoplay ? C() : (k(Br), L())
                        }(l)
                    }), (e => {
                        D("Cannot load source", {
                            fatal: !1,
                            type: "chromecast",
                            message: "CAST_ERROR_LOADING_MEDIA",
                            media: s,
                            code: e.code,
                            errorDetails: Pr(e)
                        })
                    }))
                })).catch((() => {
                    D("No source found", {fatal: !0, type: "chromecast", message: "CAST_NO_SOURCES", model: "mp4"})
                }))
            }

            function B() {
                x() && (y = h.duration, h.currentTime >= 1 && (b = h.currentTime), i("cast.time.changed", {
                    time: b,
                    duration: y
                }))
            }

            function N(e) {
                E = !0, O(e)
            }

            function F() {
                p = u.getCurrentSession(), h.isConnected && p ? (g = p.getCastDevice().friendlyName, function () {
                    const e = s.getSource(), t = A || "auto" === e.quality ? s.getAdaptiveQuality() : e.quality;
                    o.pause(!0), O(t)
                }()) : R()
            }

            function U() {
                k(h.playerState), (!h.isConnected || w === Mr && y && y === b) && R()
            }

            function Y() {
                !function () {
                    if (!r.desktop && r.chrome && n.version < 57) {
                        const t = document.createElement("style");
                        t.innerHTML = `#${e.playerId} .${f}videoWrapper video::-internal-media-controls-overlay-cast-button {\n\tdisplay: none !important;\n\t-webkit-appearance: none;\n}`, t.id = `${f}legacy-chromecast`, document.head.appendChild(t)
                    }
                }(), l = window.chrome.cast, c = l.media, d = window.cast.framework;
                const i = l.AutoJoinPolicy.PAGE_SCOPED;
                T = T || l.media.DEFAULT_MEDIA_RECEIVER_APP_ID, u = d.CastContext.getInstance(), u.addEventListener(d.CastContextEventType.CAST_STATE_CHANGED, S), u.setOptions({
                    receiverApplicationId: T,
                    autoJoinPolicy: i
                }), S(), h = new d.RemotePlayer, v = d.RemotePlayerEventType, _ = new d.RemotePlayerController(h), _.addEventListener(v.IS_CONNECTED_CHANGED, F), _.addEventListener(v.PLAYER_STATE_CHANGED, U), _.addEventListener(v.CURRENT_TIME_CHANGED, B), _.addEventListener(v.IS_PAUSED_CHANGED, P), new Ir(e, t.volume, h, _)
            }

            const G = () => {
                if (window.chrome.cast && window.chrome.cast.isAvailable && window.cast && window.cast.framework && window.cast.framework.RemotePlayer) try {
                    Y(), m = l.isAvailable
                } catch (e) {
                    k(Fr)
                } else m || setTimeout(G, 200)
            };
            return !(!window.chrome || !r.chrome) && (G(), a("source.quality.changed", (e => {
                x() && !E && N(e.quality)
            })), a("source.adaptive.quality.changed", (e => {
                A = e.quality, x() && !E && N(A)
            })), a("playback.time.changed", (() => {
                x() || (b = o.getTime())
            })), window.addEventListener("beforeunload", (() => {
                R(), R = () => {
                }
            })), {
                get active() {
                    return x()
                }, get currentTime() {
                    return h.currentTime
                }, get playing() {
                    return w === Or
                }, play: function () {
                    h.isPaused && _.playOrPause()
                }, pause: function () {
                    h.isPaused || _.playOrPause()
                }, seek: M, load: O
            })
        };
        const Gr = function (e, t) {
            let n;
            if (Yr) {
                const r = document.getElementsByTagName("head")[0], i = document.getElementById("cast_sender");
                if (n = document.createElement("script"), i) return !1;
                n.setAttribute("src", "//www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"), n.setAttribute("type", "text/javascript"), n.setAttribute("id", "cast_sender"), n.async = !0, n.onload = n.onreadystatechange = () => {
                    n.readyState && !/loaded|complete/.test(n.readyState) || (t.chromecast = new Yr(e, t), n.onload = n.onreadystatechange = null)
                }, r.appendChild(n)
            }
            return n
        };
        const Vr = function (e, t, n) {
            const {fire: r, subscribe: i} = de.get(n.playerId), a = e.getElementsByTagName("canvas")[0],
                o = new or(n.playerId);
            let s, l, d;
            switch (St(e, "vr"), n.vrProps.projection) {
                case 1:
                    s = window.VrPlayer.PROJECTION_EQUIDISTANT_180;
                    break;
                case 2:
                    s = window.VrPlayer.PROJECTION_EQUIRECTANGULAR_360;
                    break;
                case 3:
                    s = window.VrPlayer.PROJECTION_EQUIRECTANGULAR_180;
                    break;
                default:
                    throw new TypeError("MGP VR Controller: Invalid projection type")
            }
            if (n.vrProps.stereoSrc) switch (n.vrProps.stereoType) {
                case 1:
                    d = window.VrPlayer.STEREO_SIDE_BY_SIDE_LR;
                    break;
                case 2:
                    d = window.VrPlayer.STEREO_OVER_UNDER_LR;
                    break;
                case 3:
                    d = window.VrPlayer.STEREO_SIDE_BY_SIDE_RL;
                    break;
                case 4:
                    d = window.VrPlayer.STEREO_OVER_UNDER_RL;
                    break;
                default:
                    o.fire("VR Controller", "Invalid stereo type", {fatal: !0, type: "vr_error"})
            } else d = window.VrPlayer.MONO;
            try {
                l = new window.VrPlayer({
                    canvas: a,
                    video: t,
                    projection: s,
                    stereoType: d,
                    stereoView: !1
                }), i("source.quality.changed", (() => {
                    const e = !t.paused;
                    t.pause(), l.stop(), e && t.play()
                })), t.addEventListener("playing", (() => {
                    l.start()
                })), t.addEventListener("seeked", (() => {
                    l.start()
                })), window.addEventListener("resize", l.resize)
            } catch (c) {
                r("player.vr.error"), o.fire("VR Controller", "Failed to create an instance of VR player", {
                    fatal: !0,
                    type: "vr_error"
                })
            }
        };
        const Kr = function () {
            const e = {};
            let t;

            function n(e) {
                const t = e.split(":");
                let n, r, i = 0, a = 0;
                for (n = t.length - 1, r = 0; n >= 0; n--, r++) {
                    a = 60 ** r;
                    i += parseFloat(t[n].replace(",", ".")) * a
                }
                return i
            }

            function r(e, t) {
                const n = 10 ** t;
                return Math.round(e * n) / n
            }

            function i(e) {
                const i = [];
                let a = "vtt", o = (e + "\n\n").split(/\r?\n\r?\n/gm);
                return o.length ? (-1 !== o[0].toUpperCase().indexOf("WEBVTT") ? (a = "vtt", o = o.slice(1)) : a = "srt", l(o, (t => {
                    let a = t.split(/\r?\n/gm);
                    if (a[0].match(/^\d+$/) && (a = a.slice(1)), a.length >= 2) {
                        const t = a[0].match(/(\d\d*:)*(\d\d*)([.,]\d+)?/gi), o = a.slice(1).join("<br>\n");
                        if (t && t.length >= 2 && e.length) {
                            const e = n(t[0]), a = n(t[1]);
                            e < a && i.push({
                                label: o,
                                time: e,
                                endTime: a,
                                duration: r(a - e, 3),
                                hCentered: !0,
                                closeButton: !1,
                                border: !1,
                                type: "cc"
                            })
                        }
                    }
                })), t = "parsed") : t = "parseError", {text: e, overlays: i, format: a}
            }

            return {
                load: function (n, r) {
                    return e[n] ? a(r) && r(e[n], n) : Ge(n, !1, (function (o) {
                        t = "loaded", e[n] = i(o), a(r) && r(e[n], n)
                    }), (function () {
                        t = "error", I("There was a network error loading closed captions."), a(r) && r([])
                    })), !0
                }, getState: () => t, cached: e, parseText: i
            }
        };

        function zr() {
            let e, n, r, i, o, s, l, d = !1;
            const c = {
                adroll: !1,
                autoplay: !1,
                ads: null,
                cc: !1,
                chromecast: {},
                thumbnails: !1,
                hotspots: !1,
                volume: !1,
                speed: !1,
                fullscreen: !1,
                quality: !1,
                playback: !1
            }, p = {
                id: "",
                type: m,
                settings: {},
                mainRoll: {},
                sourceUrl: "",
                duration: 0,
                currentTime: 0,
                paused: !0,
                hlsSource: null,
                dashSource: null,
                hlsConfig: undefined,
                fullscreen: null,
                thumbnails: null,
                container: null,
                element: null,
                source: null,
                wrapper: null
            };
            return {
                autoNext: function () {
                    const e = e => {
                        r("nextvideo.changed", {action: e})
                    };
                    return {
                        enable: () => {
                            e("enable")
                        }, disable: () => {
                            e("disable")
                        }, hide: () => {
                            e("hide")
                        }, pause: () => {
                            e("stop")
                        }, resume: () => {
                            e("start")
                        }, show: () => {
                            e("show")
                        }
                    }
                },
                benchmark: () => l,
                destroy: function (n) {
                    return function (e, n, r) {
                        const i = window.MGP.players, o = window.MGP.players[e];
                        if (!t(o)) return !1;
                        const {fire: s} = de.get(e, n);
                        return s("player.destroyed"), de.destroy(e), delete i[e], a(r) && r(), !0
                    }(p.id, e, n)
                },
                fullscreen: function () {
                    return {enter: c.fullscreen.enter, exit: c.fullscreen.exit}
                },
                getCurrentState: () => c.playback.state.get(),
                getCurrentTime: function () {
                    return p.element.currentTime
                },
                init: function (t, a, s) {
                    l = s, c.benchmark = s, p.id = t, ({is: n} = H.get(a)), ({
                        fire: r,
                        subscribe: i
                    } = de.get(a.playerId)), e = new nr(a);
                    const u = new tr(t, m, e);
                    return p.container = u.playerContainerElement, p.wrapper = u.videoWrapper, p.element = u.playerElement, p.source = u.playerElementSource, o = In(u.selectors), new ir(p.container, e), function () {
                        const t = e.mainRoll;
                        p.mainRoll = t;
                        const a = p.element, s = p.container;
                        new Yn(e), new Gn(e), c.speed = new ar(a, e), c.autoplay = new Er(e), c.playback = new vr(a, e, c), c.adroll = new Hn(a, e);
                        const u = n.ios ? a : s;
                        c.fullscreen = new br(u, e, c.playback), c.orientation = new yr(s, c.fullscreen, e), c.hotspots = new Ar(e), c.volume = new Tr(a, e), c.thumbnails = new Sr(s, a, e), new xr(e.playerId), new kr(e), t.closedCaptions && (c.cc = new Cr(new Kr, e));
                        e.isVr && (c.vr = new Vr(s, a, e));
                        new Rr(e.playerId), o.init({
                            id: p.id,
                            container: p.container,
                            element: p.element,
                            source: p.source,
                            wrapper: p.wrapper,
                            settings: e
                        }, c), l.stop("skin_loaded"), void r("skin.ready"), void i("autoplay.promise.changed", (e => {
                            e.autoplay || (d = !0, c.ads && c.ads.enabled() && !d && r("adroll.ui.hide"), setTimeout((() => {
                                r("source.ready", {})
                            })))
                        })), e.features.chromecast && !e.isVr && new Gr(e, c);
                        l.stop("player_created")
                    }(), p
                },
                isPlaying: () => c.playback.isPlaying(),
                isReady: () => c.playback.state.get("videoReady"),
                mute: () => c.volume.mute(),
                pause: () => c.playback.pause(),
                play: () => c.playback.play(),
                seek: (...e) => c.playback.seek.apply(c.playback, e),
                settings: function () {
                    return s || (s = Mn(e), pe() && (s.mainRoll.mediaDefinition = [])), s
                },
                unmute: () => c.volume.unmute(),
                stream: {
                    load: e => {
                        r("source.load", {sources: e})
                    }, off: () => {
                    }
                }
            }
        }

        n(779);
        const jr = function (e, t, n, r = "top", i) {
                const a = Ce(e), o = Ce(t), s = () => {
                    const e = "scroll" + De(r);
                    n[e] = 0
                }, l = () => {
                    const e = "scroll" + De(r);
                    n[e] = 1e7
                };
                return i(a, s), i(o, l), {toStart: s, toEnd: l}
            },
            Qr = new Uint16Array([0, 4489, 8978, 12955, 17956, 22445, 25910, 29887, 35912, 40385, 44890, 48851, 51820, 56293, 59774, 63735, 4225, 264, 13203, 8730, 22181, 18220, 30135, 25662, 40137, 36160, 49115, 44626, 56045, 52068, 63999, 59510, 8450, 12427, 528, 5017, 26406, 30383, 17460, 21949, 44362, 48323, 36440, 40913, 60270, 64231, 51324, 55797, 12675, 8202, 4753, 792, 30631, 26158, 21685, 17724, 48587, 44098, 40665, 36688, 64495, 60006, 55549, 51572, 16900, 21389, 24854, 28831, 1056, 5545, 10034, 14011, 52812, 57285, 60766, 64727, 34920, 39393, 43898, 47859, 21125, 17164, 29079, 24606, 5281, 1320, 14259, 9786, 57037, 53060, 64991, 60502, 39145, 35168, 48123, 43634, 25350, 29327, 16404, 20893, 9506, 13483, 1584, 6073, 61262, 65223, 52316, 56789, 43370, 47331, 35448, 39921, 29575, 25102, 20629, 16668, 13731, 9258, 5809, 1848, 65487, 60998, 56541, 52564, 47595, 43106, 39673, 35696, 33800, 38273, 42778, 46739, 49708, 54181, 57662, 61623, 2112, 6601, 11090, 15067, 20068, 24557, 28022, 31999, 38025, 34048, 47003, 42514, 53933, 49956, 61887, 57398, 6337, 2376, 15315, 10842, 24293, 20332, 32247, 27774, 42250, 46211, 34328, 38801, 58158, 62119, 49212, 53685, 10562, 14539, 2640, 7129, 28518, 32495, 19572, 24061, 46475, 41986, 38553, 34576, 62383, 57894, 53437, 49460, 14787, 10314, 6865, 2904, 32743, 28270, 23797, 19836, 50700, 55173, 58654, 62615, 32808, 37281, 41786, 45747, 19012, 23501, 26966, 30943, 3168, 7657, 12146, 16123, 54925, 50948, 62879, 58390, 37033, 33056, 46011, 41522, 23237, 19276, 31191, 26718, 7393, 3432, 16371, 11898, 59150, 63111, 50204, 54677, 41258, 45219, 33336, 37809, 27462, 31439, 18516, 23005, 11618, 15595, 3696, 8185, 63375, 58886, 54429, 50452, 45483, 40994, 37561, 33584, 31687, 27214, 22741, 18780, 15843, 11370, 7921, 3960]);
        const Wr = function (e) {
            let t = 65535;
            for (let n of e) t = t >> 8 & 255 ^ Qr[255 & (t ^ n)];
            return 65535 & ~t
        }, qr = "hidden", Xr = "active";
        const Jr = function (e, t, n) {
            const r = Ce(e.timelineCounter), i = Ce(e.filteredCounter), a = Ce(e.filterString), o = Ce(e.filterClear),
                s = Ce(e.filterPlus), d = Ce(e.filterMinus);
            let c = 0, p = 0;
            const u = () => {
                r.innerHTML = c, i.innerHTML = p
            }, g = () => {
                p = 0;
                const e = t.querySelectorAll(`.${f}block`), n = t.querySelectorAll(`.${f}group`);
                l(e, (e => {
                    xt(e, qr)
                })), l(n, (e => {
                    xt(e, qr)
                })), u()
            }, m = (e, t, n) => {
                const r = e.getAttribute("title"), i = t.split(",");
                v(i, ((e, t) => e || -1 !== r.indexOf(t.trim())), !1) === n ? xt(e, qr) : (St(e, qr), p++);
                const a = e.parentNode;
                kt(a, "group") && (a.querySelectorAll(`.${f}block:not(.${f}hidden)`).length ? xt(a, qr) : St(a, qr))
            }, h = () => {
                const e = a.value.toLowerCase(), n = kt(s, Xr);
                if (e.length) {
                    p = 0;
                    const r = t.querySelectorAll(`.${f}block`);
                    l(r, (t => {
                        m(t, e, n)
                    })), u()
                } else g()
            };
            let _;
            return n(o, (() => {
                a.value = "", h()
            })), n(s, (() => {
                xt(d, Xr), St(s, Xr), h()
            })), n(d, (() => {
                xt(s, Xr), St(d, Xr), h()
            })), a.addEventListener("keyup", (() => {
                clearTimeout(_), _ = setTimeout((() => {
                    h()
                }), 500)
            })), {
                reset: () => {
                    c = 0, p = 0, u()
                }, clear: g, increase: () => {
                    c++, u()
                }, applyToElement: e => {
                    const t = a.value.toLowerCase(), n = kt(s, Xr);
                    m(e, t, n)
                }
            }
        };

        function $r(e, t, n, r) {
            const i = {
                timelineScrollStart: ".timelineScrollStart",
                timelineScrollEnd: ".timelineScrollEnd",
                filterString: ".filterString",
                filterClear: ".filterClear",
                filterPlus: ".filterPlus",
                filterMinus: ".filterMinus",
                timelineCounter: ".timelineCounter",
                filteredCounter: ".filteredCounter"
            };
            l(i, ((t, n) => {
                i[n] = ".debugPanel ." + e + "Tab " + t
            }));
            const a = new jr(i.timelineScrollStart, i.timelineScrollEnd, t, "left", r), o = new Jr(i, t, r),
                s = (e, t, r) => {
                    const i = ke(".block"), s = ke(".time");
                    return i.innerHTML = e.replace(/\./gi, "<br>\n"), i.style.background = (e => {
                        const t = e.split(".").slice(0, -1).join(".");
                        return "hsl(" + parseInt(Wr(t) / 256, 10) + ",40%,80%)"
                    })(e), i.setAttribute("title", e.toLowerCase()), t = parseInt(t, 10) || 10001, s.innerHTML = t > 1e4 ? "&infin;" : t + "ms", i.appendChild(s), r || (r = n), r.appendChild(i), a.toEnd(), o.applyToElement(i), o.increase(), i
                };
            return {
                reset: () => {
                    o.reset(), n.innerHTML = ""
                }, addItem: s, addGroup: e => {
                    if (e.length > 1) {
                        const t = ke(".group");
                        l(e, (e => {
                            s(e.event, e.delta, t)
                        })), t.setAttribute("count", e.length), n.appendChild(t), a.toEnd()
                    } else s(e[0].event, e[0].delta)
                }
            }
        }

        $r.generateFilterMarkup = e => `\n\t<div class="filter">\n\t\tTimeline Filtering: &nbsp;\n\t\t<div class="filterStringContainer">\n\t\t\t<input type="text" class="filterString" autocomplete="off">\n\t\t\t<button class="filterClear" title="CLEAR">✕</button>\n\t\t</div>\n\t\t<button class="filterPlus active" title="INCLUDE">+</button><button class="filterMinus" title="EXCLUDE">–</button>\n\t\t<div class="counters">\n\t\t\t${e}: <span class="timelineCounter"></span>\n\t\t</div>\n\t\t<div class="counters filtered">\n\t\t\tHidden: <span class="filteredCounter"></span>\n\t\t</div>\n\t</div>`, $r.generateControlsMarkup = () => '\n\t<div class="timelineControls">\n\t\t<span class="timelineScrollStart">««</span> &nbsp;\n\t\t<span class="timelineScrollEnd">»»</span>\n\t</div>', $r.generateMarkup = e => $r.generateFilterMarkup(e) + $r.generateControlsMarkup() + '\n\t<div class="timeline">\n\t\t<div class="scroller">\n\t\t</div>\n\t</div>';

        function Zr(e, t) {
            const {fire: n, subscribe: r, unsubscribe: i} = de.get(e);
            let a, o, s, l = 0, d = 0, c = !1;

            function p() {
                i(["playback.playing", "playback.paused", "adroll.started"], u), i("playback.time.changed", g)
            }

            function u(e, t, n) {
                a = "playing" === n.split(".").pop()
            }

            function g({time: e}) {
                if (!a) return;
                const t = Math.abs(e - l);
                l = e, t <= 1 && (d += t, d - s >= 0 && !c && (Ge(o, null, (() => {
                }), m), n("svvt.success", {url: o}), p(), c = !0))
            }

            function m(e, r) {
                p(), I(`*** MGP - SvvtTracker ***\n${e.name}: ${e.message}`), n("svvt.error", {
                    message: "svvt_" + r,
                    url: t
                })
            }

            function f(e) {
                try {
                    if (({
                        url: o,
                        playLength: s
                    } = JSON.parse(e)), !o || !s) throw new Error("Failure to parse SVVT response.");
                    s = parseFloat(s)
                } catch (t) {
                    m(t, "parseError")
                }
            }

            Pe(t) ? (r(["playback.playing", "playback.paused", "adroll.started"], u), r("playback.time.changed", g), Ge(t, null, f, (e => m(e, "networkError")))) : m(new Error("Required svvtRemote parameter is not a valid string path."), "configError")
        }

        const ei = {};
        window.MGP = {
            buildInfo: _, players: {}, defaults: ce, detector: null, setDefaults(e) {
                this.defaults = e
            }, createPlayer(e, t) {
                const n = Ae({}, ce, t), r = new me(e, R() || n.features.benchmarking);
                return n.playerId = e, de.get(e, n), this.players[e] = new zr, t.mainRoll.svvtRemote && new Zr(e, t.mainRoll.svvtRemote), this.players[e].init(e, n, r)
            }, destroyPlayer(e, t) {
                const n = this.players[e];
                return n ? n.destroy(t) : (I("*** MGP - destroyPlayer ***\n", "Missing player ID or player already destroyed."), !1)
            }, inspect(e) {
                const t = this.players, n = this.getPlayerIds();
                return c(ei) && l(n, (e => {
                    ei[e] = t[e].settings()
                })), e ? ei[e] : ei
            }, getPlayerIds() {
                return i(this.players)
            }, getThemeColors: () => pe() ? null : er.getColors()
        }
    })()
})();